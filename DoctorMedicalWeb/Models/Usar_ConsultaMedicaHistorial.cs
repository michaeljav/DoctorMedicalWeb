//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoctorMedicalWeb.Models
{
    using DoctorMedicalWeb.App_Data;
    using DoctorMedicalWeb.Libreria;
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Globalization;

    public class Usar_ConsultaMedicaHistorial
    {


        public int? DoctSecuencia_fk { get; set; }
        public int? PaisSecuencia_fk { get; set; }
        public int? ClinSecuencia_fk { get; set; }
        public int? ConsSecuencia_fk { get; set; }
        public int? PaciSecuencia_fk { get; set; }
        public int? CMHistSecuencia { get; set; }      
        public string CMediProximaConsultaEnDias { get; set; }
        public string TratComentario { get; set; }
        public string MotiComentario { get; set; }
        public string EFisiComentario { get; set; }
        public string DiagComentario { get; set; }
        [Display(Name="FUR")]
        [DataType(DataType.DateTime)]
        public Nullable<System.DateTime> CMHistFechaUltimaRegla { get; set; }
        [Display(Name = "IMC")]
        [RegularExpression(@"^\d+.?\d{0,2}$", ErrorMessage = "Ivalido Digitos; Máximo dos decimal.")]
        public Nullable<decimal> CMHistIndiceMasaCorporal { get; set; }


        [Display(Name = "Embarazada")]
        public bool CMHistEmbarazada { get; set; }
        [Display(Name = "Embarazo",Prompt="Fecha")]        
        public Nullable<System.DateTime> CMHistEmbarazadaFecha { get; set; }
        [Display(Name = "Semanas")]
      
        public Nullable<int> CMHistEmbarazadaSemanas { get; set; }
        [Display(Name = "Dias")]
        public Nullable<int> CMHistEmbarazadaDias { get; set; }
        [Display(Name = "Mes(es)")]
        public Nullable<int> CMHistEmbarazadaMeses { get; set; }
        [Display(Name = "Dias Act.Mes")]
        public Nullable<int> CMHistEmbarazadaMesActualDias { get; set; }
        [Display(Name = "Tentativa de Parto",Prompt="Fecha")]
        public Nullable<System.DateTime> CMHistEmbarazadaFechaProbableParto { get; set; }
        [Display(Name = "Unidad de Peso")]
   
        public string CMHistUnidadesMedidaPeso { get; set; }
        [Display(Name = "Peso")]
        [RegularExpression(@"^\d+.?\d{0,2}$", ErrorMessage = "Ivalido Digitos; Máximo dos decimal.")]
        [DataType(DataType.Currency)]
       // [RegularExpression("([0-9]+)", ErrorMessage = "favor de introducir solor números.")]
        public Nullable<decimal> CMHistPeso { get; set; }
                [Display(Name = "Unidad de Estatura")]
        public string CMHistUnidadesMedidaTalla { get; set; }
        [Display(Name = "Estatura")]
                [RegularExpression(@"^\d+.?\d{0,2}$", ErrorMessage = "Ivalido Digitos; Máximo dos decimal.")]
                [DataType(DataType.Currency)]
               // [RegularExpression("([0-9]+)", ErrorMessage = "favor de introducir solor números.")]
        public Nullable<decimal> CMHistTalla { get; set; }
        public string CMHistCodigo { get; set; }
        [Display(Name = "Fecha")]
        [DataType(DataType.Date)]
        public Nullable<System.DateTime> CMHistFecha { get; set; }
        public string CMHistFechaString
        {
            get
            {
                string fecha = "";
                if (CMHistFecha != null)
                {
                    fecha = this.CMHistFecha.Value.ToString("dd/MM/yyyy");

                }
                return fecha;
            }
            set
            {
                string fecha = "";
                if (CMHistFecha != null)
                {
                    fecha = this.CMHistFecha.Value.ToString("dd/MM/yyyy");

                }
                value = fecha;
            }

        }

        [Display(Name = "Hora")]
        [DataType(DataType.Time)]
        public Nullable<System.TimeSpan> CMHistHora { get; set; }
        public string CMHistHoraString
        {

            get
            {
                string hora = "";
                if (CMHistHora != null)
                {

                    DateTime dt = Convert.ToDateTime(CMHistHora.ToString());
                    hora = dt.ToString("hh:mm:ss tt", new CultureInfo("en-US"));

                }
                return hora;
            }
            set
            {
                string hora = "";
                if (CMHistHora != null)
                {

                    DateTime dt = Convert.ToDateTime(CMHistHora.ToString());
                    hora = dt.ToString("hh:mm:ss tt", new CultureInfo("en-US"));

                }
                value = hora;

            }

        }
      
        public Nullable<int> CitaSecuencia_fk { get; set; }

        public string CMHistTiroides { get; set; }
        public string CMHistPulmones { get; set; }
        public string CMHistCorazon { get; set; }
        public string CMHistMamas { get; set; }
        public string CMHistAbdomen { get; set; }
        public string CMHistGenitalesExternos { get; set; }
        public string CMHistTactoVaginal { get; set; }
        public string CMHistExtremidadesInferiores { get; set; }
        public string TensionArterial { get; set; }
        public string frecuenciaCardiaca { get; set; }

        [Display(Name = "Observación General")]

        public string CMHistComentario { get; set; }
 
     
        public Nullable<int> UsuaSecuenciaCreacion { get; set; }
        public System.DateTime UsuaFechaCreacion { get; set; }
        public Nullable<int> UsuaSecuenciaModificacion { get; set; }
        public Nullable<System.DateTime> UsuaFechaModificacion { get; set; }
        public bool EstaDesabilitado { get; set; }


    }
}
