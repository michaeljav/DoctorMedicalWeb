//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoctorMedicalWeb.Models
{
    using DoctorMedicalWeb.App_Data;
    using DoctorMedicalWeb.Libreria;
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;





    public  class Usar_Usuario
    {
        public bool EstaDesabilitado { get; set; }

        public int? UsuaSecuencia { get; set; }

        [Display(Name = "Correo")]
        [Required(ErrorMessage = "Favor ingresar email.")]
        [RegularExpression(@"[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}", ErrorMessage = "Favor ingresar un correo valido.")]
        public string UsuaEmail { get; set; }

        [NotMapped]
        [Display(Name = "Ingresar contraseña nuevamente")]
        [DataType(DataType.EmailAddress)]
        [Required(ErrorMessage = "Favor confirmar correo.")]
        [RegularExpression(@"[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}", ErrorMessage = "Favor ingresar un correo valido.")]
        [Compare("UsuaEmail", ErrorMessage = "Los correo deben ser iguales.")]
        public string UsuaEmailConfirmacion { get; set; }

        [Display(Name = "Ingresar clave")]
        [Required(ErrorMessage = "Favor ingresar clave")]
        public string UsuaClave { get; set; }

        [NotMapped]
        [Display(Name = "Ingresar nuevamente clave")]
        [Required(ErrorMessage = "Clave es requerida")]
        [Compare("UsuaClave", ErrorMessage = "Clave no es igual")]
        public string UsuaClaveConfirmacion { get; set; }

        [Display(Name = "Nombre")]
        [Required(ErrorMessage = "Favor introduzca nombre")]
        public string UsuaNombre { get; set; }

        [Display(Name = "Apellido")]
        [Required(ErrorMessage = "Favor introduzca apellido")]
        public string UsuaApellido { get; set; }


        [Display(Name = "Direccion")]
        [Required(ErrorMessage = "Favor ingresar dirección")]
        public string UsuaDireccion { get; set; }

        [Display(Name = "Ciudad")]
        [Required(ErrorMessage = "Favor ingresar ciudad")]
        public string UsuaCiudad { get; set; }

        [Display(Name = "Estado/Provincia")]       
        public string UsuaProvincia { get; set; }
        [Display(Name = "Codigo Postal")]
        public string UsuaCodigoPostal { get; set; }

        [Display(Name = "Teléfono")]
   
        [Required(ErrorMessage = "Favor Teléfono")]
        public string UsuaTelefono { get; set; }

        [Display(Name = "Oficina")]
        public string UsuaOficina { get; set; }

        [Display(Name = "Celular")]
        public string UsuaCelular { get; set; }

        //[Display(Name = "Fecha nacimiento")]
        //[Required(ErrorMessage = "Favor introduzca fecha nacimiento")]
        public Nullable<System.DateTime> UsuaFechaNacimiento { get; set; }

        //[Display(Name = "Mes")]
        //[Required(ErrorMessage = "Favor seleccionar mes.")]
        public string UsuaFechaNacimientoMes { get; set; }
        //[Display(Name = "Dia")]
        //[Required(ErrorMessage = "Favor seleccionar dia.")]
        public string UsuaFechaNacimientoDia { get; set; }

        //[Display(Name = "Anio")]
        //[Required(ErrorMessage = "Favor seleccionar año.")]
        public string UsuaFechaNacimientoAnio { get; set; }


        [Display(Name = "Genero")]
        [Required(ErrorMessage = "Favor elija su genero")]
        public string UsuaGenero { get; set; }


        public Nullable<int> RoleSecuencia_fk { get; set; }

        public int UsuaIntentos { get; set; }

        public Nullable<int> UsuaSecuenciaCreacion { get; set; }
        public Nullable<System.DateTime> UsuaFechaCreacion { get; set; }
        public string UsuaFechaCreacionString
        {
            get
            {
                string fecha = "";
                if (UsuaFechaCreacion != null)
                {
                    fecha = this.UsuaFechaCreacion.Value.ToString("dd/MM/yyyy");

                }
                return fecha;
            }
            set
            {
                string fecha = "";
                if (UsuaFechaCreacion != null)
                {
                    fecha = this.UsuaFechaCreacion.Value.ToString("dd/MM/yyyy");

                }
                value = fecha;
            }
        }
        public Nullable<int> UsuaSecuenciaModificacion { get; set; }
        public Nullable<System.DateTime> UsuaFechaModificacion { get; set; }

        [Display(Name = "Pais")]
        [Required(ErrorMessage = "Favor seleccionar pais.")]
        public int PaisSecuencia { get; set; }

        [Display(Name = "Plan")]
        [Required(ErrorMessage = "Favor seleccionar plan.")]
        public int PlanSecuencia_fk { get; set; }

        [Display(Name = "Especialidad")]
        [Required(ErrorMessage = "Favor seleccionar especialidad.")]
        public int EspeSecuencia_fk { get; set; }

        //[Required(ErrorMessage = "This Field Is Required")]
        //[CannotBeEmptyAttribute]//esto es para validar lista
        public List<int> ConsSecuencia { get; set; }

        [Display(Name = "Personal")]
        //[Required(ErrorMessage = "Seleccione el Personal")]
        public int PersSecuencia { get; set; }

        public int DoctSecuencia_fk { get; set; }

        public string DocumentoPasaportCedula { get; set; }


        [Required(ErrorMessage = "Favor ingresar cedula o pasaporte")]
        public string DoctDocumento { get; set; }
        [Display(Name = "Cedula o Pasaporte")]
        [Required(ErrorMessage = "Favor seleccionar  Tipo Documento.")]
        public Nullable<int> TDSecuencia { get; set; }


        //clinica
        [Display(Name = "clinSecuencia")]
    
        public string clinSecuencia { get; set; }

        //clinica
        [Display(Name = "Razon Social")]
        [Required(ErrorMessage = "Favor introducir razón social")]
        public string clinRazonSocial { get; set; }

        //consultorio     

        [Display(Name = "Codigo consultorio")]
        [Required(ErrorMessage = "Favor introducir Consultorio")]
        public string ConsCodigo { get; set; }

    }
}
