@model DoctorMedicalWeb.Models.Usar_UsuarioPersonal

@{
    ViewBag.Title = "Ini_UsuarioPersonal";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<script src="~/Scripts/ej/web/ej.grid.min.js"></script>
<script src="~/Scripts/ej/web/ej.pager.min.js"></script>
<script src="~/Scripts/ej/web/ej.waitingpopup.min.js"></script>
<script src="~/Scripts/ej/web/ej.dropdownlist.min.js"></script>
<script src="~/Scripts/ej/web/ej.dialog.min.js"></script>
<script src="~/Scripts/ej/web/ej.button.min.js"></script>
<script src="~/Scripts/ej/web/ej.autocomplete.min.js"></script>
<script src="~/Scripts/ej/web/ej.datepicker.min.js"></script>
<script src="~/Scripts/ej/web/ej.timepicker.min.js"></script>
<script src="~/Scripts/ej/web/ej.datetimepicker.min.js"></script>
<script src="~/Scripts/ej/web/ej.checkbox.min.js"></script>
<script src="~/Scripts/ej/web/ej.editor.min.js"></script>
<script src="~/Scripts/ej/web/ej.tooltip.min.js"></script>
<script src="~/Scripts/ej/web/ej.toolbar.min.js"></script>
<script src="~/Scripts/ej/web/ej.menu.min.js"></script>
<script src="~/Scripts/ej/web/ej.radiobutton.min.js"></script>
<script src="~/Scripts/ej/web/ej.excelfilter.min.js"></script>

<div class="container">

    @using (Html.BeginForm("Save", "UsuarioPersonal", FormMethod.Post, new { Id = "frmCrearUsar_usuario", autocomplete = "off" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <div class="row    ">
            <div class="col-xs-12 col-md-12 ">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>Crear Usuario Personal</h2>
                        <div class="clearfix"></div>
                    </div>
                    <br />
                    <div class="cuerpo ">
                        <div class="row">

                            <div id="menu" class="col-xs-12 col-sm-12 col-md-12" style="bottom: 10px;z-index: 999;">
                                <button type="button" id="btnNuevo" class="btn btn-lg btn-primary glyphicon glyphicon-plus" accesskey="n">Nuevo</button>
                                <button type="button" id="btnSave" class="btn btn-lg btn-success glyphicon glyphicon-floppy-disk" accesskey="s" hidden>Guardar</button>
                                <button type="button" id="btnBorrar" class="btn btn-lg btn-danger glyphicon glyphicon-trash " accesskey="x">Eliminar</button>
                                <button type="button" id="btnLista" class="btn btn-lg btn-info glyphicon glyphicon-list-alt" onclick="window.location.href='@Url.Action("Usuarioslista", "UsuarioPersonal")'" accesskey="f">Listado</button>
                                <button type="button" id="btnBuscarPersonal" class="btn btn-lg btn-danger glyphicon glyphicon-search " accesskey="x">Buscar  Personal</button>
                            </div>
                        </div>
                        <hr />

                        <div class="row ">

                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="form-group ">
                                    @Html.LabelFor(model => model.UsuaEmail, new { @class = "  control-label      " })
                                    @Html.TextBoxFor(model => model.UsuaEmail, new { @class = "form-control  ", placeholder = Html.DisplayNameFor(n => n.UsuaEmail) })
                                    @Html.ValidationMessageFor(model => model.UsuaEmail, null, new { @class = "label label-danger" })

                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="form-group ">
                                    @Html.LabelFor(model => model.UsuaClave, new { @class = "  control-label      " })
                                    @Html.PasswordFor(model => model.UsuaClave, new { @class = "form-control  ", value = Model.UsuaClave, placeholder = Html.DisplayNameFor(n => n.UsuaClave) })
                                    @Html.ValidationMessageFor(model => model.UsuaClave, null, new { @class = "label label-danger" })

                                </div>
                            </div>
                        </div>
                        <div class="row ">

                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="form-group ">
                                    @Html.LabelFor(model => model.UsuaEmailConfirmacion, new { @class = "  control-label      " })
                                    @Html.TextBoxFor(model => model.UsuaEmailConfirmacion, new { @class = "form-control  ", placeholder = Html.DisplayNameFor(n => n.UsuaEmailConfirmacion) })
                                    @Html.ValidationMessageFor(model => model.UsuaEmailConfirmacion, null, new { @class = "label label-danger" })

                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="form-group ">
                                    @Html.LabelFor(model => model.UsuaClaveConfirmacion, new { @class = "  control-label      " })
                                    @Html.PasswordFor(model => model.UsuaClaveConfirmacion, new { @class = "form-control  ", value = Model.UsuaClaveConfirmacion, placeholder = Html.DisplayNameFor(n => n.UsuaClaveConfirmacion) })
                                    @Html.ValidationMessageFor(model => model.UsuaClaveConfirmacion, null, new { @class = "label label-danger" })

                                </div>
                            </div>
                        </div>
                        <hr />
                        <div class="row ">

                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="form-group ">
                                    @Html.LabelFor(model => model.PersSecuencia, new { @class = "  control-label      " })
                                    @Html.TextBoxFor(model => model.PersSecuencia, new { @class = "form-control", @readonly = "readonly", @style = "background:rgb(255, 255, 192) !important", placeholder = Html.DisplayNameFor(n => n.PersSecuencia) })
                                    @Html.ValidationMessageFor(model => model.PersSecuencia, null, new { @class = "label label-danger" })

                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="form-group ">
                                    @Html.LabelFor(model => model.DocumentoPasaportCedula, new { @class = "  control-label      " })
                                    @Html.TextBoxFor(model => model.DocumentoPasaportCedula, new { @class = "form-control", @readonly = "readonly", @style = "background:rgb(255, 255, 192) !important", placeholder = Html.DisplayNameFor(n => n.DocumentoPasaportCedula) })
                                    @Html.ValidationMessageFor(model => model.DocumentoPasaportCedula, null, new { @class = "label label-danger" })

                                </div>
                            </div>
                        </div>
                        <div class="row ">

                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="form-group ">
                                    @Html.LabelFor(model => model.UsuaNombre, new { @class = "  control-label      " })
                                    @Html.TextBoxFor(model => model.UsuaNombre, new { @class = "form-control", @readonly = "readonly", @style = "background:rgb(255, 255, 192) !important", placeholder = Html.DisplayNameFor(n => n.UsuaNombre) })
                                    @Html.ValidationMessageFor(model => model.UsuaNombre, null, new { @class = "label label-danger" })

                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="form-group ">
                                    @Html.LabelFor(model => model.UsuaApellido, new { @class = "  control-label      " })
                                    @Html.TextBoxFor(model => model.UsuaApellido, new { @class = "form-control", @readonly = "readonly", @style = "background:rgb(255, 255, 192) !important", placeholder = Html.DisplayNameFor(n => n.UsuaApellido) })
                                    @Html.ValidationMessageFor(model => model.UsuaApellido, null, new { @class = "label label-danger" })

                                </div>
                            </div>
                        </div>

                        <hr />
                        <div class="row ">

                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="form-group ">
                                    @Html.LabelFor(model => model.RoleSecuencia_fk, new { @class = "  control-label      " })
                                    @Html.DropDownListFor(m => m.RoleSecuencia_fk, ViewBag.RolesLista as SelectList, "Seleccione Perfil", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.RoleSecuencia_fk, null, new { @class = "label label-danger" })

                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="form-group ">
                                    @Html.LabelFor(model => model.ConsSecuencia, new { @class = "control-label " })
                                    @Html.EJ().DropDownListFor(m => m.ConsSecuencia).Datasource((IEnumerable<DoctorMedicalWeb.App_Data.vw_UsuarioConsultorios>)ViewBag.ConsultoriosListaCheck).DropDownListFields(d => d.Text("NombreConsultorio").Value("ConsSecuencia_fk")).ShowCheckbox(true).Width("100%").MultiSelectMode(MultiSelectModeTypes.VisualMode)
                                    @*@Html.EJ().DropDownListFor(m => m.ConsSecuencia).Datasource((IEnumerable<DoctorMedicalWeb.Models.Usar_Consultorio>)ViewBag.ConsultoriosListaCheck).DropDownListFields(d => d.Text("NombreConsultorio").Value("ConsSecuencia_fk")).ShowCheckbox(true).Width("100%").MultiSelectMode(MultiSelectModeTypes.VisualMode)*@
                                    <span class="label label-danger field-validation-error " id="ErrorCombo" style="visibility:hidden">Favor seleccione consultorio</span>
                                </div>
                            </div>
                        </div>

                        <hr />
                        <div class="row">
                            <div class="col-xs-12 col-sm-12 col-md-12">
                                <h3>Ultimos 5 Registros</h3>
                            </div>
                            <div class="row">
                                <div id="Grid" class="col-md-12">
                                    @{
                                        @(Html.EJ().Grid<DoctorMedicalWeb.App_Data.vw_UsuariosPersonalDelDoctor>("Searching")
                                                         .EnableAltRow(false)
                                                        .Datasource((IEnumerable<object>)ViewBag.ultimosCinco)
                                                         .AllowResizing(true)
                                                        .Columns(col =>
                                                        {
                                                            col.Field("UsuaSecuencia").HeaderText("ID").IsPrimaryKey(true).TextAlign(TextAlign.Right).Width(50).Add();
                                                            col.Field("UsuaEmail").HeaderText("Usuario").Width(150).Add();
                                                            col.HeaderText("Gestionar Registros").Width(50).Commands(command =>
                                                               {
                                                                   command.Type("detail")
                                                                          .ButtonOptions(new Syncfusion.JavaScript.Models.ButtonProperties()
                                                                          {
                                                                              Text = "Editar",
                                                                              //Width = "100px",
                                                                              Click = "onClick"

                                                                          }).Add();

                                                               }).TextAlign(TextAlign.Left)

                                                               .Width(150)
                                                               .Add();
                                                        })
                                        )}

                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
        @Html.HiddenFor(model => model.UsuaSecuencia)
        @Html.HiddenFor(model => model.DoctSecuencia_fk)

    }
</div>

<div class="modal fade" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog" id="modalValidacion">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            @using (Html.BeginForm("PendientesValidar", "UsuarioPersonal", FormMethod.Post, new { @id = "frmMostrarPersonal", @class = "form-horizontal", @role = "form", onsumbit = "formSubmit()" }))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title text-primary">Lista de Personal</h4>
                </div>
                <div class="modal-body">
                    <div class="container">
                        <div class="col-md-12">
                            @{
                                @(Html.EJ().Grid<DoctorMedicalWeb.App_Data.Personal>("ModalPersonal")
                             //.EnableAltRow(false)
                                        .Datasource((IEnumerable<object>)ViewBag.listPersonal)
                                        .IsResponsive()
                                        .AllowResizing(true)
                                        .AllowPaging()
                                        .PageSettings(e => e.PageSize(5))
                                        //.AllowScrolling(true)
                                        //.ScrollSettings(col => { col.Width(400).Height(300); })
                                        .ToolbarSettings(toolbar => { toolbar.ShowToolbar().ToolbarItems(items => { items.AddTool(ToolBarItems.Search); }); })
                                         .ClientSideEvents(eve => { eve.RecordDoubleClick("rowSelectedPersonal"); })
                                        .Columns(col =>
                                        {
                                            col.Field("PersSecuencia").HeaderText("ID").IsPrimaryKey(true).TextAlign(TextAlign.Right).Width(50).Add();
                                            col.Field("PersNombre").HeaderText("Nombre").Width(150).Add();
                                            col.Field("PersApellido").HeaderText("Apellido").Width(150).Add();
                                            col.Field("PersDocumento").HeaderText("Documento").Width(150).Add();

                                        })
                                )}

                        </div>
                        <div class="col-md-4"></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" id="btnSeleccionarPersonal" class="btn btn-primary">Seleccionar</button>
                </div>
            }
        </div>
    </div>
</div>


@section Scripts{
    <script type="text/javascript">

        //select row grid personal
        function rowSelectedPersonal(args){
            console.log("entro ");

            var rowsele = $("#ModalPersonal").ejGrid("instance");
            var a=  rowsele.getSelectedRecords();
            if(a.length > 0){
                //  alertify.alert('',a.PersNombre);
                $("#UsuaNombre").val(a[0].PersNombre);
                $("#UsuaApellido").val(a[0].PersApellido);
                $("#PersSecuencia").val(a[0].PersSecuencia);
                $("#DocumentoPasaportCedula").val(a[0].PersDocumento);
                $("#modalValidacion").modal('toggle');
            }
            else{
                alertify.alert('',"Favor seleccione personal");
            }
        }

        //select row persona
        $("#btnSeleccionarPersonal").click(function(){

            var rowsele = $("#ModalPersonal").ejGrid("instance");
            var a=  rowsele.getSelectedRecords();
            if(a.length > 0){
                //  alertify.alert('',a.PersNombre);
                $("#UsuaNombre").val(a[0].PersNombre);
                $("#UsuaApellido").val(a[0].PersApellido);
                $("#PersSecuencia").val(a[0].PersSecuencia);
                $("#DocumentoPasaportCedula").val(a[0].PersDocumento);
                $("#modalValidacion").modal('toggle');

            }
            else{
                alertify.alert('',"Favor seleccione personal");
            }
        })

        //click edit grid
        function onClick(args) {
            //excute btnnuevo
            $('#btnNuevo').trigger('click');

            //button proseesand
            var btn = $(this);
            //var todosbtn = $('#btnDelete');
            var todosbtn = $('button');
            //bloquear boton
            doct_DisabledButtonAndEventClick(btn, 'Procesando...', todosbtn);

            var grid = $("#Searching").ejGrid("instance");
            var index = this.element.closest("tr").index();
            var record = grid.getCurrentViewData()[index];
        
            //show screen block
            $.LoadingOverlay("show");


            //send object to controller
            //start ajax
            $.ajax({
                type: "POST",
                url: '@Url.Action("Editar", "UsuarioPersonal")',
                dataType: "json",
                data: JSON.stringify(record),
                contentType: "application/json; charset=utf-8",
                cache: false,
                complete: (function () {

                    //No utilizo el  esbloqueador bloquear por que como la pagina se recarga
                    //y le puse un bloqueador y desbloqueador  en el layout no necesito este
                    //   $.LoadingOverlay("hide");
                }),
                success:(function (data) {

                    if (data.respuesta) {

                        //$("#msgExitoso").fadeIn('slow').animate({ opacity: 1.0 }, 1500).effect("pulsate", { times: 2 }, 800).fadeOut('slow');
                        //$("#msgExitoso").show()
                        //setTimeout('$("#msgExitoso").hide()', 2500);
        
                    

                        //location.reload();
                        var di = data.redirect;
                        window.location.href = di;
                    }
                    else {

                        alert(data.error);
                    }


                    ////cuando devuelva del controlador la respuesta entonces se abilita el boton
                    doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);


                }),//end susccess
                error:(function () {

                    try {
                        alertify.alert('', 'Error en controller login y no se ejecuto el result json ' );
                    } catch (e) {
                        alertify.alert('', 'Problemas en el result json del controller, favor consultar al administrador ');
                    }

                    //cuando devuelva del controlador la respuesta entonces se abilita el boton
                    doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);
                    //quito splash
                    //$.LoadingOverlay("hide");
                })    //end error
            })
                

        }//end edit grid onClick


        $(document).ready(function () {




            //when is ready open modal to choose personal
            if ($("#PersSecuencia").val() <= 0) {
                $("#modalValidacion").modal();
            }

            //LLenando consultorios si tiene consultorios.
            var model = @Html.Raw(Json.Encode(ViewBag.FillDropDownListCheckJson));
            //is not is empty
            if (jQuery.isEmptyObject(model) === false )
            {
                var DropDownListObj =  $('#ConsSecuencia').ejDropDownList({showCheckbox : true }).data("ejDropDownList");
                DropDownListObj.selectItemByValue(model.toString());
            }

            //valido si esta creando o editando
            $("input").click(function () {

                //editando
                if ($("#UsuaSecuencia").val() > 0) {

                    $("#EstadoAccion h2 span").html(" Editando");
                } else {
                    $("#EstadoAccion h2 span").html(" Creando");
                }
            });



            function clearValidation(formElement) {
                //Internal $.validator is exposed through $(form).validate()
                var validator = $(formElement).validate();
                //Iterate through named elements inside of the form, and mark them as error free
                $('[name]', formElement).each(function () {
                    validator.successList.push(this);//mark as error free
                    validator.showErrors();//remove error messages if present
                });
                validator.resetForm();//remove error class on name elements and clear history
                validator.reset();//remove all error and success data
            }

            function resetAllControls(f) {
                f.find('input:text, input:password,input:hidden, input:file, select, textarea').val('');
                f.find('input:radio, input:checkbox').prop('checked', false).prop('selected', false);

            };

            function resetDropdownlistcheckbox(dbc) {
                $('#' + dbc).ejDropDownList("clearText");
            }


            //show modal to show list personal
            $("#btnBuscarPersonal").click(function(){
                
                $("#modalValidacion").modal();

            });








            //nuevo registro
            $("#btnNuevo").click(function () {
                console.log("Entro Nuevo");
                //Form to clear
                var formulario = $("#frmCrearUsar_usuario");
                console.log(formulario);
                //clear dataannotation
                clearValidation(formulario);
                resetDropdownlistcheckbox("ConsSecuencia");
                console.log("Paso lIMPIAR DRODP");
                //show modal to show list personal
                //$("#modalValidacion").modal();
                //clear text
                resetAllControls(formulario);
                //clear div de accion
                $('#EstadoAccion h2 span').empty();
                $('#UsuaEmail').val('  ');

            });//end btnnuevo



            //start click savedoctor
            $("#btnSave").on("click", function (e) {

                var f = $('#frmCrearUsar_usuario').valid();

                if (f == false) {

                    return false;
                }
                var dropdown = $('#ConsSecuencia').data("ejDropDownList");

                if(dropdown._selectedIndices.length===0){
                    $('#ErrorCombo').css("visibility", "visible");
                    return ;
                }

                //button proseesand
                var btn = $(this);
                var todosbtn = $('button');
                //bloquear boton
                doct_DisabledButtonAndEventClick(btn, 'Procesando...', todosbtn);

                ////start validar si es editando
                if ($("#UsuaSecuencia").val() > 0) {

                     alertify.confirm('', '¿Seguro que desea Editar?', function () {
                        message: "Seguro que desea Editar?",
                        buttons: {
                            confirm: {
                                label: 'Si',
                                className: 'btn-success'
                            },
                            cancel: {
                                label: 'No',
                                className: 'btn-danger'
                            }
                        },
                        callback: function (result) {

                            if (result == false) {
                                ////cuando devuelva del controlador la respuesta entonces se abilita el boton
                                doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);
                                return true;
                            }

                            
                            //show screen block
                            $.LoadingOverlay("show");

                            //start ajax
                            $.ajax({
                                type: "POST",
                                url: '@Url.Action("Save", "UsuarioPersonal")',
                                data: $('#frmCrearUsar_usuario').serialize(),
                                datatype: "application/json; charset=utf-8",
                                cache: false,
                                complete: (function () {

                                
                                      $.LoadingOverlay("hide");
                                }),
                                 success:(function (data) {

                                    if (data.respuesta) {
                                        $("#msgExitoso").show();
                                        setTimeout('$("#msgExitoso").hide()', 3000);

                                        //excute btnnuevo
                                        $('#btnNuevo').trigger('click');
                                        //RECARGAR GRID
                                        var gridObj = $("#Searching").ejGrid("instance");
                                        gridObj.dataSource(data.someCollection);//dataSource method

                                    }
                        else {
                                        alert("Entro en error");
                            alertify.alert('', data.error, function () { alertify.success('Ok'); });
                        }

                        ////cuando devuelva del controlador la respuesta entonces se abilita el boton
                                    doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

                }),//end susccess
                 error:(function () {

                    try {
                        alertify.alert('','Error en controller login y no se ejecuto el result json ' + throwError);
                    } catch (e) {
                        alertify.alert('','Problemas en el result json del controller, favor consultar al administrador ');
                    }

                    //cuando devuelva del controlador la respuesta entonces se abilita el boton
                    doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);
                    //quito splash
                    //$.LoadingOverlay("hide");
                })    //end error
                            })
                               

                            console.log('This was logged in the callback editando: ' + result);
                        }
                    });/*End message confirm*/
                }
                    //Insertando
                else {

                    
                    //show screen block
                    $.LoadingOverlay("show");

                    //start ajax
                    $.ajax({

                        type: "POST",
                        url: '@Url.Action("Save", "UsuarioPersonal")',
                        data: $('#frmCrearUsar_usuario').serialize(),
                        datatype: "application/json; charset=utf-8",
                        cache: false,
                        complete: (function () {

                                
                            $.LoadingOverlay("hide");
                        }),
                         success:(function (data) {

                           if (data.respuesta) {

                               $("#msgExitoso").show()
                               setTimeout('$("#msgExitoso").hide()', 3000);

                               //excute btnnuevo
                               $('#btnNuevo').trigger('click');
                               //Enlistar las ultimas 5 registros
                               var gridObj = $("#Searching").ejGrid("instance");
                               gridObj.dataSource(data.someCollection);//dataSource method
                           }
                else {
                               alertify.alert('', data.error, function () { alertify.success('Ok'); });
                               
                }

                ////cuando devuelva del controlador la respuesta entonces se abilita el boton
                doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

            }),//end susccess
                       error:(function () {

                           try {
                               alertify.alert('','Error en controller login y no se ejecuto el result json ' + throwError);
                           } catch (e) {
                               alertify.alert('','Problemas en el result json del controller, favor consultar al administrador ');
                           }

                           //cuando devuelva del controlador la respuesta entonces se abilita el boton
                           doct_EnableButtonAndEventClick($("#btnSave"), "Guardar", todosbtn);
                           //quito splash
                           //$.LoadingOverlay("hide");
                       })   //end error
                    })
                      

                }//end validar si es editando

                return false;
            });//end save click


            
            $("#btnBorrar").click(function () {

                var formulario = 'frmCrearUsar_usuario';
                var campoSecuencia = 'UsuaSecuencia';
                

                var s = $("#" + campoSecuencia).val();
                if (s == false) {
                    alertify.alert('',"Favor seleccionar un usuario en el listado");
                    return false;
                }

                var f = $('#' + formulario).valid();
                if (f == false) {

                    return false;
                }         
         
                //Preguntar si borrar
                 alertify.confirm('', '¿Seguro que desea Borrar?', function () {
                  
                        
                        //show screen block
                        $.LoadingOverlay("show");

                        //start ajax
                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("Borrar", "UsuarioPersonal")',                    
                            data: $('#' + formulario).serialize(),
                            datatype: "application/json; charset=utf-8",
                            cache: false,
                            complete: (function () {

                                
                                $.LoadingOverlay("hide");
                            }),
                             success:(function (data) {

                            if (data.respuesta == true) {

                            
                                //     window.location.reload();
                                //excute btnnuevo
                                $('#btnNuevo').trigger('click');
                                //mOSTRA MESAJE DE BIEN BORRADO
                                $("#msgBorrado").show()
                                setTimeout('$("#msgBorrado").hide()', 3000);
                                
                                alertify.success('Si')

                                //RECARGAR GRID
                                var gridObj = $("#Searching").ejGrid("instance");
                                gridObj.dataSource(data.someCollection);//dataSource method

                            } else {
                                alertify.alert('', data.error, function () { alertify.success('Ok'); });
                    }

                }),//end susccess
                        error:(function () {

                            try {
                                alertify.alert('','Error en controller login y no se ejecuto el result json ' );
                            } catch (e) {
                                alertify.alert('','Problemas en el result json del controller, favor consultar al administrador ');
                            }
                        })   //end error
                        })
                       
                    
                 }
                 , function () {
                   
                     alertify.error('No')
                     return true;
                 });/*End message confirm*/
            });//End  borrar


            //when press enter with focus in text doesn't triguet btnsave or metodo guardar
            $("input").keypress(function (event) {
                //alert("ENTRO A GUARDAR Key");
                if (event.which == 13) {
                    event.preventDefault();
                }
            });
















        });//end document ready
    </script>
}<!--End section Script-->
