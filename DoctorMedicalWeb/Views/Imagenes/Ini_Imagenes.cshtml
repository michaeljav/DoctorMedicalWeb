@model DoctorMedicalWeb.Models.Usar_Imagenes

@{
    ViewBag.Title = "Ini_Imagenes";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/ej/web/ej.grid.min.js"></script>
<script src="~/Scripts/ej/web/ej.pager.min.js"></script>
<script src="~/Scripts/ej/web/ej.waitingpopup.min.js"></script>
<script src="~/Scripts/ej/web/ej.dropdownlist.min.js"></script>
<script src="~/Scripts/ej/web/ej.dialog.min.js"></script>
<script src="~/Scripts/ej/web/ej.button.min.js"></script>
<script src="~/Scripts/ej/web/ej.autocomplete.min.js"></script>
<script src="~/Scripts/ej/web/ej.datepicker.min.js"></script>
<script src="~/Scripts/ej/web/ej.timepicker.min.js"></script>
<script src="~/Scripts/ej/web/ej.datetimepicker.min.js"></script>
<script src="~/Scripts/ej/web/ej.checkbox.min.js"></script>
<script src="~/Scripts/ej/web/ej.editor.min.js"></script>
<script src="~/Scripts/ej/web/ej.tooltip.min.js"></script>
<script src="~/Scripts/ej/web/ej.toolbar.min.js"></script>
<script src="~/Scripts/ej/web/ej.menu.min.js"></script>
<script src="~/Scripts/ej/web/ej.radiobutton.min.js"></script>
<script src="~/Scripts/ej/web/ej.excelfilter.min.js"></script>


<div class="container">
    @using (Html.BeginForm("Save", "Imagenes", FormMethod.Post, new { id = "frmImagenes", autocomplete = "off" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <div class="row    ">
            <div class="col-xs-12 col-md-12 ">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>Imagenes</h2>
                        <div class="clearfix"></div>
                    </div>
                    <br />
                    <div class="cuerpo ">
                        <div class="row">

                            <div id="menu" class="col-xs-12 col-sm-12 col-md-12" style="bottom: 10px;z-index: 999;">
                                <button type="button" id="btnNuevo" class="btn btn-lg btn-primary glyphicon glyphicon-plus" accesskey="n">Nuevo</button>
                                <button type="button" id="btnSave" class="btn btn-lg btn-success glyphicon glyphicon-floppy-disk" accesskey="s" hidden>Guardar</button>
                                <button type="button" id="btnBorrar" class="btn btn-lg btn-danger glyphicon glyphicon-trash " accesskey="x">Eliminar</button>
                                <button type="button" id="btnLista" class="btn btn-lg btn-info glyphicon glyphicon-list-alt" onclick="window.location.href='@Url.Action("Imageneslista", ViewBag.ControlCsharp)'" accesskey="f">Listado</button>
                            </div>
                        </div>
                        <br />


                        <div class="row">
                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="row ">
                                    <div class="col-xs-12 col-sm-12 col-md-12">
                                        <div class="form-group ">
                                            @Html.LabelFor(model => model.ImagNombre, new { @class = "  control-label      " })
                                            @Html.TextBoxFor(model => model.ImagNombre, new { @class = "form-control  ", placeholder = Html.DisplayNameFor(n => n.ImagNombre) })
                                            @Html.ValidationMessageFor(model => model.ImagNombre, null, new { @class = "label label-danger" })

                                        </div>
                                    </div>
                                </div>

                            </div>

                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="row ">
                                    <div class="col-xs-12 col-sm-12 col-md-12">
                                        <div class="form-group ">
                                            @Html.LabelFor(model => model.ImagDescripcion, new { @class = "  control-label      " })
                                            @Html.TextBoxFor(model => model.ImagDescripcion, new { @class = "form-control  ", placeholder = Html.DisplayNameFor(n => n.ImagDescripcion) })
                                            @Html.ValidationMessageFor(model => model.ImagDescripcion, null, new { @class = "label label-danger" })

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <h3>Ultimos 5 Registros</h3>
                            </div>
                            <div class="row">
                                <div id="Grid" class="col-md-12">
                                    @{
                                        @(Html.EJ().Grid<object>("Searching")
                                         .EnableAltRow(false)
                                        .Datasource((IEnumerable<object>)ViewBag.ultimosCinco)
                                        .Columns(col =>
                                        {
                                            col.Field("ImagSecuencia").HeaderText("ID").IsPrimaryKey(true).TextAlign(TextAlign.Right).Width(50).Add();
                                            col.Field("ImagNombre").HeaderText("Imagen").Width(150).Add();
                                            col.HeaderText("Gestionar Registros").Commands(command =>
                                               {
                                                   command.Type("detail")
                                                          .ButtonOptions(new Syncfusion.JavaScript.Models.ButtonProperties()
                                                          {
                                                              Text = "Editar",
                                                              Width = "100px",
                                                              Click = "onClick"
                                                          }).Add();

                                               }).TextAlign(TextAlign.Left)

                                               .Width(150)
                                               .Add();
                                        })

                                        )}



                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>



        @Html.HiddenFor(model => model.DoctSecuencia_fk)
        @Html.HiddenFor(model => model.PaisSecuencia_fk)
        @Html.HiddenFor(model => model.ClinSecuencia_fk)
        @Html.HiddenFor(model => model.ConsSecuencia_fk)

        @Html.HiddenFor(model => model.ImagSecuencia)






    }


</div>

@section Scripts{

    <script type="text/javascript">


        var formularioGlobal = 'frmImagenes';
        var campoSecuencia = 'ImagSecuencia';
        var vista = '@ViewBag.VistaCsharp';
        var control = '@ViewBag.ControlCsharp';





        function clearValidation(formElement) {
            //Internal $.validator is exposed through $(form).validate()
            var validator = $(formElement).validate();
            //Iterate through named elements inside of the form, and mark them as error free
            $('[name]', formElement).each(function () {
                validator.successList.push(this);//mark as error free
                validator.showErrors();//remove error messages if present
            });
            validator.resetForm();//remove error class on name elements and clear history
            validator.reset();//remove all error and success data
        }

        function resetAllControls(f) {
            f.find('input:text, input:password,input:hidden, input:file, select, textarea').val('');
            f.find('input:radio, input:checkbox').prop('checked', false).prop('selected', false);


        };




        //start document ready
        $(document).ready(function () {


            //valido si esta creando o editando
            $("input").click(function () {

                //editando
                if ($("#" + campoSecuencia).val() > 0) {

                    $("#EstadoAccion h2 span").html(" Editando");
                } else {
                    $("#EstadoAccion h2 span").html(" Creando");
                }
            });

            //nuevo registro
            $("#btnNuevo").click(function () {
                //Form to clear
                var formulario = $("#" + formularioGlobal);
                //clear dataannotation
                clearValidation(formulario);
                //clear text
                resetAllControls(formulario);
                //clear div de accion
                $('#EstadoAccion h2 span').empty();

            });//end btnnuevo

            //when press enter with focus in text doesn't triguet btnsave or metodo guardar
            //$("#RoleDescripcion").keypress(function (event) {
            //    //alert("ENTRO A GUARDAR Key");
            //    if (event.which == 13) {
            //        event.preventDefault();
            //    }
            //});

            //start click savedoctor
            $("#btnSave").on("click", function (e) {
                //e.preventDefault();

                var f = $('#' + formularioGlobal).valid();

                if (f == false) {

                    return false;
                }

                //button proseesand
                var btn = $(this);
                var todosbtn = $('button');
                //bloquear boton
                doct_DisabledButtonAndEventClick(btn, 'Procesando...', todosbtn);


                ////start validar si es editando
                if ($("#" + campoSecuencia).val() > 0) {

                     alertify.confirm('', '¿Seguro que desea Editar?', function () {
                      
                            var formulSeri = $('#' + formularioGlobal).serialize();

                            //show screen block
                            $.LoadingOverlay("show");

                            //start ajax
                            $.ajax({
                                type: "POST",
                                url: '@Url.Action("Save", ViewBag.ControlCsharp)',
                                data: $('#' + formularioGlobal).serialize(),
                                datatype: "application/json; charset=utf-8",
                                cache: false,
                                complete: (function () {

                       
                                       $.LoadingOverlay("hide");
                                }),
                                 success:(function (data) {

                                    if (data.respuesta) {
                                        $("#msgExitoso").show()
                                        setTimeout('$("#msgExitoso").hide()', 3000);

                                        alertify.success('Si')

                                        //excute btnnuevo
                                        $('#btnNuevo').trigger('click');
                                        //RECARGAR GRID
                                        var gridObj = $("#Searching").ejGrid("instance");
                                        gridObj.dataSource(data.someCollection);//dataSource method


                                    }
                        else {

                                        alertify.alert('', data.error, function () { alertify.success('Ok'); });
                        }

                        ////cuando devuelva del controlador la respuesta entonces se abilita el boton
                                    doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);


                }),//end susccess
                error:(function () {

                    try {
                        alertify.alert('', 'Error en controller login y no se ejecuto el result json ' );
                    } catch (e) {
                        alertify.alert('', 'Problemas en el result json del controller, favor consultar al administrador ');
                    }

                    //cuando devuelva del controlador la respuesta entonces se abilita el boton
                    doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);
                    //quito splash
                    //$.LoadingOverlay("hide");
                })   //end error
                            })
                               

                    
                     }
                 , function () {
                     ////cuando devuelva del controlador la respuesta entonces se abilita el boton
                     doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);
                     alertify.error('No')
                     return true;
                 });/*End message confirm*/
                }
                    //Insertando
                else {
                    //show screen block
                    $.LoadingOverlay("show");

                    //start ajax
                    $.ajax({

                        type: "POST",
                        url: '@Url.Action("Save", ViewBag.ControlCsharp)',
                        data: $('#' + formularioGlobal).serialize(),
                        datatype: "application/json; charset=utf-8",
                        cache: false,
                        complete: (function () {


                            $.LoadingOverlay("hide");
                        }),
                          success:(function (data) {

                               if (data.respuesta) {

                                   $("#msgExitoso").show()
                                   setTimeout('$("#msgExitoso").hide()', 3000);

                                   //excute btnnuevo
                                   $('#btnNuevo').trigger('click');
                                   //Enlistar las ultimas 5 registros
                                   var gridObj = $("#Searching").ejGrid("instance");
                                   gridObj.dataSource(data.someCollection);//dataSource method
                               }
                else {

                                   alertify.alert('', data.error, function () { alertify.success('Ok'); });
                    //undefined doen't has  value , empty or null
                    if (data.redirect !== undefined && data.redirect !== null && data.redirect !== '') {
                        //var di = data.redirect;
                        //window.location.href = di;
                    }
                }

                ////cuando devuelva del controlador la respuesta entonces se abilita el boton
                doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

            }),//end susccess
                           error:(function () {

                               try {
                                   alertify.alert('', 'Error en controller login y no se ejecuto el result json ' + throwError);
                               } catch (e) {
                                   alertify.alert('', 'Problemas en el result json del controller, favor consultar al administrador ');
                               }

                               //cuando devuelva del controlador la respuesta entonces se abilita el boton
                               doct_EnableButtonAndEventClick($("#btnSave"), "Guardar", todosbtn);
                               //quito splash
                               //$.LoadingOverlay("hide");
                           })    //end error
                    })
                         

                }//end validar si es editando

                return false;
            });//end save click



            $("#btnBorrar").click(function () {

                var f = $('#' + formularioGlobal).valid();
                if (f == false) {

                    return false;
                }

                var s = $("#" + campoSecuencia).val();
                if (s == false) {
                    alertify.alert('',"Favor seleccionar un role en el listado");
                    return false;
                }


                //Preguntar si borrar
                 alertify.confirm('', '¿Seguro que desea Borrar?', function () {
                   
                        //show screen block
                        $.LoadingOverlay("show");
                        //start ajax
                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("Borrar", ViewBag.ControlCsharp)',
                            data: $('#' + formularioGlobal).serialize(),
                            datatype: "application/json; charset=utf-8",
                            cache: false,
                            complete: (function () {


                                $.LoadingOverlay("hide");
                            }),
                              success:(function (data) {

                        if (data.respuesta == true) {

                            //alertify.alert('',"Borrado exitosamente!");
                            //     window.location.reload();
                            //excute btnnuevo
                            $('#btnNuevo').trigger('click');
                            //mOSTRA MESAJE DE BIEN BORRADO
                            $("#msgBorrado").show()
                            setTimeout('$("#msgBorrado").hide()', 3000);

                            alertify.success('Si')

                            //RECARGAR GRID
                            var gridObj = $("#Searching").ejGrid("instance");
                            gridObj.dataSource(data.someCollection);//dataSource method

                        } else {
                            alertify.alert('', data.error, function () { alertify.success('Ok'); });
                    }

                }),//end susccess
                    error:(function () {

                        try {
                            alertify.alert('', 'Error en controller login y no se ejecuto el result json ' );
                        } catch (e) {
                            alertify.alert('', 'Problemas en el result json del controller, favor consultar al administrador ');
                        }
                    })   //end error
                        })
                  
                    
                 }
                 , function () {
                    
                     alertify.error('No')
                     return true;
                 });/*End message confirm*/
            });//End  borrar


        })//end ready document

        //click edit grid
        function onClick(args) {
            //excute btnnuevo
            $('#btnNuevo').trigger('click');
            //button proseesand
            var btn = $(this);
            //var todosbtn = $('#btnDelete');
            var todosbtn = $('button');
            //bloquear boton
            doct_DisabledButtonAndEventClick(btn, 'Procesando...', todosbtn);

            var grid = $("#Searching").ejGrid("instance");
            var index = this.element.closest("tr").index();
            var record = grid.getCurrentViewData()[index];

            //alert("Record Details: " + JSON.stringify(record));

            //show screen block
            $.LoadingOverlay("show");

            //send object to controller
            //start ajax
            $.ajax({
                type: "POST",
                url: '@Url.Action("Editar", ViewBag.ControlCsharp)',
                dataType: "json",
                data: JSON.stringify(record),
                contentType: "application/json; charset=utf-8",
                cache: false,
                complete: (function () {

                    //No utilizo el  esbloqueador bloquear por que como la pagina se recarga
                    //y le puse un bloqueador y desbloqueador  en el layout no necesito este
                    //   $.LoadingOverlay("hide");
                }),
                   success:(function (data) {

                if (data.respuesta) {

                    var di = data.redirect;
                    window.location.href = di;
                }
        else {

                    alert(data.error);
        }

        ////cuando devuelva del controlador la respuesta entonces se abilita el boton
        doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

        }),//end susccess
            error:(function () {

                try {
                    alertify.alert('', 'Error en controller login y no se ejecuto el result json ' + throwError);
                } catch (e) {
                    alertify.alert('', 'Problemas en el result json del controller, favor consultar al administrador ');
                }

                //cuando devuelva del controlador la respuesta entonces se abilita el boton
                doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

            })   //end error
            })
         

        }//end edit grid onClick


    </script>
}