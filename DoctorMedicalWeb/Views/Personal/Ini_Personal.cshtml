@model DoctorMedicalWeb.Models.Usar_Personal

@{
    ViewBag.Title = "Ini_Personal";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/ej/web/ej.grid.min.js"></script>
<script src="~/Scripts/ej/web/ej.pager.min.js"></script>
<script src="~/Scripts/ej/web/ej.waitingpopup.min.js"></script>
<script src="~/Scripts/ej/web/ej.dropdownlist.min.js"></script>
<script src="~/Scripts/ej/web/ej.dialog.min.js"></script>
<script src="~/Scripts/ej/web/ej.button.min.js"></script>
<script src="~/Scripts/ej/web/ej.autocomplete.min.js"></script>
<script src="~/Scripts/ej/web/ej.datepicker.min.js"></script>
<script src="~/Scripts/ej/web/ej.timepicker.min.js"></script>
<script src="~/Scripts/ej/web/ej.datetimepicker.min.js"></script>
<script src="~/Scripts/ej/web/ej.checkbox.min.js"></script>
<script src="~/Scripts/ej/web/ej.editor.min.js"></script>
<script src="~/Scripts/ej/web/ej.tooltip.min.js"></script>
<script src="~/Scripts/ej/web/ej.toolbar.min.js"></script>
<script src="~/Scripts/ej/web/ej.menu.min.js"></script>
<script src="~/Scripts/ej/web/ej.radiobutton.min.js"></script>
<script src="~/Scripts/ej/web/ej.excelfilter.min.js"></script>


<div class="container">
    @using (Html.BeginForm("Save", "Personal", FormMethod.Post, new { id = "frmPersonal", autocomplete = "off" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <div class="row    ">
            <div class="col-xs-12 col-md-12 ">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>Crear Categoria Personal</h2>
                        <div class="clearfix"></div>
                    </div>
                    <br />
                    <div class="cuerpo ">
                        <div class="row">

                            <div id="menu" class="col-xs-12 col-sm-12 col-md-12" style="bottom: 10px;z-index: 999;">
                                <button type="button" id="btnNuevo" class="btn btn-lg btn-primary glyphicon glyphicon-plus" accesskey="n">Nuevo</button>
                                <button type="button" id="btnSave" class="btn btn-lg btn-success glyphicon glyphicon-floppy-disk" accesskey="s" hidden>Guardar</button>
                                <button type="button" id="btnBorrar" class="btn btn-lg btn-danger glyphicon glyphicon-trash " accesskey="x">Eliminar</button>
                                <button type="button" id="btnLista" class="btn btn-lg btn-info glyphicon glyphicon-list-alt" onclick="window.location.href='@Url.Action("Personallista", "Personal")'" accesskey="f">Listado</button>
                            </div>
                        </div>
                        <hr />

                        <div class="row ">

                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="form-group ">
                                    @Html.LabelFor(model => model.PersNombre, new { @class = "  control-label      " })
                                    @Html.TextBoxFor(model => model.PersNombre, new { @class = "form-control  ", placeholder = Html.DisplayNameFor(n => n.PersNombre) })
                                    @Html.ValidationMessageFor(model => model.PersNombre, null, new { @class = "label label-danger" })

                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="form-group ">
                                    @Html.LabelFor(model => model.PersApellido, new { @class = "  control-label      " })
                                    @Html.TextBoxFor(model => model.PersApellido, new { @class = "form-control  ", placeholder = Html.DisplayNameFor(n => n.PersApellido) })
                                    @Html.ValidationMessageFor(model => model.PersApellido, null, new { @class = "label label-danger" })

                                </div>
                            </div>
                        </div>

                        <div class="row ">
                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="row">
                                    <div class="col-xs-12 col-sm-12 col-md-12">
                                        <label class="control-label " for="EspeSecuencia">Cédula o Pasaporte</label>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="row">
                                        <div class="col-xs-12 col-sm-12 col-md-12 tpDocumen ">
                                            <div class="form-group ">
                                                <div class="col-xs-12 col-sm-12 col-md-7 tdsec ">
                                                    @Html.DropDownListFor(m => m.TDSecuencia_fk, ViewBag.tipoDocumentos as SelectList, "Seleccione Tipo Documento", new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.TDSecuencia_fk, null, new { @class = "label label-danger" })
                                                </div>
                                                <div class="col-xs-12 col-sm-12 col-md-5 doc ">
                                                    @Html.TextBoxFor(model => model.PersDocumento, new { @class = "form-control  ", placeholder = Html.DisplayNameFor(n => n.PersDocumento) })
                                                    @Html.ValidationMessageFor(m => m.PersDocumento, null, new { @class = "label label-danger" })

                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="row">
                                    <div class="col-xs-12 col-sm-6 col-md-6">
                                        <div class="form-group ">
                                            @Html.LabelFor(model => model.PersFechaNacimiento, new { @class = "control-label " })
                                            @Html.EJ().DatePickerFor(m => m.PersFechaNacimiento).DateFormat("dd/MM/yyyy").Width("100%")
                                            @Html.ValidationMessageFor(m => m.PersFechaNacimiento, null, new { @class = "label label-danger" })

                                        </div>
                                    </div>
                                    <div class="col-xs-12 col-sm-6 col-md-6">
                                        <div class="form-group ">
                                            <label class="control-label " for="DoctGenero">Genero</label>
                                            <p>
                                                <label class="radio-inline">
                                                    @Html.RadioButtonFor(m => m.PersGenero, "Masculino")
                                                    @Html.Label("Masculino")
                                                </label>
                                                <label class="radio-inline ">
                                                    @Html.RadioButtonFor(m => m.PersGenero, "Femenino")
                                                    @Html.Label("Femenino")


                                                </label>
                                            </p>
                                        </div>
                                        <div class="row">@Html.ValidationMessageFor(m => m.PersGenero, null, new { @class = "label label-danger" })</div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row ">
                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="form-group ">
                                    @Html.LabelFor(model => model.PersDireccion, new { @class = "  control-label      " })
                                    @Html.TextBoxFor(model => model.PersDireccion, new { @class = "form-control  ", placeholder = Html.DisplayNameFor(n => n.PersDireccion) })
                                    @Html.ValidationMessageFor(model => model.PersDireccion, null, new { @class = "label label-danger" })

                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="form-group ">
                                    @Html.LabelFor(model => model.CPersSecuencia_FK, new { @class = "  control-label      " })
                                    @Html.DropDownListFor(m => m.CPersSecuencia_FK,
                             ViewBag.CategoriaPersonal as SelectList,
                                                        "Selec. Categoria Personal ",
                                                        new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CPersSecuencia_FK, null, new { @class = "label label-danger" })

                                </div>
                            </div>
                        </div>

                        <div class="row ">
                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="form-group ">
                                    @Html.LabelFor(model => model.PersTelefono, new { @class = "control-label " })
                                    @Html.TextBoxFor(m => m.PersTelefono, new { @class = "form-control  ", placeholder = Html.DisplayNameFor(m => m.PersTelefono) })
                                    @Html.ValidationMessageFor(m => m.PersTelefono, null, new { @class = "label label-danger" })
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="form-group ">
                                    @Html.LabelFor(model => model.PersCelular, new { @class = "control-label " })
                                    @Html.TextBoxFor(m => m.PersCelular, new { @class = "form-control  ", placeholder = Html.DisplayNameFor(m => m.PersCelular) })
                                    @Html.ValidationMessageFor(m => m.PersCelular, null, new { @class = "label label-danger" })
                                </div>
                            </div>
                        </div>
                        @*<div class="row">
                        <div class="col-xs-12 col-sm-6 col-md-6">
                            <div class="form-group ">

                                @Html.LabelFor(model => model.ConsSecuencia, new { @class = "control-label " })
                                @Html.EJ().DropDownListFor(m => m.ConsSecuencia).Datasource((IEnumerable<DoctorMedicalWeb.App_Data.vw_UsuarioConsultorios>)ViewBag.ConsultoriosListaCheck).DropDownListFields(d => d.Text("NombreConsultorio").Value("ConsSecuencia")).ShowCheckbox(true).Width("100%").MultiSelectMode(MultiSelectModeTypes.VisualMode)

                                <span class="label label-danger field-validation-error " id="ErrorCombo" style="visibility:hidden">Favor seleccione consultorio</span>

                            </div>
                        </div>
                    </div>*@
                        <hr />
                        <div class="row">
                            <div class="col-xs-12 col-sm-12 col-md-12">
                                <h3>Ultimos 5 Registros</h3>
                            </div>
                            <div class="row">
                                <div id="Grid" class="col-md-12">
                                    @{
                                        @(Html.EJ().Grid<DoctorMedicalWeb.Models.Usar_Personal>("Searching")
                                         .EnableAltRow(false)
                                        .Datasource((IEnumerable<object>)ViewBag.ultimosCinco)
            .AllowResizing(true)

                                        .Columns(col =>
                                        {
                                            col.Field("PersSecuencia").HeaderText("ID").IsPrimaryKey(true).TextAlign(TextAlign.Right).Width(50).Add();
                                            col.Field("PersNombre").HeaderText("Nombre").Width(150).Add();
                                            col.Field("PersApellido").HeaderText("Apellido").Width(150).Add();
                                            col.HeaderText("Gestionar Registros").Width(50).Commands(command =>
                                               {
                                                   command.Type("detail")
                                                          .ButtonOptions(new Syncfusion.JavaScript.Models.ButtonProperties()
                                                          {
                                                              Text = "Editar",
                                                              //Width = "100px",
                                                              Click = "onClick"



                                                          }).Add();

                                               }).TextAlign(TextAlign.Left)

                                               .Width(150)
                                               .Add();
                                        })

                                        )}

                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>

        </div>

  

        @Html.HiddenFor(model => model.DoctSecuencia_fk)
        @Html.HiddenFor(model => model.PersSecuencia)
        @Html.HiddenFor(model => model.PaisSecuencia_fk) 
        @Html.HiddenFor(model => model.EstaActivo)
        @Html.HiddenFor(model => model.UsuaCreacion)
        @Html.HiddenFor(model => model.PersFechaCreacion)
        @Html.HiddenFor(model => model.UsuaModificacion)
        @Html.HiddenFor(model => model.PersFechaModificacion)

    }


</div>

@section Scripts{


    <script type="text/javascript">

    //$(document).ready(function () {
    //    alert("document ready occurred!");
    //});

    //$(window).load(function () {
    //    alert("window load occurred!");
    //});

    /*Prueba de checklist*/
    var target;
    //$(function () {
    //    //target = $('#ConsSecuencia').data("ejDropDownList");


    //});

    //Search check
    //$(document).ready(function () {
    //    target = $('#Consul').data("ejDropDownList");
    //    (true) ? target.option("enableFilterSearch", true) : target.option("enableFilterSearch", false);
    //});
    /*Fin prueba checklist*/

        /*dataanotation Valid date*/
    $.validator.addMethod('date',
   function (value, element, params) {
       if (this.optional(element)) {
           return true;
       }
       var ok = true;
       try {
           $.datepicker.parseDate('dd/mm/yy', value);
       }
       catch (err) {
           ok = false;
       }
       return ok;
   });
        /*end dataanotation Valid date*/

    /*Valid lang*/
    $(function () {

        $("#PersFechaNacimiento").ejDatePicker({
            //value: new Date(),
            locale: "es-ES",            //sets custom “fr-FR” locale
            watermarkText: "Fecha",
            buttonText: 'Hoy'
        });
    })

    /*end Valid lang*/

    jQuery(function ($) {
        $("#PersTelefono").mask("(999) 999-9999");
        $("#PersCelular").mask("(999) 999-9999");
    });



    //click edit grid
    function onClick(args) {
        //excute btnnuevo
        $('#btnNuevo').trigger('click');

        //button proseesand
        var btn = $(this);
        //var todosbtn = $('#btnDelete');
        var todosbtn = $('button');
        //bloquear boton
        doct_DisabledButtonAndEventClick(btn, 'Procesando...', todosbtn);

        var grid = $("#Searching").ejGrid("instance");
        var index = this.element.closest("tr").index();
        var record = grid.getCurrentViewData()[index];

        //show screen block
        $.LoadingOverlay("show");
        //send object to controller
        //start ajax
        $.ajax({
            type: "POST",
            url: '@Url.Action("Editar", "Personal")',
            dataType: "json",
            data: JSON.stringify(record),
            contentType: "application/json; charset=utf-8",
            cache: false,
            complete: (function () {

                   $.LoadingOverlay("hide");
            }),
             success:(function (data) {

                if (data.respuesta) {

                    var di = data.redirect;
                    window.location.href = di;
                }
    else {

                    alert(data.error);
    }

    ////cuando devuelva del controlador la respuesta entonces se abilita el boton
    doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

    }),//end susccess
            error:(function () {

                try {
                    alertify.alert('','Error en controller login y no se ejecuto el result json ' + throwError);
                } catch (e) {
                    alertify.alert('','Problemas en el result json del controller, favor consultar al administrador ');
                }

                //cuando devuelva del controlador la respuesta entonces se abilita el boton
                doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

            })    //end error
        })
           

    }//end edit grid onClick



        $(document).ready(function () {


            
       

                //habilitar boton 
                //$("#btnLogin").prop("disabled", false);
                //doct_EnableButtonAndEventClick($("#btnLogin"), " Iniciar Sesion", $('button'));
                ////quito splash
                //$.LoadingOverlay("hide");
      




        //console.log( model);       

        //LLenando consultorios si tiene consultorios.
        var model = @Html.Raw(Json.Encode(ViewBag.FillDropDownListCheckJson));

        if (jQuery.isEmptyObject(model) === false )
        {
            var DropDownListObj =     
        $('#ConsSecuencia').ejDropDownList({showCheckbox : true }).data("ejDropDownList");          
            DropDownListObj.selectItemByValue(model.toString());             
        }



        //valido si esta creando o editando
        $("input").click(function () {

            //editando
            if ($("#PersSecuencia").val() > 0) {

                $("#EstadoAccion h2 span").html(" Editando");
            } else {
                $("#EstadoAccion h2 span").html(" Creando");
            }
        });

        function clearValidation(formElement) {
            //Internal $.validator is exposed through $(form).validate()
            var validator = $(formElement).validate();
            //Iterate through named elements inside of the form, and mark them as error free
            $('[name]', formElement).each(function () {
                validator.successList.push(this);//mark as error free
                validator.showErrors();//remove error messages if present
            });
            validator.resetForm();//remove error class on name elements and clear history
            validator.reset();//remove all error and success data
        }

        function resetAllControls(f) {
            f.find('input:text, input:password,input:hidden, input:file, select, textarea').val('');
            f.find('input:radio, input:checkbox').prop('checked', false).prop('selected', false);

        };

        function resetDropdownlistcheckbox(dbc) {
            $('#' + dbc).ejDropDownList("clearText");
        }

        //nuevo registro
        $("#btnNuevo").click(function () {
            console.log("Entro Nuevo");
            //Form to clear
            var formulario = $("#frmPersonal");
            console.log(formulario);
            //clear dataannotation
            clearValidation(formulario);
            resetDropdownlistcheckbox("ConsSecuencia");
            console.log("Paso lIMPIAR DRODP");
            //clear text
            resetAllControls(formulario);
            //clear div de accion
            $('#EstadoAccion h2 span').empty();

        });//end btnnuevo


        $("#btnBorrar").click(function () {

            var formulario = 'frmPersonal';
            var campoSecuencia = 'PersSecuencia';
            var controler = 'Personal';

            var s = $("#" + campoSecuencia).val();
            if (s == false) {
                alertify.alert('',"Favor seleccionar un personal en el listado");
                return false;
            }

            var f = $('#' + formulario).valid();
            if (f == false) {

                return false;
            }
           
         


            //Preguntar si borrar
             alertify.confirm('', '¿Seguro que desea Borrar?', function () {
             

                    
                    //show screen block
                    $.LoadingOverlay("show");
                    //start ajax
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("Borrar", "Personal")',                    
                        data: $('#' + formulario).serialize(),
                        datatype: "application/json; charset=utf-8",
                        cache: false,
                        complete: (function () {

                            $.LoadingOverlay("hide");
                        }),
                        success:(function (data) {

                        if (data.respuesta == true) {

                            
                            //     window.location.reload();
                            //excute btnnuevo
                            $('#btnNuevo').trigger('click');
                            //mOSTRA MESAJE DE BIEN BORRADO
                            $("#msgBorrado").show()
                            setTimeout('$("#msgBorrado").hide()', 3000);
                            
                            alertify.success('Si')

                            //RECARGAR GRID
                            var gridObj = $("#Searching").ejGrid("instance");
                            gridObj.dataSource(data.someCollection);//dataSource method

                        } else {
                            alertify.alert('', data.error, function () { alertify.success('Ok'); });
                }

            }),//end susccess
                    error:(function () {

                        try {
                            alertify.alert('','Error en controller login y no se ejecuto el result json ' );
                        } catch (e) {
                            alertify.alert('','Problemas en el result json del controller, favor consultar al administrador ');
                        }
                    })    //end error
                    })
                    
               
             }
                 , function () {
                   
                     alertify.error('No')
                     return true;
                 });/*End message confirm*/
        });//End  borrar


        //when press enter with focus in text doesn't triguet btnsave or metodo guardar
        $("input").keypress(function (event) {
            //alert("ENTRO A GUARDAR Key");
            if (event.which == 13) {
                event.preventDefault();
            }
        });




        //$('#ConsSecuencia_dropdown').change(function () {
        //    $('#ErrorCombo').css("visibility", "hidden");
        //});

        //disable hidden messageError
        $('#ConsSecuencia').ejDropDownList(
            {
                change: function (args)
                {
                    $('#ErrorCombo').css("visibility", "hidden");
                }
            });


        //disable hidden messageError

        //start click savedoctor
        $("#btnSave").on("click", function (e) {



            //console.log(target);
            // alert(target._selectedIndices);
            //$.each(target._selectedIndices, function (index, value) {
            //    alert(value);
            // //   alert("KEY == "+index+"  value=== "+value+"  value.element=== "+value.element+"  JSON.stringify(a)=== "+JSON.stringify(value));
            //    //        $('#'+value).css("visibility", "visible");
            //        });
            //alert(target);

            //var DropDownListObj = $('#ConsSecuencia').ejDropDownList();
            //var items = DropDownListObj.getListData();
            //for (var i=0;i< items.length; i++)
            //    alert("item" + i + " is " + items[i].text);
            //var a = $('#Consul').data("ejDropDownList");
            //alert("entro");
            //var j = JSON.stringify(a);
            //alert(JSON.stringify(j));

            //$.each(a, function (index, data) {
            //    //alert(index + ' ' + data.FormDescripcion);
            //    var d = data.NombreConsultorio;
            //    alert(d);
            //    //desabiliatr todos los a dentro del id
            //    //$(d+' li a').hide();
            //});





            var f = $('#frmPersonal').valid();

            if (f == false) {

                return false;
            }
            //target = $('#ConsSecuencia').data("ejDropDownList");

            //if(target._selectedIndices.length===0){
            //    //alert("Usted debe de insertar datos");
            //    //alertify.alert('',"This is the default alert!");
            //    $('#ErrorCombo').css("visibility", "visible");
            //    return ;
            //}


            //this is a ojbect json
            var usar_PersonalObj = $('#frmPersonal').serializeToJSON();
            //convert date dd/mm/yy on MM/dd/yyyy  consulta medica historial
            usar_PersonalObj.PersFechaNacimiento =convertDate(usar_PersonalObj.PersFechaNacimiento);


            //button proseesand
            var btn = $(this);
            var todosbtn = $('button');
            //bloquear boton
            doct_DisabledButtonAndEventClick(btn, 'Procesando...', todosbtn);

            ////start validar si es editando
            if ($("#PersSecuencia").val() > 0) {

                 alertify.confirm('', '¿Seguro que desea Editar?', function () {
                   
                        
                        //show screen block
                        $.LoadingOverlay("show");
                        //start ajax
                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("Save", "Personal")',
                            //data: $('#frmPersonal').serialize(),
                            //datatype: "application/json; charset=utf-8",
                            contentType:  'application/json; charset=utf-8',
                            datatype: 'json',                     
                            data:JSON.stringify(usar_PersonalObj),  
                            cache: false,
                            complete: (function () {

                                $.LoadingOverlay("hide");
                            }),
                             success:(function (data) {

                                if (data.respuesta) {
                                    $("#msgExitoso").show();
                                    setTimeout('$("#msgExitoso").hide()', 3000);
                                    
                                    alertify.success('Si')

                                    //excute btnnuevo
                                    $('#btnNuevo').trigger('click');
                                    //RECARGAR GRID
                                    var gridObj = $("#Searching").ejGrid("instance");
                                    gridObj.dataSource(data.someCollection);//dataSource method

                                }
                    else {
                                    alert("Entro en error");
                        alertify.alert('', data.error, function () { alertify.success('Ok'); });
                    }
                                
                    ////cuando devuelva del controlador la respuesta entonces se abilita el boton
                                doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);
                                
            }),//end susccess
            error:(function () {

                try {
                    alertify.alert('','Error en controller login y no se ejecuto el result json ' );
                } catch (e) {
                    alertify.alert('','Problemas en el result json del controller, favor consultar al administrador ');
                }

                //cuando devuelva del controlador la respuesta entonces se abilita el boton
                doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);
                //quito splash
                //$.LoadingOverlay("hide");
            })   //end error
                        })
                           

                   
                 }
                 , function () {
                     ////cuando devuelva del controlador la respuesta entonces se abilita el boton
                     doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);
                     alertify.error('No')
                     return true;
                 });/*End message confirm*/
            }
                //Insertando
            else {
                //show screen block
                $.LoadingOverlay("show");
                //start ajax
                $.ajax({

                    type: "POST",
                    url: '@Url.Action("Save", "Personal")',
                    //data: $('#frmPersonal').serialize(),
                    //datatype: "application/json; charset=utf-8",
                    contentType:  'application/json; charset=utf-8',
                    datatype: 'json',                 
                    data:JSON.stringify(usar_PersonalObj),               
                    cache: false,
                    complete: (function () {

                           $.LoadingOverlay("hide");
                    }),
                     success:(function (data) {

                       if (data.respuesta) {

                           $("#msgExitoso").show()
                           setTimeout('$("#msgExitoso").hide()', 3000);

                           //excute btnnuevo
                           $('#btnNuevo').trigger('click');
                           //Enlistar las ultimas 5 registros
                           var gridObj = $("#Searching").ejGrid("instance");
                           gridObj.dataSource(data.someCollection);//dataSource method
                       }
            else {

                           alertify.alert('',{
                               message: data.error,
                               callback: function () {
                                   //alert("aantes ");
                                   //alert("Anters Tiene datos "+jQuery.isEmptyObject(data.fielsWithError));
                                   //if(jQuery.isEmptyObject(data.fielsWithError)===false){
                                   //    alert("Tiene datos "+jQuery.isEmptyObject(data.fielsWithError));
                                   //    //tiene coampos con error
                                   //   // $('#ErrorCombo').css("visibility", "visible");
                                   //    $.each(data.fielsWithError, function(index, value) {
                                   //        alert("Objeto dentro de a lista "+value);
                                   //        $('#'+value).css("visibility", "visible");
                                   //    });
                                   //}
                                   //undefined doen't has  value , empty or null
                                   if (data.redirect !== undefined && data.redirect !== null && data.redirect !== '') {

                                       var di = data.redirect;
                                       window.location.href = di;
                                   }
                               }
                           })




            }

            ////cuando devuelva del controlador la respuesta entonces se abilita el boton
            doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

        }),//end susccess
                   error:(function () {

                       try {
                           alertify.alert('','Error en controller login y no se ejecuto el result json ' + throwError);
                       } catch (e) {
                           alertify.alert('','Problemas en el result json del controller, favor consultar al administrador ');
                       }

                       //cuando devuelva del controlador la respuesta entonces se abilita el boton
                       doct_EnableButtonAndEventClick($("#btnSave"), "Guardar", todosbtn);
                       //quito splash
                       //$.LoadingOverlay("hide");
                   })    //end error
                })
                  

            }//end validar si es editando

            return false;
        });//end save click









    });//end ready


















    </script>
}
