@model DoctorMedicalWeb.ModelsComplementarios.Usar_Consultar

@{
    ViewBag.Title = "Ini_Consulta";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<script src="~/Scripts/ej/web/ej.grid.min.js"></script>
<script src="~/Scripts/ej/web/ej.pager.min.js"></script>
<script src="~/Scripts/ej/web/ej.waitingpopup.min.js"></script>
<script src="~/Scripts/ej/web/ej.dropdownlist.min.js"></script>
<script src="~/Scripts/ej/web/ej.dialog.min.js"></script>
<script src="~/Scripts/ej/web/ej.button.min.js"></script>
<script src="~/Scripts/ej/web/ej.autocomplete.min.js"></script>
<script src="~/Scripts/ej/web/ej.datepicker.min.js"></script>
<script src="~/Scripts/ej/web/ej.timepicker.min.js"></script>
<script src="~/Scripts/ej/web/ej.datetimepicker.min.js"></script>
<script src="~/Scripts/ej/web/ej.checkbox.min.js"></script>
<script src="~/Scripts/ej/web/ej.editor.min.js"></script>
<script src="~/Scripts/ej/web/ej.tooltip.min.js"></script>
<script src="~/Scripts/ej/web/ej.toolbar.min.js"></script>
<script src="~/Scripts/ej/web/ej.menu.min.js"></script>
<script src="~/Scripts/ej/web/ej.radiobutton.min.js"></script>
<script src="~/Scripts/ej/web/ej.excelfilter.min.js"></script>

<script src="~/Scripts/ej/web/ej.treeview.min.js"></script>
<script src="~/Scripts/ej/web/ej.splitter.min.js"></script>
<script src="~/Scripts/ej/datavisualization/ej.chart.min.js"></script>
<script src="~/Scripts/ej/datavisualization/ej.map.min.js"></script>
<script src="~/Scripts/ej/common/ej.touch.min.js"></script>
<script src="~/Scripts/ej/datavisualization/ej.circulargauge.min.js"></script>
<script src="~/Scripts/ej/datavisualization/ej.lineargauge.min.js"></script>
<script src="~/Scripts/ej/web/ej.reportviewer.min.js"></script>




<div class="container">

    @using (Html.BeginForm("Save", "Consulta", FormMethod.Post, new { Id = "frmConsulta", autocomplete = "off" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <div class="row    ">
            <div class="col-xs-12 col-md-12 ">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>Consulta</h2>
                        <div class="clearfix"></div>
                    </div>
                    <br />
                    <div class="cuerpo ">
                        <div id="MenuEInformacion" class="row">
                            <div id="menu" class="col-xs-12 col-sm-12 col-md-12" style="z-index: 999;">
                                <div class="row">
                                    <div class="col-xs-12 col-sm-7 col-md-7">

                                        <button type="button" id="btnNuevo" class="paddingRightleftCinco col-xs-12 col-sm-2 col-md-2 btn btn-lg btn-primary glyphicon glyphicon-plus" accesskey="n">Nuevo</button>
                                        <button type="button" id="btnSave" class="paddingRightleftCinco col-xs-12 col-sm-2 col-md-2 btn btn-lg btn-success glyphicon glyphicon-floppy-disk" accesskey="s" hidden>Guardar</button>
                                        <button type="button" id="btnBorrar" class="paddingRightleftCinco col-xs-12 col-sm-2 col-md-2 btn btn-lg btn-danger glyphicon glyphicon-trash " accesskey="x">Eliminar</button>
                                        <button type="button" id="btnBuscarPaciente" class="paddingRightleftCinco col-xs-12 col-sm-3 col-md-3 btn btn-lg btn-danger glyphicon glyphicon-search" accesskey="x"> Pacientes</button>
                                        <button type="button" id="btnLista" class="paddingRightleftCinco col-xs-12 col-sm-2 col-md-2 btn btn-lg btn-info glyphicon glyphicon-list-alt" onclick="window.location.href='@Url.Action("Consultalista", ViewBag.ControlCsharp)'" accesskey="f"> Lista</button>
                                        @*  <input type="file" id="ImagenSeleccionada" name="imagen" accept="image/gif, image/jpeg, image/png" />*@
                                    </div>
                                    <div class="col-xs-12 col-sm-5 col-md-5">
                                        <div class="col-xs-12 col-sm-4 col-md-4 paddingRightZero">
                                            <div class="form-group ">
                                                @Html.LabelFor(c => c.CMHistCodigo)
                                                @Html.ValidationMessageFor(model => model.CMHistCodigo, null, new { @class = "label label-danger" })
                                                @Html.TextBoxFor(model => model.CMHistCodigo, new { @class = "form-control", @readonly = "readonly", @style = "background:rgb(255, 255, 192) !important", placeholder = "Código" })
                                            </div>
                                        </div>
                                        <div class="col-xs-12 col-sm-4 col-md-4 paddingRightZero">
                                            <div class="form-group ">
                                                @Html.LabelFor(c => c.CMHistFecha)
                                                @Html.TextBoxFor(model => model.CMHistFechaString, new { @class = "form-control", @readonly = "readonly", @style = "background:rgb(255, 255, 192) !important", placeholder = Html.DisplayNameFor(n => n.CMHistFecha) })
                                                @Html.ValidationMessageFor(model => model.CMHistFecha, null, new { @class = "label label-danger" })
                                            </div>
                                        </div>
                                        <div class="col-xs-12 col-sm-4 col-md-4 paddingRightZero">
                                            <div class="form-group ">
                                                @Html.LabelFor(c => c.CMHistHora)
                                                @Html.TextBoxFor(model => model.CMHistHoraString, new { @class = "form-control", @readonly = "readonly", @style = "background:rgb(255, 255, 192) !important", placeholder = Html.DisplayNameFor(n => n.CMHistFecha) })
                                                @Html.ValidationMessageFor(model => model.CMHistHora, null, new { @class = "label label-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div id="InformacionGeneral" class="row">
                            <div class="col-xs-12 col-sm-2 col-md-2">

                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xs-12 col-sm-7 col-md-7">
                                <div id="embarazo">
                                    <div class="panel panel-info">
                                        <div class="panel-heading">
                                            Embarazo
                                            <span class="pull-right clickable"><i class="glyphicon glyphicon-chevron-up"></i></span>
                                        </div>
                                        <!--End embarazo current-->
                                        <div class="panel-body">
                                            <div class="content">
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-2 col-md-2">
                                                        <div class="form-group ">
                                                            @Html.LabelFor(c => c.CMedEmbarazada)
                                                            @Html.CheckBoxFor(model => model.CMedEmbarazada, new { @class = "form-control  " })
                                                            @Html.ValidationMessageFor(model => model.CMedEmbarazada, null, new { @class = "label label-danger" })
                                                        </div>

                                                    </div>
                                                    <div class="col-xs-12 col-sm-2 col-md-2">
                                                        <div class="form-group ">
                                                            <label>Datos Ant.</label>
                                                            <button type="button" class="form-control btn btn-xs btn-primary glyphicon glyphicon-remove-sign " id="DatosAnterior"></button>

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4 col-md-4">
                                                        <div class="form-group ">
                                                            @Html.LabelFor(c => c.CMedEmbarazadaFecha)
                                                            @Html.EJ().DatePickerFor(model => model.CMedEmbarazadaFecha).DateFormat("dd/MM/yyyy").Width("100%").ClientSideEvents(e => e.Change("onChange"))
                                                            @*@Html.EJ().DatePickerFor(model => model.CMedEmbarazadaFecha).Width("100%").ClientSideEvents(e => e.Change("onChange"))*@
                                                            @Html.ValidationMessageFor(model => model.CMedEmbarazadaFecha, null, new { @class = "label label-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3 col-md-3">
                                                        <div class="form-group ">
                                                            @Html.LabelFor(c => c.CMedEmbarazadaSemanas)
                                                            @Html.TextBoxFor(model => model.CMedEmbarazadaSemanas, new { @class = "form-control  ", @readonly = "readonly", @style = "background:rgb(255, 255, 192) !important" })
                                                            @Html.ValidationMessageFor(model => model.CMedEmbarazadaSemanas, null, new { @class = "label label-danger" })
                                                        </div>
                                                    </div>


                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-2 col-md-2">
                                                        <div class="form-group ">
                                                            @Html.LabelFor(c => c.CMedEmbarazadaDias)
                                                            @Html.TextBoxFor(model => model.CMedEmbarazadaDias, new { @class = "form-control  ", @readonly = "readonly", @style = "background:rgb(255, 255, 192) !important" })
                                                            @Html.ValidationMessageFor(model => model.CMedEmbarazadaDias, null, new { @class = "label label-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3 col-md-3">
                                                        <div class="form-group ">
                                                            @Html.LabelFor(c => c.CMedEmbarazadaMeses)
                                                            @Html.TextBoxFor(model => model.CMedEmbarazadaMeses, new { @class = "form-control  ", @readonly = "readonly", @style = "background:rgb(255, 255, 192) !important" })
                                                            @Html.ValidationMessageFor(model => model.CMedEmbarazadaMeses, null, new { @class = "label label-danger" })
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 col-sm-6 col-md-6">
                                                        <div class="col-xs-12 col-sm-4 col-md-4">
                                                            <div class="form-group ">

                                                                <label>Gen.Fec.</label>
                                                                <button type="button" class="form-control btn btn-xs btn-primary glyphicon  glyphicon-calendar " id="GenerarFechaProbable"></button>

                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-8 col-md-8">
                                                            <div class="form-group ">
                                                                @Html.LabelFor(c => c.CMedEmbarazadaFechaProbableParto)
                                                                @Html.EJ().DatePickerFor(model => model.CMedEmbarazadaFechaProbableParto).DateFormat("dd/MM/yyyy").Width("100%").ClientSideEvents(e => e.Change("onChangeProbableParto"))
                                                                @*@Html.EJ().DatePickerFor(model => model.CMedEmbarazadaFechaProbableParto).Width("100%").ClientSideEvents(e => e.Change("onChangeProbableParto"))*@
                                                                @Html.ValidationMessageFor(model => model.CMedEmbarazadaFechaProbableParto, null, new { @class = "label label-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <!--End embarazo current-->


                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-5 col-md-5">
                                <!--Patient current-->
                                <div id="parcialpaciente">
                                    <div class="panel panel-info ">
                                        <div class="panel-heading">
                                            Paciente En Consulta
                                            <span class="pull-right clickable"><i class="glyphicon glyphicon-chevron-up"></i></span>
                                        </div>
                                        <div class="panel-body">
                                            <div class="content">
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4 col-md-4">
                                                        @{ if (!string.IsNullOrEmpty(@Model.PaciFotoPath))
                                                         {
                                                        <p><img src="@Url.Content(@Model.PaciFotoPath.ToString() + "?" + DoctorMedicalWeb.Libreria.Lib.GetLocalDateTime().ToString("ddyyhhmmss"))" class="img-responsive" alt="Cinque Terre" id="PaciPicture" /></p>
                                                         }
                                                         else
                                                         {

                                                        <p><img src="~/Content/AdminFiles/images/_user-alt.png" class="img-responsive" alt="Cinque Terre" id="PaciPicture" /></p>
                                                         }
                                                        }
                                                    </div>
                                                    <div id="datosPaciente" class="col-xs-12 col-sm-8 col-md-8">
                                                        <div class="row">
                                                            <div class="col-xs-12 col-sm-12 col-md-12">
                                                                <p>@Html.LabelFor(s => s.PaciNombre):<span id="PaciNombre"></span></p>
                                                                <p><label>Apellido</label>:<span id="PaciApellido1"></span></p>
                                                                <p><label>Nacimiento</label>: <span id="PacifechaNacimientoString"></span></p>
                                                            </div>
                                                        </div>
                                                        <div class="row">
                                                            <div class="col-xs-12 col-sm-4 col-md-4">
                                                                <p> <label>Edad</label>: <span id="PaciEdad"></span></p>
                                                            </div>
                                                            <div class="col-xs-12 col-sm-8 col-md-8">
                                                                <p><label>Doc.</label>:<span id="PaciDocumento"></span> </p>
                                                            </div>
                                                        </div>
                                                        <div class="row">
                                                            <div class="col-xs-12 col-sm-12 col-md-12">
                                                                <p><label>Ultima Consulta</label>:<span id="ultimaFechaDeconsulta"></span></p>
                                                                <p><input type="button" class="btn btn-xs btn-primary glyphicon glyphicon-print" id="btnConsultasAnteriores" value="Consultas Anteriores" /></p>
                                                            </div>
                                                        </div>

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <!-- End Patient current-->
                            </div>
                        </div>
                    </div>




                    <div class="row">

                        <div class="col-xs-12 col-sm-4 col-md-4 ">

                        </div>

                        <div class="col-xs-12 col-sm-3 col-md-3 ">

                        </div>
                        <div class="col-xs-12 col-sm-5 col-md-5">

                        </div>

                    </div>

                    <div class="row">
                        <div class="col-xs-12 col-sm-12 col-md-12">
                            <!-- Nav tabs -->
                            <ul class="nav nav-tabs" role="tablist">
                                <li role="presentation" class="active"><a href="#consulta" aria-controls="consulta" role="tab" data-toggle="tab">Consulta</a></li>
                                <li role="presentation"><a href="#indicaciones" aria-controls="indicaciones" role="tab" data-toggle="tab">Receta</a></li>
                                <li role="presentation"><a href="#antecedentes" aria-controls="antecedentes" role="tab" data-toggle="tab">Antecedentes</a></li>

                                @*<li role="presentation"><a href="#resultados" aria-controls="resultados" role="tab" data-toggle="tab">Recepción de Resultados</a></li>*@
                            </ul>

                            <!-- Tab panes -->
                            <div class="tab-content">
                                <div role="tabpanel" class="tab-pane active" id="consulta">
                                    <!--Motivo Consulta-->

                                    <div class="panel panel-info ">
                                        <div class="panel-heading">
                                            Motivo Consulta
                                            <span class="pull-right clickable"><i class="glyphicon glyphicon-chevron-up"></i></span>
                                        </div>
                                        <div class="panel-body">
                                            <div class="row">
                                                <div class="col-xs-12 col-sm-6 col-md-6">
                                                    <div class=" form-groupCheckbox ">
                                                        @Html.LabelFor(model => model.MConsSecuencia_fk, new { @class = "control-label  " })
                                                        @Html.EJ().DropDownListFor(m => m.MConsSecuencia_fk).Datasource((IEnumerable<DoctorMedicalWeb.App_Data.MotivoConsulta>)ViewBag.MotivoConsulta).DropDownListFields(d => d.Text("MConsMotivoConsulta").Value("MConsSecuencia")).ShowCheckbox(true).EnableFilterSearch(true).Width("100%").MultiSelectMode(MultiSelectModeTypes.VisualMode).ClientSideEvents(e => e.Change("drpvaluechangeMotivo")).WatermarkText("Seleccione Motivo Consulta")
                                                        <span class="label label-danger field-validation-error " id="ErrorComboMotivoConsulta" style="visibility:hidden">Favor seleccione motivo consulta</span>

                                                    </div>
                                                </div>
                                                <div class="col-xs-12 col-sm-2 col-md-2">
                                                    <div class="form-group ">
                                                        <label> </label>
                                                        <button type="button" class="form-control btn btn-xs btn-primary glyphicon glyphicon-flash " id="ActuMotivoConsulta"></button>

                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-xs-12 col-sm-12 col-md-12">
                                                    <div class="form-group ">
                                                        @Html.LabelFor(model => model.MotiComentario, new { @class = "control-label " })
                                                        @Html.TextAreaFor(m => m.MotiComentario, new { @class = "form-control heigConsulta" })
                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                    </div>

                                    <!-- End MotivoConsulta-->
                                    <!--Evaluación Fisica-->

                                    <div class="panel panel-info ">
                                        <div class="panel-heading">
                                            Evaluación Física
                                            <span class="pull-right clickable"><i class="glyphicon glyphicon-chevron-up"></i></span>
                                        </div>
                                        <div class="panel-body">
                                            <div class="row">
                                                <div class="col-xs-12 col-sm-6 col-md-6">
                                                    <div class="form-group">
                                                        <div class="MenuEInformacionSegundaFila">

                                                            @Html.LabelFor(model => model.EFisiSecuencia_fk, new { @class = "control-label " })
                                                            @Html.EJ().DropDownListFor(m => m.EFisiSecuencia_fk).Datasource((IEnumerable<DoctorMedicalWeb.App_Data.EvaluacionFisica>)ViewBag.EvaluacionFisica).DropDownListFields(d => d.Text("EFisiCodigoNombre").Value("EFisiSecuencia")).ShowCheckbox(true).EnableFilterSearch(true).Width("100%").MultiSelectMode(MultiSelectModeTypes.VisualMode).ClientSideEvents(e => e.Change("drpvaluechangeEvalu")).WatermarkText("Seleccione Evaluación Física")
                                                        </div>

                                                    </div>
                                                </div>
                                                <div class="col-xs-12 col-sm-2 col-md-2">
                                                    <div class="form-group ">
                                                        <label> </label>
                                                        <button type="button" class="form-control btn btn-xs btn-primary glyphicon glyphicon-flash " id="ActuEvaluacionFisica"></button>

                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-xs-12 col-sm-12 col-md-12">
                                                    <div class="form-group ">
                                                        @Html.LabelFor(model => model.EFisiComentario, new { @class = "control-label " })
                                                        @Html.TextAreaFor(m => m.EFisiComentario, new { @class = "form-control heigConsulta" })

                                                    </div>
                                                </div>

                                            </div>
                                            <div class="row">
                                                <div class="col-xs-12 col-sm-1 col-md-1">

                                                    <div class="form-group  ">
                                                        @Html.LabelFor(c => c.CMHistPeso, new { @class = "control-label  " })

                                                        @Html.TextBoxFor(model => model.CMHistPeso, new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(m => m.CMHistPeso, null, new { @class = "label label-danger" })
                                                    </div>

                                                </div>
                                                <div class="col-xs-12 col-sm-3 col-md-3">
                                                    <div class="form-group ">
                                                        @Html.LabelFor(c => c.CMHistUnidadesMedidaPeso, new { @class = "control-label " })
                                                        @Html.DropDownListFor(m => m.CMHistUnidadesMedidaPeso, ViewBag.unidadPeso as SelectList, "Unidad", new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(m => m.CMHistUnidadesMedidaPeso, null, new { @class = "label label-danger" })
                                                    </div>
                                                </div>
                                                <div class="col-xs-12 col-sm-1 col-md-1">
                                                    <div class="form-group ">
                                                        @Html.LabelFor(c => c.CMHistTalla, new { @class = "control-label " })
                                                        @Html.TextBoxFor(model => model.CMHistTalla, new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(m => m.CMHistTalla, null, new { @class = "label label-danger" })
                                                    </div>
                                                </div>
                                                <div class="col-xs-12 col-sm-3 col-md-3">
                                                    <div class="form-group ">
                                                        @Html.LabelFor(c => c.CMHistUnidadesMedidaTalla, new { @class = "control-label " })
                                                        @Html.DropDownListFor(m => m.CMHistUnidadesMedidaTalla, ViewBag.unidadLongitud as SelectList, "Unidad", new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(m => m.CMHistUnidadesMedidaTalla, null, new { @class = "label label-danger" })
                                                    </div>
                                                </div>
                                                <div class="col-xs-12 col-sm-3 col-md-3">
                                                    <div class="form-group ">
                                                        @Html.LabelFor(c => c.CMHistFechaUltimaRegla, new { @class = "control-label " })
                                                        @Html.EJ().DatePickerFor(model => model.CMHistFechaUltimaRegla).DateFormat("dd/MM/yyyy").Width("100%")
                                                        @*@Html.EJ().DatePickerFor(model => model.CMHistFechaUltimaRegla).Width("100%")*@
                                                        @Html.ValidationMessageFor(m => m.CMHistFechaUltimaRegla, null, new { @class = "label label-danger" })
                                                    </div>
                                                </div>

                                                <div class="col-xs-12 col-sm-1 col-md-1">
                                                    <div class="form-group ">
                                                        @Html.LabelFor(c => c.CMHistIndiceMasaCorporal, new { @class = "control-label " })
                                                        @Html.TextBoxFor(model => model.CMHistIndiceMasaCorporal, new { @class = "form-control", @readonly = "readonly", @style = "background:rgb(255, 255, 192) !important" })
                                                        @Html.ValidationMessageFor(m => m.CMHistIndiceMasaCorporal, null, new { @class = "label label-danger" })
                                                    </div>
                                                </div>

                                            </div>

                                        </div>
                                    </div>

                                    <!-- End Evaluación Fisica-->
                                    <!--Diagnostico-->

                                    <div class="panel panel-info ">
                                        <div class="panel-heading">
                                            Diagnóstico
                                            <span class="pull-right clickable"><i class="glyphicon glyphicon-chevron-up"></i></span>
                                        </div>
                                        <div class="panel-body">
                                            <div class="row">
                                                <div class="col-xs-12 col-sm-6 col-md-6">
                                                    <div class=" form-group">
                                                        @Html.LabelFor(model => model.DiagSecuencia, new { @class = "control-label " })
                                                        @Html.EJ().DropDownListFor(m => m.DiagSecuencia).Datasource((IEnumerable<DoctorMedicalWeb.App_Data.Diagnostico>)ViewBag.Diagnostico).DropDownListFields(d => d.Text("DiagNombre").Value("DiagSecuencia")).ShowCheckbox(true).EnableFilterSearch(true).Width("100%").MultiSelectMode(MultiSelectModeTypes.VisualMode).ClientSideEvents(e => e.Change("drpvaluechangeDiag")).WatermarkText("Seleccione Diagnóstico")
                                                    </div>
                                                </div>
                                                <div class="col-xs-12 col-sm-2 col-md-2">
                                                    <div class="form-group ">
                                                        <label> </label>
                                                        <button type="button" class="form-control btn btn-xs btn-primary glyphicon glyphicon-flash " id="ActuDiagnostico"></button>

                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-xs-12 col-sm-12 col-md-12">
                                                    <div class="form-group ">
                                                        @Html.LabelFor(model => model.DiagComentario, new { @class = "control-label " })
                                                        @Html.TextAreaFor(m => m.DiagComentario, new { @class = "form-control heigConsulta" })
                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                    </div>

                                    <!-- End Diagnostico-->
                                    <!--Tratamiento-->

                                    <div class="panel panel-info ">
                                        <div class="panel-heading">
                                            Tratamiento o Plan
                                            <span class="pull-right clickable"><i class="glyphicon glyphicon-chevron-up"></i></span>
                                        </div>
                                        <div class="panel-body">
                                            <div class="row">
                                                <div class="col-xs-12 col-sm-6 col-md-6">
                                                    <div class=" form-group">
                                                        @Html.LabelFor(model => model.TratSecuencia_fk, new { @class = "control-label " })
                                                        @Html.EJ().DropDownListFor(m => m.TratSecuencia_fk).Datasource((IEnumerable<DoctorMedicalWeb.App_Data.Tratamiento>)ViewBag.Tratamiento).DropDownListFields(d => d.Text("TratNombre").Value("TratSecuencia")).ShowCheckbox(true).EnableFilterSearch(true).Width("100%").MultiSelectMode(MultiSelectModeTypes.VisualMode).ClientSideEvents(e => e.Change("drpvaluechangeTrata")).WatermarkText("Seleccione Tratamiento")
                                                    </div>
                                                </div>
                                                <div class="col-xs-12 col-sm-2 col-md-2">
                                                    <div class="form-group ">
                                                        <label> </label>
                                                        <button type="button" class="form-control btn btn-xs btn-primary glyphicon glyphicon-flash " id="ActuTratamiento"></button>

                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-xs-12 col-sm-12 col-md-12">
                                                    <div class="form-group ">
                                                        @Html.LabelFor(model => model.TratComentario, new { @class = "control-label " })
                                                        @Html.TextAreaFor(m => m.TratComentario, new { @class = "form-control heigConsulta" })
                                                    </div>
                                                </div>


                                            </div>
                                        </div>
                                    </div>

                                    <!-- End Tratamiento-->
                                    <!---Ultimas 5 consultas-->
                                    <div class="row">
                                        <div class="col-xs-12 col-sm-12 col-md-12">
                                            <h3>Ultimas 5 Consultas del Día.</h3>
                                        </div>
                                        <div class="row">
                                            <div id="Grid" class="col-md-12">
                                                @{
                                                    @(Html.EJ().Grid<IEnumerable<object>>("Searching")
                                            .EnableAltRow(false)
                                            .Datasource((IEnumerable<object>)ViewBag.ultimosCinco)
                                            .AllowResizing(true)
                                            .Columns(col =>
                                            {
                                                col.Field("DoctSecuencia_fk").HeaderText("Código").IsPrimaryKey(true).Visible(false).TextAlign(TextAlign.Right).Width(40).Add();
                                                col.Field("PaciSecuencia_fk").HeaderText("paciente ID").IsPrimaryKey(true).Visible(false).TextAlign(TextAlign.Right).Width(50).Add();
                                                col.Field("CMHistSecuencia").HeaderText("Código").IsPrimaryKey(true).Visible(false).TextAlign(TextAlign.Right).Width(40).Add();
                                                col.Field("CMHistCodigo").HeaderText("Código").IsPrimaryKey(true).Visible(true).TextAlign(TextAlign.Right).Width(100).Add();
                                                col.Field("NombreCompleto").HeaderText("Paciente").Width(230).Add();
                                                col.Field("PaciDocumento").HeaderText("Documento").Width(90).Add();
                                                col.Field("CMHistFechaString").HeaderText("Fecha").Width(100).Add();
                                                col.Field("CMHistHoraString").HeaderText("Hora").Width(100).Add();
                                                col.HeaderText("").Width(15).Commands(command =>
                                                {
                                                    command.Type("detail")
                                                    .ButtonOptions(new Syncfusion.JavaScript.Models.ButtonProperties()
                                                    {
                                                        Text = "Editar",
                                                        //Width = "100px",
                                                        Click = "onClick"

                                                    }).Add();

                                                }).TextAlign(TextAlign.Left)

                                                .Width(60)
                                                .Add();
                                            })
                                                    )}

                                            </div>
                                        </div>

                                    </div>
                                    <!---End Ultimas 5 consultas-->


                                </div>
                                <div role="tabpanel" class="tab-pane" id="indicaciones">
                                    <div class="row">

                                        <div id="menuRecetaConsulta" class="col-xs-12 col-sm-12 col-md-12" style="bottom: 10px;z-index: 999;">
                                            <button type="button" id="btnGinecoRecetaNuevo" class="btn btn-primary btn-md glyphicon glyphicon-plus" accesskey="n">Nuevo</button>
                                            <button type="button" id="btnGinecoRecetaAgregar" class="btn btn-success btn-md glyphicon glyphicon-floppy-disk" accesskey="s" hidden>Agregar</button>
                                            <button type="button" id="btnGinecoRecetaBorrar" class="btn  btn-danger  btn-md glyphicon glyphicon-trash " accesskey="x">Eliminar</button>
                                            <button type="button" id="btnGinecoRecetaImprimirReceta" class="btn  btn-danger  btn-md glyphicon glyphicon-print " accesskey="x"> Imprimir Receta</button>
                                            @*@Html.ActionLink("Report", "Ini_ReporteReceta", "ReporteReceta")*@
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-xs-12 col-sm-6 col-md-6">
                                            <div class="row ">

                                                <div class="col-xs-12 col-sm-6 col-md-6">
                                                    <div class="form-group ">
                                                        @Html.LabelFor(c => c.Consult_RecCodigo)
                                                        @Html.ValidationMessageFor(model => model.Consult_RecCodigo, null, new { @class = "label label-danger" })
                                                        @Html.TextBoxFor(model => model.Consult_RecCodigo, new { @class = "form-control", @readonly = "readonly", @style = "background:rgb(255, 255, 192) !important", placeholder = "Código" })
                                                    </div>
                                                </div>
                                                <div class="col-xs-12 col-sm-6 col-md-6">
                                                    <div class="form-group ">
                                                        @*@Html.LabelFor(c => c.Consult_ReceSecuencia)*@
                                                        @*@Html.TextBoxFor(model => model.Consult_ReceSecuencia, new { @class = "form-control", @readonly = "readonly", @style = "background:rgb(255, 255, 192) !important ", placeholder = "Sec." })*@
                                                        @*@Html.ValidationMessageFor(model => model.Consult_ReceSecuencia, null, new { @class = "label label-danger" })*@
                                                    </div>
                                                </div>
                                            </div>

                                        </div>

                                        <div class="col-xs-12 col-sm-6 col-md-6">
                                            <div class="row ">
                                                <div class="col-xs-12 col-sm-10 col-md-10">
                                                    <div class="form-group formFields ">
                                                        <label class="control-label">Medicamentos</label>
                                                        @Html.EJ().DropDownListFor(m => m.Consult_MediSecuencia_fk).Datasource((IEnumerable<DoctorMedicalWeb.App_Data.Medicamento>)ViewBag.MedicamentosListaCheck).DropDownListFields(d => d.Text("MediNombre").Value("MediSecuencia")).ShowCheckbox(true).EnableFilterSearch(true).Width("100%").MultiSelectMode(MultiSelectModeTypes.VisualMode).ClientSideEvents(e => e.Change("drpvaluechangeMedicamento")).WatermarkText("Seleccione Medicamento")
                                                        <span class="label label-danger field-validation-error " id="ErrorComboMedicamentos" style="visibility:hidden">Favor seleccione Medicamentos</span>
                                                    </div>
                                                </div>
                                                <div class="col-xs-12 col-sm-2 col-md-2">
                                                    <div class="form-group ">
                                                        <label> </label>
                                                        <button type="button" class="form-control btn btn-xs btn-primary glyphicon glyphicon-flash " id="ActuMedicamento"></button>

                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                    </div>



                                    <div class="row">
                                        <div class="col-xs-12 col-sm-6 col-md-6">
                                            <div class="row ">
                                                <div class="col-xs-12 col-sm-10 col-md-10">
                                                    <div class="form-group formFields ">
                                                        <label class="control-label">Análisis Clínico</label>
                                                        @Html.EJ().DropDownListFor(m => m.Consult_AClinSecuencia_fk).Datasource((IEnumerable<DoctorMedicalWeb.App_Data.AnalisisClinico>)ViewBag.AnalisisClinicoListaCheck).DropDownListFields(d => d.Text("AClinNombre").Value("AClinSecuencia")).ShowCheckbox(true).EnableFilterSearch(true).Width("100%").MultiSelectMode(MultiSelectModeTypes.VisualMode).ClientSideEvents(e => e.Change("drpvaluechangeAnalisis")).WatermarkText("Seleccione Análisis")
                                                        <span class="label label-danger field-validation-error " id="ErrorComboMedicamentos" style="visibility:hidden">Favor seleccione Medicamentos</span>
                                                    </div>
                                                </div>
                                                <div class="col-xs-12 col-sm-2 col-md-2">
                                                    <div class="form-group ">
                                                        <label> </label>
                                                        <button type="button" class="form-control btn btn-xs btn-primary glyphicon glyphicon-flash " id="ActuAnalisisClinico"></button>

                                                    </div>
                                                </div>
                                            </div>

                                        </div>




                                        <div class="col-xs-12 col-sm-6 col-md-6">
                                            <div class="row ">
                                                <div class="col-xs-12 col-sm-10 col-md-10">
                                                    <div class="form-group formFields">
                                                        <label class="control-label">Imágenes</label>
                                                        @Html.EJ().DropDownListFor(m => m.Consult_ImagSecuencia_fk).Datasource((IEnumerable<DoctorMedicalWeb.App_Data.Imagene>)ViewBag.ImagenesListaCheck).DropDownListFields(d => d.Text("ImagNombre").Value("ImagSecuencia")).ShowCheckbox(true).EnableFilterSearch(true).Width("100%").MultiSelectMode(MultiSelectModeTypes.VisualMode).ClientSideEvents(e => e.Change("drpvaluechangeImagen")).WatermarkText("Seleccione Imagen")
                                                        <span class="label label-danger field-validation-error " id="ErrorComboMedicamentos" style="visibility:hidden">Favor seleccione Medicamentos</span>
                                                    </div>
                                                </div>
                                                <div class="col-xs-12 col-sm-2 col-md-2">
                                                    <div class="form-group ">
                                                        <label> </label>
                                                        <button type="button" class="form-control btn btn-xs btn-primary glyphicon glyphicon-flash " id="ActuImagenes"></button>

                                                    </div>
                                                </div>
                                            </div>
                                        </div>


                                    </div>


                                    <div class="row ">
                                        <div class="col-xs-12 col-sm-12 col-md-12">

                                            <div class="form-group ">
                                                @Html.LabelFor(c => c.Consult_ReceComentario)
                                                @Html.TextAreaFor(model => model.Consult_ReceComentario, new { @class = "form-control", placeholder = Html.DisplayNameFor(n => n.Consult_ReceComentario) })
                                                @Html.ValidationMessageFor(model => model.Consult_ReceComentario, null, new { @class = "label label-danger" })
                                            </div>


                                        </div>


                                    </div>

                                    <div class="row ">
                                        <div class="col-md-12">
                                            <h3>Recetas de ésta Consulta</h3>
                                        </div>
                                        <div class="row">
                                            <div id="Grid" class="col-md-12">
                                                @{
                                                    @(Html.EJ().Grid<IEnumerable<object>>("Recetas")
                                            .EnableAltRow(false)
                                            .Datasource((IEnumerable<object>)ViewBag.RecetasConsulta)
                                            .IsResponsive()
                                            .AllowResizing(true)
                                            .AllowPaging()
                                            .PageSettings(e => e.PageSize(6))
                                            .ToolbarSettings(toolbar => { toolbar.ShowToolbar().ToolbarItems(items => { items.AddTool(ToolBarItems.Search); }); })
                                            .Columns(col =>
                                            {
                                                col.Field("ReceSecuencia").HeaderText("Cantidad").IsPrimaryKey(true).Visible(false).TextAlign(TextAlign.Right).Width(50).Add();
                                                col.Field("CMHistSecuencia_fk").HeaderText("CMHistSecuencia_fk").IsPrimaryKey(true).Visible(false).Width(150).Add();
                                                col.Field("RecCodigo").HeaderText("Código").Visible(true).TextAlign(TextAlign.Right).Width(100).Add();
                                                col.Field("PaciSecuencia").HeaderText("PaciSecuencia").Visible(false).Width(150).Add();
                                                col.Field("RecNombre").HeaderText("Nombre").Width(230).Add();
                                                col.Field("ReceFechaString").HeaderText("Fecha de Cita").Type("date").Format("{0:dd/MM/yyyy}").Width(100).Add();

                                                col.HeaderText("").Commands(command =>
                                                {
                                                    command.Type("detail")
                                                    .ButtonOptions(new Syncfusion.JavaScript.Models.ButtonProperties()
                                                    {
                                                        Text = "Editar",
                                                        Width = "100px",
                                                        Click = "onClickReceta"
                                                    }).Add();

                                                }).TextAlign(TextAlign.Left)

                                                .Width(60)
                                                .Add();
                                            })

                                                    )}

                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div role="tabpanel" class="tab-pane" id="antecedentes">
                                    @*<div class="panel panel-info">
                                <div class="panel-heading">Panel with panel-info class</div>
                                <div class="panel-body">Panel Content</div>
                                </div>*@
                                    <div class="row">
                                        <div class="col-xs-12 col-sm-12 col-md-12">
                                            <div class="panel panel-info ">
                                                <div class="panel-heading">
                                                    @*<h3 class="panel-title">Familiares</h3>*@
                                                    Familiares
                                                    <span class="pull-right clickable"><i class="glyphicon glyphicon-chevron-up"></i></span>
                                                </div>
                                                <div class="panel-body">
                                                    <div class="row">
                                                        <div class="col-xs-12 col-sm-6 col-md-6">
                                                            <div class="form-group ">
                                                                <label class="control-label ">Parientes </label>
                                                                @Html.DropDownListFor(m => m.Familiar, ViewBag.familiar as SelectList, "Familia", new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-6 col-md-6">


                                                            <div class="form-group ">
                                                                <label class="control-label ">Enfermedad </label>
                                                                @Html.EJ().DropDownListFor(m => m.EnfeSecuenciaFamiliar).Datasource((IEnumerable<DoctorMedicalWeb.App_Data.Enfermedad>)ViewBag.Enfermedades).DropDownListFields(d => d.Text("EnfeNombre").Value("EnfeSecuencia")).EnableFilterSearch(true).Width("100%").ClientSideEvents(e => e.Change("drpvaluechangeEnfermedad").PopupShown("drppopupshow").BeforePopupShown("drpbeforepopupshow")).WatermarkText("Seleccione Enfermedad")
                                                                @*<doctormedicalweb.app_data.enfermedad>                                                                            <doctormedicalweb.app_data.enfermedad>*@
                                                                @Html.ValidationMessageFor(model => model.EnfeSecuenciaFamiliar, null, new { @class = "label label-danger" })
                                                            </div>




                                                        </div>

                                                    </div>
                                                    <div class="row">
                                                        <div class="col-xs-12 col-sm-12 col-md-12">
                                                            <div class="form-group ">
                                                                @Html.LabelFor(model => model.EnfeComentarioFamiliar, new { @class = "control-label " })
                                                                @Html.TextAreaFor(m => m.EnfeComentarioFamiliar, new { @class = "form-control heigConsulta" })
                                                            </div>
                                                        </div>

                                                    </div>

                                                </div>
                                            </div>
                                        </div>

                                    </div>

                                    <div class="row">
                                        <div class="col-xs-12 col-sm-12 col-md-12">
                                            <div class="panel panel-info">
                                                <div class="panel-heading">
                                                    Personal
                                                    <span class="pull-right clickable"><i class="glyphicon glyphicon-chevron-up"></i></span>
                                                </div>
                                                <div class="panel-body">
                                                    <div class="row">
                                                        <div class="col-xs-12 col-sm-6 col-md-6">
                                                            <div class="form-group ">
                                                                <label class="control-label ">Enfermedades </label>

                                                                @Html.EJ().DropDownListFor(m => m.EnfeSecuenciaPersonal).Datasource((IEnumerable<DoctorMedicalWeb.App_Data.Enfermedad>)ViewBag.Enfermedades).DropDownListFields(d => d.Text("EnfeNombre").Value("EnfeSecuencia")).ShowCheckbox(true).EnableFilterSearch(true).Width("100%").MultiSelectMode(MultiSelectModeTypes.VisualMode).ClientSideEvents(e => e.Change("drpvaluechangeEnfermedadPersonal")).WatermarkText("Seleccione Enfermedad")

                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-2 col-md-2">
                                                            <div class="form-group ">
                                                                <label> </label>
                                                                <button type="button" class="form-control btn btn-xs btn-primary glyphicon glyphicon-flash " id="ActuEnfermedad"></button>

                                                            </div>
                                                        </div>


                                                    </div>
                                                    <div class="row">
                                                        <div class="col-xs-12 col-sm-12 col-md-12">
                                                            <div class="form-group ">
                                                                @Html.LabelFor(model => model.EnfeComentarioPersonal, new { @class = "control-label " })
                                                                @Html.TextAreaFor(m => m.EnfeComentarioPersonal, new { @class = "form-control heigConsulta" })
                                                            </div>
                                                        </div>


                                                    </div>

                                                </div>
                                            </div>
                                        </div>

                                    </div>

                                    <div class="row">
                                        <div class="col-xs-12 col-sm-12 col-md-12">
                                            <div class="panel panel-info">
                                                <div class="panel-heading">
                                                    Gineco-obstétricos
                                                    <span class="pull-right clickable"><i class="glyphicon glyphicon-chevron-up"></i></span>
                                                </div>
                                                <div class="panel-body">
                                                    <div class="row">
                                                        <div class="col-xs-12 col-sm-3 col-md-3">
                                                            <div class="form-group ">
                                                                @Html.LabelFor(c => c.GSangSecuencia_fk)
                                                                @Html.DropDownListFor(m => m.GSangSecuencia_fk, ViewBag.grupoSanguineo as SelectList, "Grupo Sanguineo", new { @class = "form-control" })
                                                                @Html.ValidationMessageFor(model => model.GSangSecuencia_fk, null, new { @class = "label label-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-3 col-md-3">
                                                            <div class="form-group ">
                                                                @Html.LabelFor(c => c.CMediMenarquia)
                                                                @Html.DropDownListFor(m => m.CMediMenarquia, ViewBag.menarquia as SelectList, "Rango Años", new { @class = "form-control" })
                                                                @Html.ValidationMessageFor(model => model.CMediMenarquia, null, new { @class = "label label-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-3 col-md-3">
                                                            <div class="form-group ">
                                                                @Html.LabelFor(c => c.CMediPatronMenstrual)
                                                                @Html.DropDownListFor(m => m.CMediPatronMenstrual, ViewBag.patronMenstrual as SelectList, "Patrón Menstrual", new { @class = "form-control" })
                                                                @Html.ValidationMessageFor(model => model.CMediPatronMenstrual, null, new { @class = "label label-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-3 col-md-3">
                                                            <div class="form-group ">
                                                                @Html.LabelFor(c => c.CMediMensutracionDuracion)
                                                                @Html.DropDownListFor(m => m.CMediMensutracionDuracion, ViewBag.duracionMenstrual as SelectList, "Duración", new { @class = "form-control" })
                                                                @Html.ValidationMessageFor(model => model.CMediMensutracionDuracion, null, new { @class = "label label-danger" })
                                                            </div>
                                                        </div>

                                                    </div>
                                                    <div class="row">
                                                        <div class="col-xs-12 col-sm-2 col-md-2">
                                                            <div class="form-group ">
                                                                @Html.LabelFor(c => c.CMediVidaSexualActiva)
                                                                @Html.CheckBoxFor(model => model.CMediVidaSexualActiva, new { @class = "form-control  " })
                                                                @Html.ValidationMessageFor(model => model.CMediVidaSexualActiva, null, new { @class = "label label-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-2 col-md-2">
                                                            <div class="form-group ">
                                                                @Html.LabelFor(c => c.CMediPrimerCoito)
                                                                @Html.TextBoxFor(model => model.CMediPrimerCoito, new { @class = "form-control  " })
                                                                @Html.ValidationMessageFor(model => model.CMediPrimerCoito, null, new { @class = "label label-danger" })
                                                            </div>
                                                        </div>

                                                        <div class="col-xs-12 col-sm-2 col-md-2">
                                                            <div class="form-group ">
                                                                @Html.LabelFor(c => c.CMediNumeroParejasSexual)
                                                                @Html.TextBoxFor(model => model.CMediNumeroParejasSexual, new { @class = "form-control  " })
                                                                @Html.ValidationMessageFor(model => model.CMediNumeroParejasSexual, null, new { @class = "label label-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-2 col-md-2">
                                                            <div class="form-group ">
                                                                @Html.LabelFor(c => c.CMediGestacionVeces)
                                                                @Html.TextBoxFor(model => model.CMediGestacionVeces, new { @class = "form-control  " })
                                                                @Html.ValidationMessageFor(model => model.CMediGestacionVeces, null, new { @class = "label label-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-2 col-md-2">
                                                            <div class="form-group ">
                                                                @Html.LabelFor(c => c.CMediPartosVeces)
                                                                @Html.TextBoxFor(model => model.CMediPartosVeces, new { @class = "form-control  " })
                                                                @Html.ValidationMessageFor(model => model.CMediPartosVeces, null, new { @class = "label label-danger" })
                                                            </div>
                                                        </div>


                                                        <div class="col-xs-12 col-sm-2 col-md-2">
                                                            <div class="form-group ">
                                                                @Html.LabelFor(c => c.CMediAbortosVeces)
                                                                @Html.TextBoxFor(model => model.CMediAbortosVeces, new { @class = "form-control  " })
                                                                @Html.ValidationMessageFor(model => model.CMediAbortosVeces, null, new { @class = "label label-danger" })
                                                            </div>
                                                        </div>




                                                    </div>

                                                    <div class="row">

                                                        <div class="col-xs-12 col-sm-2 col-md-2">
                                                            <div class="form-group ">
                                                                @Html.LabelFor(c => c.CMediCesariasVeces)
                                                                @Html.TextBoxFor(model => model.CMediCesariasVeces, new { @class = "form-control  " })
                                                                @Html.ValidationMessageFor(model => model.CMediCesariasVeces, null, new { @class = "label label-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-2 col-md-2">
                                                            <div class="form-group ">
                                                                @Html.LabelFor(c => c.CMediEctopico)
                                                                @Html.TextBoxFor(model => model.CMediEctopico, new { @class = "form-control  " })
                                                                @Html.ValidationMessageFor(model => model.CMediEctopico, null, new { @class = "label label-danger" })
                                                            </div>

                                                        </div>
                                                        <div class="col-xs-12 col-sm-2 col-md-2">
                                                            <div class="form-group ">
                                                                @Html.LabelFor(c => c.CMediDismenorrea)
                                                                @Html.CheckBoxFor(model => model.CMediDismenorrea, new { @class = "form-control  " })
                                                                @Html.ValidationMessageFor(model => model.CMediDismenorrea, null, new { @class = "label label-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-3 col-md-3">
                                                            <div class="form-group ">
                                                                @Html.LabelFor(c => c.CMediFechaUltimoParto)
                                                                @Html.EJ().DatePickerFor(model => model.CMediFechaUltimoParto).DateFormat("dd/MM/yyyy").Width("100%")
                                                                @Html.ValidationMessageFor(model => model.CMediFechaUltimoParto, null, new { @class = "label label-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-3 col-md-3">
                                                            <div class="form-group ">
                                                                <div class="form-group ">
                                                                    @Html.LabelFor(c => c.CMediFechaUltimoAborto)
                                                                    @Html.EJ().DatePickerFor(model => model.CMediFechaUltimoAborto).DateFormat("dd/MM/yyyy").Width("100%")
                                                                    @Html.ValidationMessageFor(model => model.CMediFechaUltimoAborto, null, new { @class = "label label-danger" })
                                                                </div>
                                                            </div>
                                                        </div>



                                                    </div>

                                                    <div class="row">
                                                        <div class="col-xs-12 col-sm-2 col-md-2">
                                                            <div class="form-group ">
                                                                @Html.LabelFor(c => c.CMediMenopausia)
                                                                @Html.TextBoxFor(model => model.CMediMenopausia, new { @class = "form-control  " })
                                                                @Html.ValidationMessageFor(model => model.CMediMenopausia, null, new { @class = "label label-danger" })
                                                            </div>

                                                        </div>
                                                        <div class="col-xs-12 col-sm-3 col-md-3">

                                                            <div class="form-group ">
                                                                @Html.LabelFor(c => c.CMediFechaUltimaMenstruacion)
                                                                @Html.EJ().DatePickerFor(model => model.CMediFechaUltimaMenstruacion).DateFormat("dd/MM/yyyy").Width("100%")
                                                                @Html.ValidationMessageFor(model => model.CMediFechaUltimaMenstruacion, null, new { @class = "label label-danger" })
                                                            </div>

                                                        </div>
                                                        <div class="col-xs-12 col-sm-3 col-md-3">

                                                            <div class="form-group ">

                                                                @Html.LabelFor(c => c.CMediFechaUltimoPapanicolau)
                                                                @Html.EJ().DatePickerFor(model => model.CMediFechaUltimoPapanicolau).DateFormat("dd/MM/yyyy").Width("100%")
                                                                @Html.ValidationMessageFor(model => model.CMediFechaUltimoPapanicolau, null, new { @class = "label label-danger" })

                                                            </div>

                                                        </div>
                                                    </div>



                                                </div>
                                            </div>
                                        </div>
                                    </div>


                                </div>

                                @*<div role="tabpanel" class="tab-pane" id="resultados">
                            </div>*@
                                @*<div role="tabpanel" class="tab-pane" id="resultados">
                            </div>*@
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>

        @Html.HiddenFor(model => model.DoctSecuencia_fk)
        @Html.HiddenFor(model => model.PaisSecuencia_fk)
        @Html.HiddenFor(model => model.ClinSecuencia_fk)
        @Html.HiddenFor(model => model.ConsSecuencia_fk)
        @Html.HiddenFor(model => model.PaciSecuencia_fk)
        @Html.HiddenFor(model => model.CMHistSecuencia)

    @Html.HiddenFor(model => model.Consult_ReceSecuencia)





        @Html.HiddenFor(model => model.CMediSecuencia)




    }
</div>


<!--Modal Maintenance-->
<div class="modal fade" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog" id="modalMaintenance">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            @using (Html.BeginForm("PendientesValidar", "Consulta", FormMethod.Post, new
            {
                @id = "frmMaintenance",
                @class = "form-horizontal",
                @role = "form"@*, onsumbit = "formSubmit()"*@ }))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title text-primary"><span id="TituloModalMaintenance"></span></h4>
                </div>
                <div class="modal-body">
                    <div class="container">

                        <div class="col-md-12">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group ">
                                        <label>Nombre:</label>
                                        <input type="text" class="form-control" id="NombreMaintenance" />
                                        @Html.ValidationMessage("NombreMaintenance", null, new { @class = "label label-danger" })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group ">
                                        <label>Descripción:</label>
                                        <textarea class="form-control" cols="20" id="DescripcionMaintenance" name="DescripcionMaintenance" rows="2"></textarea>
                                        @Html.ValidationMessage("DescripcionMaintenance", null, new { @class = "label label-danger" })
                                    </div>
                                </div>

                            </div>
                        </div>

                    </div>
                </div>
                <div class="modal-footer">
                    <input type="hidden" class="form-control" id="idMaintenance" />
                    <input type="hidden" class="form-control" id="idDropdownlist" />
                    <button type="button" id="btnActualizarMaintenance" class="btn btn-primary">Guardar Mantenimiento</button>
                </div>
            }
        </div>
    </div>
</div>
<!--EndModal Maintenance-->
<!--Modal Paciente-->
<div class="modal fade" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog" id="modalPacientes">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            @using (Html.BeginForm("PendientesValidar", "Consulta", FormMethod.Post, new { @id = "frmPacientes", @class = "form-horizontal", @role = "form", onsumbit = "formSubmit()" }))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title text-primary">Pacientes</h4>
                </div>
                <div class="modal-body">
                    <div class="container">
                        <div class="col-md-12">
                            @{
                                @(Html.EJ().Grid<IEnumerable<object>>("Pacientes")

                        .Datasource((IEnumerable<object>)ViewBag.listPacientes)
                        .IsResponsive()
                        .AllowResizing(true)
                        .AllowPaging()
                        .PageSettings(e => e.PageSize(5))

                        .ToolbarSettings(toolbar => { toolbar.ShowToolbar().ToolbarItems(items => { items.AddTool(ToolBarItems.Search); }); })
                        .ClientSideEvents(eve => { eve.RecordDoubleClick("rowSelectedPaciente"); })
                        .Columns(col =>
                        {
                            col.Field("PaciSecuencia").HeaderText("ID").IsPrimaryKey(true).Visible(true).Width(5).TextAlign(TextAlign.Right).Add();
                            col.Field("PaciNombre").HeaderText("Nombre").Width(10).Add();
                            col.Field("PaciApellido1").HeaderText("Apellido1").Width(10).Add();
                            col.Field("PaciApellido2").HeaderText("Apellido2").Width(10).Add();
                            col.Field("PaciDocumento").HeaderText("Documento").Width(10).Add();

                        })
                                )
                            }

                        </div>
                        <div class="col-md-4"></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" id="btnSeleccionarPaciente" class="btn btn-primary">Seleccionar</button>
                </div>
            }
        </div>
    </div>
</div>
<!--EndModal Patients-->
<!--Modal Previous Consultations-->
<div class="modal fade" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog" id="modalConsultasAnteriores">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            @using (Html.BeginForm("PendientesValidar", "Consulta", FormMethod.Post, new { @id = "frmConsultasAnteriores", @class = "form-horizontal", @role = "form" }))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title text-primary">Consultas Médicas Anteriores</h4>
                </div>
                <div class="modal-body">
                    <div class="container">
                        <div class="col-md-12">
                            @{
                                @(Html.EJ().Grid<IEnumerable<object>>("ConsultasAnteriores")

                        .Datasource((IEnumerable<object>)ViewBag.listConsultasAnteriores)
                        .IsResponsive()
                        .AllowResizing(true)
                        .AllowPaging()
                        .PageSettings(e => e.PageSize(10))

                        .ToolbarSettings(toolbar => { toolbar.ShowToolbar().ToolbarItems(items => { items.AddTool(ToolBarItems.Search); }); })
                        .ClientSideEvents(eve => { eve.RecordDoubleClick("rowSelectedConsultasPrevias"); })
                        .Columns(col =>
                        {
                            col.Field("CMHistSecuencia").HeaderText("Secuencia").IsPrimaryKey(true).Visible(true).Width(5).TextAlign(TextAlign.Right).Add();
                            col.Field("CMHistFechaString").HeaderText("Fecha").Width(10).Add();
                            col.Field("CMHistHoraString").HeaderText("Hora").Width(10).Add();
                        })
                                )
                            }





                        </div>
                        <div class="col-md-4"></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" id="btnSeleccionarConsultasPrevias" class="btn btn-primary">Seleccionar</button>
                </div>
            }
        </div>
    </div>
</div>
<!--EndModal Previous Consultations-->
<!--Modal Receta-->
<div class="modal fade" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog" id="modalReceta">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            @using (Html.BeginForm("Receta", "Consulta", FormMethod.Post, new { @id = "frmReceta", @class = "form-horizontal", @role = "form" }))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title text-primary"></h4>
                </div>
                <div class="modal-body">
                    <div class="container">
                        <div class="col-md-12">

                            @*<iframe id="loadReport" src='@Url.Content(("~/Reports/CrystalViewer/RecetaGinecologica.aspx?id=" + ViewBag.doctReport))' style="width:100%; height:800px; border:none;"></iframe>*@
                            <iframe id="loadReport" src="" style="width:100%; height:800px; border:none;"></iframe>


                        </div>
                        <div class="col-md-4"></div>
                    </div>
                </div>
                @*<div class="modal-footer">
                    <button type="button" id="btnReceta" class="btn btn-primary">Seleccionar</button>
                </div>*@
            }
        </div>
    </div>
</div>
<!--EndModal Receta-->
@section Scripts{


    <script type="text/javascript">


    var formularioGlobal = 'frmConsulta';
    var campoSecuencia = 'CMHistSecuencia';
    var vista = '@ViewBag.VistaCsharp';
    var control = '@ViewBag.ControlCsharp';

    var CMedEmbarazada=false;
    var  CMedEmbarazadaFecha ="";
    var CMedEmbarazadaSemanas ="";
    var  CMedEmbarazadaDias ="";
    var CMedEmbarazadaMeses ="";

    var CMedEmbarazadaFechaProbableParto ="";

    //cuando cargo la vista desde una edicion
    //y se carga un combobox el metodo de asignar el valor del combobox(motivoconsulta,evaluacionfisica....)
    //se ejecuta nuevamente y me vuelve a insertar en el comentario el valor que puso razor de manera automatica
    //en el combobox, por ende se repite. y para que no pase, identifico que si la vista se muestra,
    //desde una edicion la primera asignacion de valor al combobox, no se deba ejecutar el metodo (setNewLineTextonTexboxAre)
    var IsEditing=false;
    //la consulta medica (datos iniciales del paciente),  cuando  son cargados,  el metodo change del los comboboxcheck  que llama el metodo
    //(setNewLineTextonTexboxAre), no puede ser ejecutado, para que no carge los item al textboxarea.
    var IsBuscandoPaciente=false;
    //cuando se  agrega un mantenimiento flash al cargarse nuevamente los items con el nuevo item agregado al  dropdownlist
    // se borran los que estaban previamente  seleccionados
    //por eso cuando este realizando el seleccionado  del los anteriores  items
    // no permitire que se ejecute  el metodo (setNewLineTextonTexboxAre) para que no me agregue  nuevamente los  nombres
    //a los texbox.  utilizo esta variable numerica por que  la cantidad de items que seleccione
    //asi mismo seran las veces que se ejecutar el  metodo onchange del dropdownlist. es decir el se dispara por cada items seleccionado
    var IsAddingFlashMaintenance = 0;
    //esta otra variable trabaja junto con IsAddingFlashMaintenance
    //para ser un secuencial para saber cuando ya se ha seleccionado todos
    //los items previamente.
    var secuenciaIsAddingFlashMaintenance=0;


    $('#DatosAnterior').click(function(){
        setDatosAnterioEmbarazo();
    });


    //show recept
    $('#btnGinecoRecetaImprimirReceta').click(function(){


        if($('#'+campoSecuencia).val()  <= 0)
        {
            alertify.alert('','Favor, guarde primero la consulta');
            return false;
        }

        if ( $('#Consult_ReceSecuencia').val() > 0) {
          

            let ur= '@Url.Action("reportRect","DashBoard")'
            let  datpac=JSON.stringify({ paciSecuencia:''+$("#PaciSecuencia_fk").val(), CMHistSecuencia:''+$("#CMHistSecuencia").val(), ReceSecuencia:''+$("#Consult_ReceSecuencia").val()});
            //call partial view with report
            var data = AjaxSend(false, 'POST', ur, datpac, 'application/json; charset=utf-8','html')
            $( "#reportviewerContent" ).empty();      
            $( "#reportviewerContent" ).append(data);     

            $("#modalRecetaReport").modal();


            @*//show screen block
            $.LoadingOverlay("show");
            var d=$('#DoctSecuencia_fk').val();
            var p=$('#PaciSecuencia_fk').val();
            var c=$('#CMHistSecuencia').val();
            var r=$('#Consult_ReceSecuencia').val();

            var rpt= '@Url.Content("~/Reports/CrystalViewer/RecetaGinecologica.aspx")'
            rpt= rpt+"?d="+d;
            rpt= rpt+"&p="+p;
            rpt= rpt+"&c="+c;
            rpt= rpt+"&r="+r;          
            $("#loadReport").attr("src", rpt);

            //Send doct, pac, rec.
            $("#modalReceta").modal();
            $.LoadingOverlay("hide");*@


        }else{

            alertify.alert('','Favor, seleccione una recta para imprimir');
        }

    });


    function setDatosAnterioEmbarazo(){

        if ($("#PaciSecuencia_fk").val() <= 0) {
            alertify.alert('',"Favor, seleccione un paciente. ")
            return false;
        }


        //if( $('#CMedEmbarazadaFecha').val() != ''){

        $("#CMedEmbarazada").prop('checked',CMedEmbarazada );   //
        $("#CMedEmbarazadaFecha").ejDatePicker({  value: (CMedEmbarazadaFecha) });
        $('#CMedEmbarazadaSemanas').val(CMedEmbarazadaSemanas);
        $('#CMedEmbarazadaDias').val(CMedEmbarazadaDias);
        $('#CMedEmbarazadaMeses').val(CMedEmbarazadaMeses);
        $("#CMedEmbarazadaFechaProbableParto").ejDatePicker({  value: (CMedEmbarazadaFechaProbableParto) });

        //}

    }
    function getDatosAnterioEmbarazo(){
        //if( $('#CMedEmbarazadaFecha').val() != ''){
        CMedEmbarazada = $('#CMedEmbarazada').is(':checked');
        CMedEmbarazadaFecha=   $('#CMedEmbarazadaFecha').val();
        CMedEmbarazadaSemanas= $('#CMedEmbarazadaSemanas').val();
        CMedEmbarazadaDias= $('#CMedEmbarazadaDias').val();
        CMedEmbarazadaMeses= $('#CMedEmbarazadaMeses').val();
        CMedEmbarazadaFechaProbableParto= $('#CMedEmbarazadaFechaProbableParto').val();
        //}

    }


    //beforeOpen event for datepicker
    $("#CMedEmbarazadaFecha").ejDatePicker({
        beforeOpen: function (args) {
            if ($("#PaciSecuencia_fk").val() <= 0) {

                args.cancel=true;
                alertify.alert('',"Favor seleccione paciente");
                $("#CMedEmbarazadaFecha").ejDatePicker({  value: "" });
                //$('#CMedEmbarazadaFecha').val("");
                $('#CMedEmbarazadaSemanas').val("");
                $('#CMedEmbarazadaDias').val("");
                $('#CMedEmbarazadaMeses').val("");
                return false;
            }else{

            }

        }
    });




    //beforeOpen event for datepicker
    $("#CMedEmbarazadaFechaProbableParto").ejDatePicker({
        beforeOpen: function (args) {
            if ($("#PaciSecuencia_fk").val() <= 0) {

                args.cancel=true;
                alertify.alert('',"Favor seleccione paciente");
                $("#CMedEmbarazadaFecha").ejDatePicker({  value: "" });
                //$('#CMedEmbarazadaFecha').val("");
                $('#CMedEmbarazadaSemanas').val("");
                $('#CMedEmbarazadaDias').val("");
                $('#CMedEmbarazadaMeses').val("");
                $("#CMedEmbarazadaFechaProbableParto").ejDatePicker({  value: "" });
                //$('#CMedEmbarazadaFechaProbableParto').val("");
                return false;
            }

            if ($("#CMedEmbarazadaFecha").val() == '') {

                args.cancel=true;
                alertify.alert('',"Favor seleccione fecha de embarazo");
                return false;
            }

        }
    });




    function onChangeProbableParto(args) {


        //si es editando se va a cargar explicitamente
        //los datos de embarazo que tuvo en esa consulta//
        //es decir, cuantas semanas, dias meses de embarazo tenia para esa consulta en
        //especifico

        //si esta editando no hago los calculos
        if ($("#CMHistSecuencia").val().length > 0) {
            return false;
        }

        var dateObj = $("#CMedEmbarazadaFechaProbableParto").data("ejDatePicker").getValue();
        //cuando asigno vacio al campo, para que no se hagan los calculos que se
        //realizan con la fecha tentativa
        if (dateObj =="" || dateObj ==null) {

            return false;
        }


        if ($("#PaciSecuencia_fk").val() <= 0) {
            args.cancel=true;
            //$('#CMedEmbarazadaFecha').val("");
            $("#CMedEmbarazadaFecha").ejDatePicker({  value: "" });
            $('#CMedEmbarazadaSemanas').val("");
            $('#CMedEmbarazadaDias').val("");
            $('#CMedEmbarazadaMeses').val("");
            //$('#CMedEmbarazadaFechaProbableParto').val("");
            $("#CMedEmbarazadaFechaProbableParto").ejDatePicker({  value: "" });
            return false;
        }else{

            var fEmba = $("#CMedEmbarazadaFecha").data("ejDatePicker").getValue();

            //show screen block
            $.LoadingOverlay("show");

            //valid date probabli
            //send object to controller
            //start ajax
            $.ajax({
                type: "POST",
                async: false,
                url: '@Url.Action("validFechaProbableParto", ViewBag.ControlCsharp)',
                data:JSON.stringify( {'fechEmbarazo': fEmba,'fechProbableParto':args.value}),
                //datatype: "application/json; charset=utf-8",
                contentType: "application/json;",
                datatype: 'json',
                cache: false,
                complete: (function () {

                    $.LoadingOverlay("hide");
                }),
                success:(function (data) {

                    if (data.respuesta) {
                        var Menor = data.dictionaryStringObjec["FprobMenorIgual"];
                        var massemanas = data.dictionaryStringObjec["FproTieneMas40Week"];
                        var MenorFechaActual = data.dictionaryStringObjec["FprobMenorFechaActual"];
                        if(Menor){
                            //args.cancel=true;
                            alertify.alert('',"La fecha probable no puede ser menor ni igual a fecha embarazo.");
                            $("#CMedEmbarazadaFechaProbableParto").ejDatePicker({  value: "" });
                            $("#CMedEmbarazadaFechaProbableParto").ejDatePicker("hide");
                            //$('#CMedEmbarazadaFechaProbableParto').val("");


                        }else if(massemanas)
                        {
                            alertify.alert('',"La fecha probable no puede ser mayor a 40 semanas de embarazo.");
                            //no lo uso por que el el eventeo se bloquea
                            //args.cancel=true;
                            //limpio con este por que no se manda el evento on change
                            //NOTA SOLO SE LIMPIA PERO EL VALOR SE QUEDA.
                            //$('#CMedEmbarazadaFechaProbableParto').val("");

                            $("#CMedEmbarazadaFechaProbableParto").ejDatePicker({  value: "" });
                            $("#CMedEmbarazadaFechaProbableParto").ejDatePicker("hide");

                            //var dateObj = $("#CMedEmbarazadaFechaProbableParto").data("ejDatePicker").getValue();


                            //return false;
                            //$("#CMedEmbarazadaFechaProbableParto").ejDatePicker({  value: null });
                            //$("#CMedEmbarazadaFechaProbableParto").ejDatePicker("hide");


                        }   else if(MenorFechaActual)
                        {
                            alertify.alert('',"La fecha probable no puede ser menor a la fecha actual.");
                            //args.cancel=true;
                            $("#CMedEmbarazadaFechaProbableParto").ejDatePicker({  value: "" });
                            $("#CMedEmbarazadaFechaProbableParto").ejDatePicker("hide");
                            //$('#CMedEmbarazadaFechaProbableParto').val("");

                        }


                    }
                    else {


                    }

                    ////cuando devuelva del controlador la respuesta entonces se abilita el boton
                    //   doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

                }),//end susccess
                error:(function () {

                    try {
                        alertify.alert('','Error en controller login y no se ejecuto el result json ' );
                    } catch (e) {
                        alertify.alert('','Problemas en el result json del controller, favor consultar al administrador ');
                    }

                    //cuando devuelva del controlador la respuesta entonces se abilita el boton
                    //  doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

                })    //end error
            })
            //.success(function (data) {

            //    if (data.respuesta) {
            //        var Menor = data.dictionaryStringObjec["FprobMenorIgual"];
            //        var massemanas = data.dictionaryStringObjec["FproTieneMas40Week"];
            //        var MenorFechaActual = data.dictionaryStringObjec["FprobMenorFechaActual"];
            //        if(Menor){
            //            //args.cancel=true;
            //            alertify.alert('',"La fecha probable no puede ser menor ni igual a fecha embarazo.");
            //            $("#CMedEmbarazadaFechaProbableParto").ejDatePicker({  value: "" });
            //            $("#CMedEmbarazadaFechaProbableParto").ejDatePicker("hide");
            //            //$('#CMedEmbarazadaFechaProbableParto').val("");


            //        }else if(massemanas)
            //        {
            //            alertify.alert('',"La fecha probable no puede ser mayor a 40 semanas de embarazo.");
            //            //no lo uso por que el el eventeo se bloquea
            //            //args.cancel=true;
            //            //limpio con este por que no se manda el evento on change
            //            //NOTA SOLO SE LIMPIA PERO EL VALOR SE QUEDA.
            //            //$('#CMedEmbarazadaFechaProbableParto').val("");

            //            $("#CMedEmbarazadaFechaProbableParto").ejDatePicker({  value: "" });
            //            $("#CMedEmbarazadaFechaProbableParto").ejDatePicker("hide");

            //            //var dateObj = $("#CMedEmbarazadaFechaProbableParto").data("ejDatePicker").getValue();


            //            //return false;
            //            //$("#CMedEmbarazadaFechaProbableParto").ejDatePicker({  value: null });
            //            //$("#CMedEmbarazadaFechaProbableParto").ejDatePicker("hide");


            //        }   else if(MenorFechaActual)
            //        {
            //            alertify.alert('',"La fecha probable no puede ser menor a la fecha actual.");
            //            //args.cancel=true;
            //            $("#CMedEmbarazadaFechaProbableParto").ejDatePicker({  value: "" });
            //            $("#CMedEmbarazadaFechaProbableParto").ejDatePicker("hide");
            //            //$('#CMedEmbarazadaFechaProbableParto').val("");

            //        }


            //    }
            //    else {


            //    }

            //    ////cuando devuelva del controlador la respuesta entonces se abilita el boton
            //    //   doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

            //})//end susccess
            //.error(function () {

            //    try {
            //        alertify.alert('','Error en controller login y no se ejecuto el result json ' );
            //    } catch (e) {
            //        alertify.alert('','Problemas en el result json del controller, favor consultar al administrador ');
            //    }

            //    //cuando devuelva del controlador la respuesta entonces se abilita el boton
            //    //  doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

            //});    //end error




        }
    }





    function onChange(args) {

        //si es editando se va a cargar explicitamente
        //los datos de embarazo que tuvo en esa consulta//
        //es decir, cuantas semanas, dias meses de embarazo tenia para esa consulta en
        //especifico

        //si esta editando no hago los calculos
        if ($("#CMHistSecuencia").val().length > 0) {
            return false;
        }

        //$('#CMedEmbarazadaFechaProbableParto').val("");

        if ($("#CMedEmbarazadaFecha").val() == '') {

            $('#CMedEmbarazadaSemanas').val("");
            $('#CMedEmbarazadaDias').val("");
            $('#CMedEmbarazadaMeses').val("");
            $('#CMedEmbarazadaFechaProbableParto').ejDatePicker({  value: "" });

        }


        ////if is not there  a pactient codi
        //if ($("#PaciSecuencia_fk").val() <= 0) {
        //    args.cancel=true;
        //    $("#CMedEmbarazadaFecha").ejDatePicker({  value: "" });
        //    //$('#CMedEmbarazadaFecha').val("");
        //    $('#CMedEmbarazadaSemanas').val("");
        //    $('#CMedEmbarazadaDias').val("");
        //    $('#CMedEmbarazadaMeses').val("");
        //    $("#CMedEmbarazadaFechaProbableParto").ejDatePicker({  value: "" });
        //    //$('#CMedEmbarazadaFechaProbableParto').val("");
        //    return false;
        //}else{

        if(args.value ==''){
            alertify.alert('',"La fecha de embarazo no debe estar vacia.");
            return false;
        }
        //show screen block
        $.LoadingOverlay("show");

        //valid date
        //send object to controller
        //start ajax
        $.ajax({
            type: "POST",
            async: false,
            url: '@Url.Action("validFecha",  ViewBag.ControlCsharp)',
            data:JSON.stringify( {'fechEmbarazo': args.value}),
            //datatype: "application/json; charset=utf-8",
            contentType: "application/json;",
            datatype: 'json',
            cache: false,
            complete: (function () {

                $.LoadingOverlay("hide");
            }),
            success:(function (data) {

                if (data.respuesta) {
                    $("#CMedEmbarazadaFecha").ejDatePicker({  value: "" });
                    //$('#CMedEmbarazadaFecha').val("");
                    $('#CMedEmbarazadaSemanas').val("");
                    $('#CMedEmbarazadaDias').val("");
                    $('#CMedEmbarazadaMeses').val("");
                    alertify.alert('',"La fecha no debe de ser mayor a la fecha actual.");

                }
                    //if not edit
                else {

                    BuscarDatosEmbarazo(args.value);

                    //$("#CMedEmbarazadaFechaProbableParto").ejDatePicker({  enabled: true });
                }

                ////cuando devuelva del controlador la respuesta entonces se abilita el boton
                //   doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

            }),//end susccess
            error:(function () {

                try {
                    alertify.alert('','Error en controller login y no se ejecuto el result json ' );
                } catch (e) {
                    alertify.alert('','Problemas en el result json del controller, favor consultar al administrador ');
                }

                //cuando devuelva del controlador la respuesta entonces se abilita el boton
                //  doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

            })    //end error
        })
        //.success(function (data) {

        //    if (data.respuesta) {
        //        $("#CMedEmbarazadaFecha").ejDatePicker({  value: "" });
        //        //$('#CMedEmbarazadaFecha').val("");
        //        $('#CMedEmbarazadaSemanas').val("");
        //        $('#CMedEmbarazadaDias').val("");
        //        $('#CMedEmbarazadaMeses').val("");
        //        alertify.alert('',"La fecha no debe de ser mayor a la fecha actual.");

        //    }
        //        //if not edit
        //    else {

        //        BuscarDatosEmbarazo(args.value);

        //        //$("#CMedEmbarazadaFechaProbableParto").ejDatePicker({  enabled: true });
        //    }

        //    ////cuando devuelva del controlador la respuesta entonces se abilita el boton
        //    //   doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

        //})//end susccess
        //.error(function () {

        //    try {
        //        alertify.alert('','Error en controller login y no se ejecuto el result json ' );
        //    } catch (e) {
        //        alertify.alert('','Problemas en el result json del controller, favor consultar al administrador ');
        //    }

        //    //cuando devuelva del controlador la respuesta entonces se abilita el boton
        //    //  doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

        //});    //end error


        //}

    }


    function rowSelectedConsultasPrevias(args){
        $('#btnSeleccionarConsultasPrevias').trigger('click');
    }


    $('#btnSeleccionarConsultasPrevias').click(//Mostrar consulta anterior del paciente
    //click edit grid 5 ultimos registros
    function () {
        //excute btnnuevo
        $('#btnNuevo').trigger('click');
        //button proseesand
        var btn = $(this);
        //var todosbtn = $('#btnDelete');
        var todosbtn = $('button');
        //bloquear boton
        doct_DisabledButtonAndEventClick(btn, 'Procesando...', todosbtn);

        //var grid = $("#ConsultasAnteriores").ejGrid("instance");
        //var index = this.element.closest("tr").index();
        //var record = grid.getCurrentViewData()[index];
        var record = $("#ConsultasAnteriores").ejGrid("getSelectedRecords");
        var sendObj = {CMHistSecuencia:record[0].CMHistSecuencia,PaciSecuencia_fk:record[0].PaciSecuencia_fk}
        //alert("Record Details: " + JSON.stringify(record));
        //show screen block
        $.LoadingOverlay("show");
        //send object to controller
        //start ajax
        $.ajax({
            type: "POST",
            url: '@Url.Action("Editar", ViewBag.ControlCsharp)',
            dataType: "json",
            data: JSON.stringify({usar_ConsultarEditando:sendObj}),
            contentType: "application/json; charset=utf-8",
            cache: false,
            complete: (function () {

                $.LoadingOverlay("hide");
            }),
            success:(function (data) {

                if (data.respuesta) {

                    var di = data.redirect;
                    window.location.href = di;
                }
                else {

                    alert(data.error);
                }

                ////cuando devuelva del controlador la respuesta entonces se abilita el boton
                doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

            }),//end susccess
            error:(function () {

                try {
                    alertify.alert('', 'Error en controller login y no se ejecuto el result json ' + throwError);
                } catch (e) {
                    alertify.alert('', 'Problemas en el result json del controller, favor consultar al administrador ');
                }

                //cuando devuelva del controlador la respuesta entonces se abilita el boton
                doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

            })   //end error
        })
        //.success(function (data) {

        //    if (data.respuesta) {

        //        var di = data.redirect;
        //        window.location.href = di;
        //    }
        //    else {

        //        alert(data.error);
        //    }

        //    ////cuando devuelva del controlador la respuesta entonces se abilita el boton
        //    doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

        //})//end susccess
        //.error(function () {

        //    try {
        //        alertify.alert('', 'Error en controller login y no se ejecuto el result json ' + throwError);
        //    } catch (e) {
        //        alertify.alert('', 'Problemas en el result json del controller, favor consultar al administrador ');
        //    }

        //    //cuando devuelva del controlador la respuesta entonces se abilita el boton
        //    doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

        //});    //end error

    }//end Mostrar Consulta anterior del paciente
    );

    //select row grid paciente
    function rowSelectedPaciente(args){
        console.log("entro ");


        //ejecute  button  select record
        $('#btnSeleccionarPaciente').trigger('click');

        //var rowsele = $("#Pacientes").ejGrid("instance");
        //var a=  rowsele.getSelectedRecords();
        //if(a.length > 0){
        //    //  alertify.alert('',a.PersNombre);
        //    $("#PaciNombre").html(a[0].PaciNombre);
        //    $("#PaciApellido1").html((a[0].PaciApellido1+' '+a[0].PaciApellido2));
        //    $("#PaciEdad").html(a[0].PaciEdad);
        //    $("#PacifechaNacimientoString").html(a[0].PacifechaNacimientoString);
        //    $("#PaciDocumento").html(a[0].PaciDocumento);
        //    $("#PaciSecuencia_fk").val(a[0].PaciSecuencia);

        //    var rootpah =a[0].PaciFotoPath;
        //    if(rootpah === 'Null'|| typeof rootpah === "undefined" || rootpah === null){



        //        $("#PaciPicture").attr("src", "/Content/AdminFiles/images/_user-alt.png?" + new Date().getTime());

        //    }
        //    else{

        //        $("#PaciPicture").attr("src", rootpah+"?" + new Date().getTime());

        //    }
        //    UltimaConsulta(a[0].PaciSecuencia);
        //    $("#modalPacientes").modal('toggle');
        //}
        //else{
        //    alertify.alert('',"Favor seleccione paciente");
        //}
    }

    //~/Content/ImagenesUploads/Paciente1.png
    //select row paciente
    $("#btnSeleccionarPaciente").click(function(){

        var rowsele = $("#Pacientes").ejGrid("instance");
        var a=  rowsele.getSelectedRecords();
        if(a.length > 0){
            //  alertify.alert('',a.PersNombre);
            $("#PaciNombre").html(a[0].PaciNombre);
            $("#PaciApellido1").html((a[0].PaciApellido1+' '+a[0].PaciApellido2));
            $("#PaciEdad").html(a[0].PaciEdad);
            $("#PacifechaNacimientoString").html(a[0].PacifechaNacimientoString);
            $("#PaciDocumento").html(a[0].PaciDocumento);
            $("#PaciSecuencia_fk").val(a[0].PaciSecuencia);
            if(a[0].GSangSecuencia_fk != 0)
                $('#GSangSecuencia_fk').val(a[0].GSangSecuencia_fk);
            UltimaConsulta(a[0].PaciSecuencia);
            //search pesonal history
            PersonalHistory(a[0].PaciSecuencia);


            var rootpah =a[0].PaciFotoPath;

            if( rootpah === 'Null'|| typeof rootpah === "undefined" || rootpah === null){


                $("#PaciPicture").attr("src", "/Content/AdminFiles/images/_user-alt.png?" + new Date().getTime());

            }
            else{

                $("#PaciPicture").attr("src", rootpah+"?" + new Date().getTime());

            }




            //llenar datosAnterioresEmbarazo
            getDatosAnterioEmbarazo();


            //la consulta medica (datos iniciales del paciente),  cuando  son cargados,  el metodo change
            //del los comboboxcheck  que llama el metodo
            //(setNewLineTextonTexboxAre), no puede ser ejecutado, para que no carge los item al textboxarea.
            IsBuscandoPaciente=false;


            $("#modalPacientes").modal('toggle');
        }
        else{
            alertify.alert('',"Favor seleccione paciente");
        }
    })

    //search patient's background
    @*function getPatientBackground(id){

            //start ajax
            $.ajax({
                type: "POST",
                url: '@Url.Action("PatientBackground", ViewBag.ControlCsharp)',
                data: {idPatient:id},
                dataType: 'json',//file test
                datatype: "application/json; charset=utf-8",
                cache: false
            })
            .success(function (data) {

                if (data.respuesta) {
                    //fill patient'background
                    var consulmedi = data.dictionaryStringObjec["consulMedica"];
                    var consulmediListEnfe= data.dictionaryStringListObjec["ListaEnferPersonales"];
                    var consulmediEnfeFamili= data.dictionaryStringObjec["EnfermedadFamiliar"];

                }
                else {

                    alertify.alert('', data.error, function () { alertify.success('Ok'); });
                }

                ////cuando devuelva del controlador la respuesta entonces se abilita el boton
                doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);


            })//end susccess
            .error(function () {

                try {
                    alertify.alert('', 'Error en controller login y no se ejecuto el result json ' + throwError);
                } catch (e) {
                    alertify.alert('', 'Problemas en el result json del controller, favor consultar al administrador ');
                }

                //cuando devuelva del controlador la respuesta entonces se abilita el boton
                doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);
                //quito splash
                //$.LoadingOverlay("hide");
            });    //end error

        }*@


    /*Clean field*/

    function clearValidation(formElement) {
        //Internal $.validator is exposed through $(form).validate()
        var validator = $(formElement).validate();
        //Iterate through named elements inside of the form, and mark them as error free
        //$('[name]', formElement).each(function () {
        //    validator.successList.push(this);//mark as error free
        //    validator.showErrors();//remove error messages if present
        //});
        //validator.resetForm();//remove error class on name elements and clear history
        //validator.reset();//remove all error and success data
    }

    function resetAllControls(f) {
        f.find('input:text, input:password,input:hidden, input:file, select, textarea').val('');
        f.find('input:radio, input:checkbox').prop('checked', false).prop('selected', false);


    };
    /* end Clean field*/

    /*COMENTE TENGO QUE DESCOMENTARLO*/
    /*dataanotation Valid date*/
    $.validator.addMethod('date',
   function (value, element, params) {
       if (this.optional(element)) {
           return true;
       }

       //if (this.optional(element) || moment(value, "dd/MM/YYYY", true).isValid()) {
       //    return true;
       //}
       var ok = true;
       try {


           $.datepicker.parseDate('dd/mm/yy', value);

       }
       catch (err) {
           ok = false;
       }
       return ok;
   });


    /*end dataanotation Valid date*/
    /*Valid lang*/
    $(function () {

        $("#CMedEmbarazadaFecha").ejDatePicker({
            //value: new Date(),
            locale: "es-ES",            //Esto es simplemente para que este en lenguaje espan
            //locale: "en-US",
            //locale: "es-DO",
            watermarkText: "Fecha",
            buttonText: 'Hoy'
        });

        $("#CMedEmbarazadaFechaPromedioParto").ejDatePicker({
            //value: new Date(),
            locale: "es-ES",            //sets custom “fr-FR” locale
            //locale: "es-DO",
            watermarkText: "Fecha",
            buttonText: 'Hoy'
        });
        $("#CMediFechaUltimoParto").ejDatePicker({
            //value: new Date(),
            locale: "es-ES",            //sets custom “fr-FR” locale
            //locale: "es-DO",
            watermarkText: "Fecha",
            buttonText: 'Hoy'
        });
        $("#CMediFechaUltimoAborto").ejDatePicker({
            //value: new Date(),
            locale: "es-ES",            //sets custom “fr-FR” locale
            //locale: "es-DO",
            watermarkText: "Fecha",
            buttonText: 'Hoy'
        });
        $("#CMediFechaUltimaMenstruacion").ejDatePicker({
            //value: new Date(),
            locale: "es-ES",            //sets custom “fr-FR” locale
            //locale: "es-DO",
            watermarkText: "Fecha",
            buttonText: 'Hoy'
        });
        $("#CMediFechaUltimoPapanicolau").ejDatePicker({
            //value: new Date(),
            locale: "es-ES",            //sets custom “fr-FR” locale
            //locale: "es-DO",
            watermarkText: "Fecha",
            buttonText: 'Hoy'
        });

        $("#CMHistFechaUltimaRegla").ejDatePicker({
            //value: new Date(),
            locale: "es-ES",
            //locale: "es-DO",            //sets custom “fr-FR” locale
            watermarkText: "Fecha",
            buttonText: 'Hoy'
        });

        $("#CMedEmbarazadaFechaProbableParto").ejDatePicker({
            //value: new Date(),
            locale: "es-ES",
            //locale: "es-DO",            //sets custom “fr-FR” locale
            watermarkText: "Fecha",
            buttonText: 'Hoy'
        });

    })

    /*end Valid lang*/


    var secItems=0;
    var listText = [];

    function setNewLineTextonTexboxAre(textAreaToWRITE, textSelectedSender) {

        //si tiene items por seleccionar  no le permito que prosiga
        if(IsAddingFlashMaintenance > 0  ){
            if(secuenciaIsAddingFlashMaintenance != IsAddingFlashMaintenance ){

                //esto es para saber cuando ya se ha eleccionado todos los items
                secuenciaIsAddingFlashMaintenance=   secuenciaIsAddingFlashMaintenance+1;

                if(secuenciaIsAddingFlashMaintenance == IsAddingFlashMaintenance ) {
                    // para que vuelva a funcionar este metodo normalmente  pongo la variable (IsAddingFlashMaintenance) en cero
                    IsAddingFlashMaintenance=0;
                    secuenciaIsAddingFlashMaintenance=0;
                }

                return false;
            }

        }


        //if isn't find the text checked on downlistcheck
        // if ($.inArray(textSelectedSender, listText) === -1) {
        listText.push(textSelectedSender);
        //secuencia de items
        secItems=secItems+1;

        if ($.trim($("#" + textAreaToWRITE).val()).length < 1) {
            //$("#" + textAreaToWRITE).val((secItems+"."+textSelectedSender + ':'));
            $("#" + textAreaToWRITE).val((textSelectedSender + ':'));
        }
        else {
            //get the first time without breakline
            var contentTexar = $("#" + textAreaToWRITE).val();
            //new line with new item
            //$("#" + textAreaToWRITE).val((contentTexar + '\r\n\n' +secItems+"."+textSelectedSender + ':'));
            $("#" + textAreaToWRITE).val((contentTexar + '\r\n\n' +textSelectedSender + ':'));
        }



    }


    var listTextEnfe = [];
    //add enfermedad with  family
    function setNewLineTextonTexboxAreFamily(textFamili,textAreaToWRITE, textSelectedSender) {

        //si tiene items por seleccionar  no le permito que prosiga
        if(IsAddingFlashMaintenance > 0  ){
            if(secuenciaIsAddingFlashMaintenance != IsAddingFlashMaintenance ){

                //esto es para saber cuando ya se ha eleccionado todos los items
                secuenciaIsAddingFlashMaintenance=   secuenciaIsAddingFlashMaintenance+1;

                if(secuenciaIsAddingFlashMaintenance == IsAddingFlashMaintenance ) {
                    // para que vuelva a funcionar este metodo normalmente  pongo la variable (IsAddingFlashMaintenance) en cero
                    IsAddingFlashMaintenance=0;
                    secuenciaIsAddingFlashMaintenance=0;
                }

                return false;
            }

        }


        //if isn't find the text checked on downlistcheck
        // if ($.inArray(textSelectedSender, listTextEnfe) === -1) {
        listTextEnfe.push(textFamili+textSelectedSender);

        //secuencia de items
        secItems=secItems+1;

        if ($.trim($("#" + textAreaToWRITE).val()).length < 1) {

            //$("#" + textAreaToWRITE).val((secItems+"."+textFamili+' '+textSelectedSender + ':'));
            $("#" + textAreaToWRITE).val((textFamili+' '+textSelectedSender + ':'));
        }
        else {
            //get the first time without breakline
            var contentTexar = $("#" + textAreaToWRITE).val();
            //new line with new item
            //$("#" + textAreaToWRITE).val((contentTexar + '\r\n\n' +secItems+"."+ textFamili+' '+textSelectedSender + ':'));
            $("#" + textAreaToWRITE).val((contentTexar + '\r\n\n' + textFamili+' '+textSelectedSender + ':'));
        }


    }



    $('#Familiar').click(function () {
        $('#EnfeSecuenciaFamiliar').ejDropDownList("clearText");
    });

    //$('#usar_ConsultaMedicaEnfermedaFamiliar_Familiar').change(function (args) {
    //    $('#usar_ConsultaMedicaEnfermedadEnfeSecuencia').ejDropDownList("clearText");
    //});







    function drppopupshow(sender) {


    }
    function drpvaluechangeEnfermedad(sender) {
        if(sender.isChecked==true){
            if(IsEditing==true  )
                return false;



            setNewLineTextonTexboxAreFamily($('#Familiar').val(),'EnfeComentarioFamiliar', sender.selectedText);


        }


    }
    function drpvaluechangeEnfermedadPersonal(sender) {

        if(sender.isChecked==true){

            //cuando se muestra la vista si esta en edit no se ejecuta el setnewline...

            if(IsEditing==true  )
                return false;
            //o si esta buscando paciente tampoco se corre el metodo
            if(IsBuscandoPaciente==true  )
                return false;

            setNewLineTextonTexboxAre('EnfeComentarioPersonal', sender.selectedText);


        }


    }
    function drpvaluechangeMotivo(sender) {

        if(sender.isChecked==true){
            if(IsEditing==true  )
                return false;

            setNewLineTextonTexboxAre('MotiComentario', sender.selectedText);

        }


    }
    function drpvaluechangeEvalu(sender) {
        //  jQuery.addEventLog("<span class='eventTitle'>Value has changed</span> to " + sender.value + ".<br/>");
        if(sender.isChecked==true){
            if(IsEditing==true  )
                return false;

            setNewLineTextonTexboxAre('EFisiComentario', sender.selectedText);

        }
    }
    function drpvaluechangeDiag(sender) {
        // jQuery.addEventLog("<span class='eventTitle'>Value has changed</span> to " + sender.value + ".<br/>");
        if(sender.isChecked==true){
            if(IsEditing==true  )
                return false;

            setNewLineTextonTexboxAre('DiagComentario', sender.selectedText);

        }
    }
    function drpvaluechangeTrata(sender) {
        // jQuery.addEventLog("<span class='eventTitle'>Value has changed</span> to " + sender.value + ".<br/>");
        if(sender.isChecked==true){
            if(IsEditing==true  )
                return false;

            setNewLineTextonTexboxAre('TratComentario', sender.selectedText);

        }
    }


    /*Receta*/
    var listTextMedi = [];
    function setNewLineTextonTexboxAreMedi(textAreaToWRITE, textSelectedSender) {

        //si tiene items por seleccionar  no le permito que prosiga
        if(IsAddingFlashMaintenance > 0  ){
            if(secuenciaIsAddingFlashMaintenance != IsAddingFlashMaintenance ){

                //esto es para saber cuando ya se ha eleccionado todos los items
                secuenciaIsAddingFlashMaintenance=   secuenciaIsAddingFlashMaintenance+1;

                if(secuenciaIsAddingFlashMaintenance == IsAddingFlashMaintenance ) {
                    // para que vuelva a funcionar este metodo normalmente  pongo la variable (IsAddingFlashMaintenance) en cero
                    IsAddingFlashMaintenance=0;
                    secuenciaIsAddingFlashMaintenance=0;
                }

                return false;
            }

        }




        //if isn't find the text checked on downlistcheck
        // if ($.inArray(textSelectedSender, listTextMedi) === -1) {
        listTextMedi.push(textSelectedSender);

        //secuencia de items
        secItems=secItems+1;

        //var textcom = (secItems+"."+textSelectedSender + ':\n   Dosificación:\n   Duración:');
        //        var textcom = (textSelectedSender + ':\n   Dosificación:\n   Duración:');
        var textcom = ('Medicamento: '+textSelectedSender + '\nDosificación:\nDuración:');

        if ($.trim($("#" + textAreaToWRITE).val()).length < 1) {

            $("#" + textAreaToWRITE).val(textcom);
        }
        else {
            //get the first time without breakline
            var contentTexar = $("#" + textAreaToWRITE).val();
            //new line with new item
            $("#" + textAreaToWRITE).val((contentTexar + '\r\n\n' +textcom ));
        }



    }

    function drpvaluechangeImagen(sender) {

        if(sender.isChecked==true){
            if(IsEditing==true  )
                return false;

            setNewLineTextonTexboxAre('Consult_ReceComentario', sender.selectedText);

        }


    }
    function drpvaluechangeAnalisis(sender) {

        if(sender.isChecked==true){
            if(IsEditing==true  )
                return false;

            setNewLineTextonTexboxAre('Consult_ReceComentario', sender.selectedText);

        }


    } function drpvaluechangeMedicamento(sender) {


        if(sender.isChecked==true){
            if(IsEditing==true  )
                return false;

            setNewLineTextonTexboxAreMedi('Consult_ReceComentario', sender.selectedText);

        }


    }

    /*Receta*/

    //click edit grid
    function onClickReceta(args) {
        //because if anyone select an item before press button edit,
        //when i press edit in the grid, the item is add

        //show screen block
        $.LoadingOverlay("show");

        //excute btnnuevo
        $('#btnGinecoRecetaNuevo').trigger('click');

        //button proseesand
        var btn = $(this);
        //var todosbtn = $('#btnDelete');
        var todosbtn = $('button');
        //bloquear boton
        doct_DisabledButtonAndEventClick(btn, 'Procesando...', todosbtn);

        var grid = $("#Recetas").ejGrid("instance");
        var index = this.element.closest("tr").index();
        var record = grid.getCurrentViewData()[index];


        //llenar checkbox medicamento


        ////llenar campos de receta
        //LLenando medicamentos .



        var modelMedi =[];

        $.each(record.MediSecuencia_fk,function(index,value){
            console.log(index+":"+value);
            //convert to numeri
            //if(jQuery.isEmptyObject(value) === false){
            if(value != ''){
                modelMedi.push(parseInt(value));
            }

        });



        //is not is empty
        if (jQuery.isEmptyObject(modelMedi) === false )
        {
            var DropDownListObj =  $('#Consult_MediSecuencia_fk').ejDropDownList({showCheckbox : true }).data("ejDropDownList");

            DropDownListObj.selectItemByValue(modelMedi.toString());
        }

        var modelAnali =[];
        //LLenando Analis .

        $.each(record.AClinSecuencia_fk,function(index,value){
            console.log(index+":"+value);
            //convert to numeri
            //if(jQuery.isEmptyObject(value) === false){
            if(value != ''){
                modelAnali.push(parseInt(value));
            }

        });


        //is not is empty
        if (jQuery.isEmptyObject(modelAnali) === false )
        {
            var DropDownListObj =  $('#Consult_AClinSecuencia_fk').ejDropDownList({showCheckbox : true }).data("ejDropDownList");
            DropDownListObj.selectItemByValue(modelAnali.toString());

        }
        //LLenando Imag .


        var modelImag =[];

        $.each(record.ImagSecuencia_fk,function(index,value){
            console.log(index+":"+value);
            //convert to numeri
            //if(jQuery.isEmptyObject(value) === false){
            if(value != ''){
                modelImag.push(parseInt(value));
            }

        });
        //is not is empty
        if (jQuery.isEmptyObject(modelImag) === false )
        {
            var DropDownListObj =  $('#Consult_ImagSecuencia_fk').ejDropDownList({showCheckbox : true }).data("ejDropDownList");
            DropDownListObj.selectItemByValue(modelImag.toString());

        }

        $('#Consult_ReceComentario').val(record.ReceComentario);

        $('#Consult_ReceSecuencia').val(record.ReceSecuencia);
        $('#Consult_RecCodigo').val(record.RecCodigo);


        ////cuando devuelva del controlador la respuesta entonces se abilita el boton
        doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);
        $.LoadingOverlay("hide");


    }//end edit grid onClick




    /*Receta operation*/


    $('#btnGinecoRecetaNuevo').click(function () {

        if ($("#PaciSecuencia_fk").val() <= 0) {
            alertify.alert('',"Favor, seleccione un paciente. ")
            args.cancel = true;
            return false;
        }

        $('#Consult_MediSecuencia_fk').ejDropDownList("clearText");
        $('#Consult_MediSecuencia_fk').ejDropDownList("uncheckAll");

        $('#Consult_AClinSecuencia_fk').ejDropDownList("clearText");
        $('#Consult_AClinSecuencia_fk').ejDropDownList("uncheckAll");

        $('#Consult_ImagSecuencia_fk').ejDropDownList("clearText");
        $('#Consult_ImagSecuencia_fk').ejDropDownList("uncheckAll");

        //$('#GSangSecuencia_fk').val("");

        $('#Consult_ReceComentario').val('');
        $('#Consult_ReceSecuencia').val('')
        $('#Consult_RecCodigo').val('')

    });



    var receta = [];
    $('#btnGinecoRecetaAgregar').click(function () {

        if ($("#PaciSecuencia_fk").val() <= 0) {
            alertify.alert('',"Favor, seleccione un paciente. ")

            return false;
        }
        //var a=$('#ReceComentario').val('');
        //var pp=jQuery.isEmptyObject($('#ReceComentario').val());
        if($.trim($('#Consult_ReceComentario').val()) == ''){
            alertify.alert('',"Debe de escribir receta");
            return false;
        }


        var DropDownListObjMedi = [];
        var DropDownListObjAnali = [];
        var DropDownListObjImagen = [];
        var receComent = '';

        //get value medic
        DropDownListObjMedi = $("#Consult_MediSecuencia_fk").data("ejDropDownList").getSelectedValue().split(",");


        ////converting to array int
        //var nuewMedi=[];
        //$.each(DropDownListObjMedi,function(key, value){
        //    nuewMedi.push(parseInt(value));
        //});

        ////for(var a in DropDownListObjMedi){
        ////    nuewMedi.push(int.parseInt(a));
        ////};
        //DropDownListObjMedi= nuewMedi;


        //get value Anal
        DropDownListObjAnali = $("#Consult_AClinSecuencia_fk").data("ejDropDownList").getSelectedValue().split(",");
        ////converting to array int
        //var nuewAnali=[];
        //$.each(DropDownListObjAnali,function(key, value){
        //    nuewAnali.push(parseInt(value));

        //});

        ////for(var a in DropDownListObjAnali){
        ////    nuewAnali.push(int.parseInt(a));
        ////};
        //DropDownListObjMedi= nuewAnali;


        //get value imag
        DropDownListObjImagen = $("#Consult_ImagSecuencia_fk").data("ejDropDownList").getSelectedValue().split(",");
        ////converting to array int
        //var nuewImag=[];
        //$.each(DropDownListObjImagen,function(key, value){
        //    nuewImag.push(parseInt(value));

        //});
        ////for(var a in DropDownListObjImagen){
        ////      nuewImag.push(int.parseInt(a));
        ////  };
        //  DropDownListObjImagen= nuewImag;

        receComent = $('#Consult_ReceComentario').val();







        if((DropDownListObjMedi.length ==1 && DropDownListObjMedi[0]=="") &&
            (DropDownListObjAnali.length ==1 && DropDownListObjAnali[0]=="")&&
            (DropDownListObjImagen.length ==1 && DropDownListObjImagen[0]==""))
        {
            alertify.alert('',"Debe de seleccionar Medicamento, imagen o analisis.");
            return false;

        }

        if(receComent.length <=0 )
        {
            alertify.alert('',"Debe de escribir receta");
            return false;

        }






        //     var objListMedic = convertArrayToJson(DropDownListObjMedi);
        //var fech = @*@Html.Raw(Json.Encode(@Lib.GetLocalDateTime().ToString()));*@
        var fech =  new Date();
      //  var NombreCompl  = @*@Html.Raw(Json.Encode((@Model.PaciNombre + ' ' + @Model.PaciApellido1 + ' ' + @Model.PaciApellido2)));*@

        var NombreReceta  = "";
        var imag ="";
        imag=$("#Consult_ImagSecuencia_fk").data("ejDropDownList").getSelectedValue();
        var analiclini ="";
        analiclini=$("#Consult_AClinSecuencia_fk").data("ejDropDownList").getSelectedValue();
        var medi ="";
        medi=$("#Consult_MediSecuencia_fk").data("ejDropDownList").getSelectedValue();
        //si hay mas de dos seleccionados entonces pongo nombre de receta mezcladas
        var cantSelec=0;
        if(imag != ""){
            cantSelec=cantSelec+1
            NombreReceta="Receta Imagenes";
        }
        if(analiclini != ""){
            cantSelec=cantSelec+1
            NombreReceta="Receta Analisis Clínico";
        }

        if(medi != ""){
            cantSelec=cantSelec+1
            NombreReceta="Receta Medicamentos";
        }
        //si es mayor de 1 entonces quiere decir que hay una mezcla de 
        //indicaciones es decir medicamentos analicis clin, ect. en una misma receta
        if(cantSelec > 1){
            NombreReceta="Receta Mezclada";
        }

        //if is edit
        //if is not empty and from 1 to up
        if( (jQuery.isEmptyObject($('#Consult_ReceSecuencia').val()) === false)&&  $('#Consult_ReceSecuencia').val() > 0){


            var objtoUpdate = $.grep(receta, function (e) { return e.ReceSecuencia == $('#Consult_ReceSecuencia').val(); });
            if(objtoUpdate && objtoUpdate.length == 1){

                //objtoUpdate[0].MediSecuencia_fk = convArrToObj(DropDownListObjMedi);
                //objtoUpdate[0].AClinSecuencia_fk = convArrToObj(DropDownListObjAnali);
                //objtoUpdate[0].ImagSecuencia_fk = convArrToObj(DropDownListObjImagen);

                //objtoUpdate[0].MediSecuencia_fk = (jQuery.isEmptyObject(DropDownListObjMedi) === false? convArrToObj(DropDownListObjMedi) :[]);
                //objtoUpdate[0].AClinSecuencia_fk = (jQuery.isEmptyObject(DropDownListObjAnali) === false? convArrToObj(DropDownListObjAnali) :[]);
                //objtoUpdate[0].ImagSecuencia_fk =(jQuery.isEmptyObject(DropDownListObjImagen) === false? convArrToObj(DropDownListObjImagen) :[]);
                //No le seguire enviando un array [] vacio por que el dataanotation  no me lo permite lo que hare no enviarlo

                objtoUpdate[0].MediSecuencia_fk = ((DropDownListObjMedi.length  == 1 && DropDownListObjMedi[0] =="") ? [] : DropDownListObjMedi);
                objtoUpdate[0].AClinSecuencia_fk = ((DropDownListObjAnali.length  == 1 && DropDownListObjAnali[0] =="") ? [] : DropDownListObjAnali);//undefined
                objtoUpdate[0].ImagSecuencia_fk =((DropDownListObjImagen.length  == 1 && DropDownListObjImagen[0] =="") ? [] : DropDownListObjImagen);
                objtoUpdate[0].ReceComentario = receComent;
                objtoUpdate[0].RecNombre=NombreReceta;
            }


            //reload grid
            //var gridObj = $("#Recetas").ejGrid("instance");
            //gridObj.dataSource(receta);

        }
            //Inserting
        else{

            //var rec = {

            //    "PaciSecuencia": $('PaciSecuencia_fk').val(),
            //    "CMHistSecuencia_fk": $('CMHistSecuencia').val(),
            //    "NombreCompleto":"Receta" ,
            //    "ReceFechaString": fech,
            //    "ReceSecuencia": receta.length + 1,
            //    "MediSecuencia_fk": (jQuery.isEmptyObject(DropDownListObjMedi) === false? convArrToObj(DropDownListObjMedi) :[]),
            //    "AClinSecuencia_fk": (jQuery.isEmptyObject(DropDownListObjAnali) === false? convArrToObj(DropDownListObjAnali) :[]),
            //    "ImagSecuencia_fk": (jQuery.isEmptyObject(DropDownListObjImagen) === false? convArrToObj(DropDownListObjImagen) :[]),
            //    "ReceComentario": receComent

            //};
            //encontrar el maximmo valor dentro del arry receta
            var maxCount= 0;
            if(receta.length > 0){
                var count = $.map(receta, function(receta){ return receta.ReceSecuencia; }),
      maxCount = Math.max.apply(this,count),
      minCount = Math.min.apply(this,count);
            }


            var rec = {

                PaciSecuencia: $('PaciSecuencia_fk').val(),
                CMHistSecuencia_fk: $('CMHistSecuencia').val(),
                RecNombre:NombreReceta ,
                ReceFechaString: fech,
                ReceSecuencia: maxCount+ 1,

                // MediSecuencia_fk: ['1','2','3'],
                //AClinSecuencia_fk: (jQuery.isEmptyObject(DropDownListObjAnali) === false? convArrToObj(DropDownListObjAnali) :[]),
                //No le seguire enviando un array [] vacio por que el dataanotation  no me lo permite lo que hare no enviarlo
                MediSecuencia_fk: ((DropDownListObjMedi.length  == 1 && DropDownListObjMedi[0] =="") ? [] : DropDownListObjMedi),
                AClinSecuencia_fk: ((DropDownListObjAnali.length  == 1 && DropDownListObjAnali[0] =="") ? [] : DropDownListObjAnali),
                ImagSecuencia_fk: ((DropDownListObjImagen.length  == 1 && DropDownListObjImagen[0] =="") ? [] : DropDownListObjImagen),
                ReceComentario: receComent

            };
            receta.push(rec);
            ////RECARGAR GRID
            //var gridObj = $("#Recetas").ejGrid("instance");
            //gridObj.dataSource(receta);//dataSource method
        }


        //ordernar lista recestas descendentesmente

        var a=  $(receta).sort("ReceSecuencia", "desc");
        var nuevaListRerectaordenada=[];
        $.each( a, function(eventID,eventData) {
            //var p= eventID;
            //var t = eventData;
            nuevaListRerectaordenada.push(eventData);
         //   console.log('<p>'+eventData+'</p>');
        });


        var gridObj = $("#Recetas").ejGrid("instance");
        gridObj.dataSource(nuevaListRerectaordenada);//dataSource method


        ////excute btnnuevo
        $('#btnGinecoRecetaNuevo').trigger('click');



        //console.log(JSON.stringify(receta, null, ' '));


    }); //end save receta



    $('#btnGinecoRecetaBorrar').click(function () {
        if ($("#PaciSecuencia_fk").val() <= 0) {
            alertify.alert('',"Favor, seleccione un paciente. ")
            args.cancel = true;
            return false;
        }

        //if is not empty and from 1 to up
        if( (jQuery.isEmptyObject($('#Consult_ReceSecuencia').val()) === false)&&  $('#Consult_ReceSecuencia').val() > 0){
            //var listToDelete = [1];
            var listToDelete = [parseInt($('#Consult_ReceSecuencia').val())];
            //excute btnnuevo
            $('#btnGinecoRecetaNuevo').trigger('click');

            receta.reduceRight(function (acc, obj, idx) {
                if (listToDelete.indexOf(obj.ReceSecuencia) > -1)
                    receta.splice(idx, 1);
            }, 0);

            //reload grid
            var gridObj = $("#Recetas").ejGrid("instance");
            gridObj.dataSource(receta);

        }else{
            alertify.alert('',"Favor seleccionar receta a borrar");

        }

    });

    // Convert array to object
    function convArrToObj(array){
        var thisEleObj = new Object();
        if(typeof array == "object"){
            for(var i in array){
                var thisEle = convArrToObj(array[i]);
                thisEleObj[i] = thisEle;
            }
        }else {
            thisEleObj = array;
        }
        return thisEleObj;
    };
    var oldJSONStringify = JSON.stringify;
    JSON.stringify = function(input){
        if(oldJSONStringify(input) == '[]')
            return oldJSONStringify(convArrToObj(input));
        else
            return oldJSONStringify(input);
    };
    /*End Receta operation*/

    $("#btnConsultasAnteriores").click(function () {

        //when is ready open modal
        if ($("#PaciSecuencia_fk").val() > 0) {
            //when is ready open modal
            if ($("#CMHistSecuencia").val() > 0) {
                alertify.alert('',"Favor, primero limpie o guarde la consulta actual. ")
            }else{

                //show screen block
                $.LoadingOverlay("show");

                $.ajax({
                    type: "POST",
                    async: false,
                    url: '@Url.Action("buscarConsultasAnteriores", ViewBag.ControlCsharp)',
                    //data:JSON.stringify( {'fechEmbarazo': args.value}),
                    data:JSON.stringify({'paciente': $("#PaciSecuencia_fk").val()} ),
                    contentType: "application/json;",
                    datatype: 'json',
                    cache: false,
                    complete: (function () {

                        $.LoadingOverlay("hide");
                    }),
                    success:(function (data) {



                        if (data.respuesta) {

                            var gridObj = $("#ConsultasAnteriores").ejGrid("instance");
                            gridObj.dataSource(data.someCollection);//dataSource method


                            $("#modalConsultasAnteriores").modal();
                        }
                        else {

                            alertify.alert('',data.menssage );
                        }

                        ////cuando devuelva del controlador la respuesta entonces se abilita el boton
                        //   doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

                    }),//end susccess
                    error:(function (response) {
                        //var r = jQuery.parseJSON(response.responseText);
                        //alert("Message: " + r.Message);
                        //alert("StackTrace: " + r.StackTrace);
                        //alert("ExceptionType: " + r.ExceptionType);

                        //function () {

                        try {
                            alertify.alert('','Error en controller result json ' );
                        } catch (e) {
                            alertify.alert('','Problemas en el result json del controller, favor consultar al administrador ');
                        }
                    })    //end error
                })
                //.success(function (data) {



                //    if (data.respuesta) {

                //        var gridObj = $("#ConsultasAnteriores").ejGrid("instance");
                //        gridObj.dataSource(data.someCollection);//dataSource method


                //        $("#modalConsultasAnteriores").modal();
                //    }
                //    else {

                //        alertify.alert('',data.menssage );
                //    }

                //    ////cuando devuelva del controlador la respuesta entonces se abilita el boton
                //    //   doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

                //})//end susccess
                //.error(function (response) {
                //     //var r = jQuery.parseJSON(response.responseText);
                //     //alert("Message: " + r.Message);
                //     //alert("StackTrace: " + r.StackTrace);
                //     //alert("ExceptionType: " + r.ExceptionType);

                //     //function () {

                //     try {
                //         alertify.alert('','Error en controller result json ' );
                //     } catch (e) {
                //         alertify.alert('','Problemas en el result json del controller, favor consultar al administrador ');
                //     }
                // });    //end error


            }


        }
        //else{
        //    alertify.alert('',"Favor seleccionar primero el paciente. ")
        //}

    });





    $("#btnBuscarPaciente").click(function () {
        //when is ready open modal
        //if ($("#CMHistSecuencia").val() > 0) {
        //    alertify.alert('',"Favor, primero limpie o guarde la consulta actual. ")
        //}
        //if it's editing or searching patient  the varable pacisec.. will be filled
        if ($("#PaciSecuencia_fk").val()> 0) {
            alertify.alert('',"Favor, primero limpie o guarde la consulta actual. ")
        }
        else{

            //la consulta medica (datos iniciales del paciente),  cuando  son cargados,  el metodo change
            //del los comboboxcheck  que llama el metodo
            //(setNewLineTextonTexboxAre), no puede ser ejecutado, para que no carge los item al textboxarea.
            IsBuscandoPaciente=true;

            $("#modalPacientes").modal();
        }

    });

    function inputEnableEmbarazo(EstaEmbarazada){

        if(EstaEmbarazada)
        {
            $('#DatosAnterior').prop('disabled', false);
            $("#CMedEmbarazadaFecha").ejDatePicker({  enabled: true });
            $("#CMedEmbarazadaFechaProbableParto").ejDatePicker({  enabled: true });
            $('#GenerarFechaProbable').prop('disabled', false);


        }else {

            $('#DatosAnterior').prop('disabled', true);
            $("#CMedEmbarazadaFecha").ejDatePicker({  enabled: false });
            $("#CMedEmbarazadaFechaProbableParto").ejDatePicker({  enabled: false });
            $('#GenerarFechaProbable').prop('disabled', true);

        }
    }


    function updateMaintenance(objJson){
        //show screen block
        $.LoadingOverlay("show");
        $.ajax({
            type: "POST",
            async: false,
            url: '@Url.Action("updateMaintenance", ViewBag.ControlCsharp)',
            //data:JSON.stringify( {'fechEmbarazo': args.value}),
            data:JSON.stringify({'maintenance': objJson} ),
            contentType: "application/json;",
            datatype: 'json',
            cache: false,
            complete: (function () {

                $.LoadingOverlay("hide");
            }),
            success:(function (data) {
                var a=data;


                if (data.respuesta) {

                    if(data.obj=='MotivoConsulta'){

                        $('#MConsSecuencia_fk').ejDropDownList({
                            dataSource: data.someCollection,
                            fields: {
                                text: "MConsMotivoConsulta",
                                value: "MConsSecuencia"
                            }
                        });
                    }else if(data.obj=='EvaluacionFisica'){


                        $('#EFisiSecuencia_fk').ejDropDownList({
                            dataSource: data.someCollection,
                            fields: {
                                text: "EFisiCodigoNombre",
                                value: "EFisiSecuencia"
                            }
                        });
                    }
                    else if(data.obj=='Diagnostico'){

                        $('#DiagSecuencia').ejDropDownList({
                            dataSource: data.someCollection,
                            fields: {
                                text: "DiagNombre",
                                value: "DiagSecuencia"
                            }
                        });
                    }
                    else if(data.obj=='Tratamiento'){
                        $('#TratSecuencia_fk').ejDropDownList({
                            dataSource: data.someCollection,
                            fields: {
                                text: "TratNombre",
                                value: "TratSecuencia"
                            }
                        });}
                    else if(data.obj=='Enfermedad'){


                        $('#EnfeSecuenciaPersonal').ejDropDownList({
                            dataSource: data.someCollection,
                            fields: {
                                text: "EnfeNombre",
                                value: "EnfeSecuencia"
                            }
                        });

                        $('#EnfeSecuenciaFamiliar').ejDropDownList({
                            dataSource: data.someCollection,
                            fields: {
                                text: "EnfeNombre",
                                value: "EnfeSecuencia"
                            }
                        });

                    }
                    else if(data.obj=='Medicamento'){


                        $('#Consult_MediSecuencia_fk').ejDropDownList({
                            dataSource: data.someCollection,
                            fields: {
                                text: "MediNombre",
                                value: "MediSecuencia"
                            }
                        });
                    }  else if(data.obj=='AnalisisClinico'){


                        $('#Consult_AClinSecuencia_fk').ejDropDownList({
                            dataSource: data.someCollection,
                            fields: {
                                text: "AClinNombre",
                                value: "AClinSecuencia"
                            }
                        });
                    }
                    else if(data.obj=='Imagenes'){


                        $('#Consult_ImagSecuencia_fk').ejDropDownList({
                            dataSource: data.someCollection,
                            fields: {
                                text: "ImagNombre",
                                value: "ImagSecuencia"
                            }
                        });

                    }



                }
                else {
                    alertify.alert('', data.error, function () { alertify.success('Ok'); });
                }
                //else {

                //    BuscarDatosEmbarazo(args.value);

                //    $("#CMedEmbarazadaFechaProbableParto").ejDatePicker({  enabled: true });
                //}

                ////cuando devuelva del controlador la respuesta entonces se abilita el boton
                //   doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

            }),//end susccess
            error:(function (response) {
                //var r = jQuery.parseJSON(response.responseText);
                //alert("Message: " + r.Message);
                //alert("StackTrace: " + r.StackTrace);
                //alert("ExceptionType: " + r.ExceptionType);

                //function () {

                //    try {
                //        alertify.alert('','Error en controller login y no se ejecuto el result json ' );
                //    } catch (e) {
                //        alertify.alert('','Problemas en el result json del controller, favor consultar al administrador ');
                //    }
            })    //end error
        })



    }

    function calculateIMC(){

        if(($('#CMHistPeso').val().trim().length > 0)&& ($('#CMHistTalla').val().trim().length >0)){
            var imcMulti =$('#CMHistPeso').val() *$('#CMHistTalla').val();
            $('#CMHistIndiceMasaCorporal').val(imcMulti);
        }else {
            $('#CMHistIndiceMasaCorporal').val('');
        }
    }


    //document ready
    $(document).ready(function ()   {

        //fill
        ////calculate the imc
        //$('#CMHistPeso').input(function(){
        //    calculateIMC();
        //});
        ////calculate the imc
        //$('#CMHistTalla').input(function(){
        //    calculateIMC();
        //});


        //valido si esta creando o editando


        $("input").click(function (args) {

            //si es  el buscar de modal
            if(args.currentTarget.id == "Pacientes_searchbar"){
               return false;
            }

            //editando
            if ($("#" + campoSecuencia).val() > 0) {

                $("#EstadoAccion h2 span").html(" Editando");
            } else {
                $("#EstadoAccion h2 span").html(" Creando");
            }

            //if is not there  a pactient codi
            if ($("#PaciSecuencia_fk").val() <= 0) {
           
                alertify.alert('',"Por favor elija un paciente para consultar. ")
                return false;
            }


        });




        $("#CMHistPeso").on("input", function(e) {
            calculateIMC();
            //$("#outputArea").text( $(e.target).val() )
        });
        $("#CMHistTalla").on("input", function(e) {
            calculateIMC();
            //$("#outputArea").text( $(e.target).val() )
        });

        inputEnableEmbarazo($("#CMedEmbarazada").prop('checked'));

        //valid that a patient has been selected
        $('#MConsSecuencia_fk').ejDropDownList({
            beforePopupShown: function (args)
            {
                if ($("#PaciSecuencia_fk").val() <= 0) {
                    alertify.alert('',"Favor, seleccione un paciente. ")
                    args.cancel = true;
                    return false;
                }

                ////verificar si tiene datos
                //var itemsDropbo = $('#MConsSecuencia_fk').ejDropDownList("getListData");
                //if(itemsDropbo.length == 0){

                //    alertify.alert('','No tiene datos cargados');
                //}
            }
        });










        $('#MotiComentario').click(function(args){
            if ($("#PaciSecuencia_fk").val() <= 0) {
                alertify.alert('',"Favor, seleccione un paciente. ")
                args.cancel = true;
                return false;
            }
        });
        //valid that a patient has been selected
        $('#EFisiSecuencia_fk').ejDropDownList({
            beforePopupShown: function (args)
            {
                if ($("#PaciSecuencia_fk").val() <= 0) {
                    alertify.alert('',"Favor, seleccione un paciente. ")
                    args.cancel = true;
                    return false;
                }
            }
        });

        $('#EFisiComentario').click(function(args){
            if ($("#PaciSecuencia_fk").val() <= 0) {
                alertify.alert('',"Favor, seleccione un paciente. ")
                args.cancel = true;
                return false;
            }
        });

        $('#CMHistUnidadesMedidaPeso').click(function(args){
            if ($("#PaciSecuencia_fk").val() <= 0) {
                args.cancel = true;
                alertify.alert('',"Favor, seleccione un paciente. ")

                return false;
            }
        });
        $('#CMHistUnidadesMedidaTalla').click(function(args){
            if ($("#PaciSecuencia_fk").val() <= 0) {
                // args.cancel = true;
                alertify.alert('',"Favor, seleccione un paciente. ")

                return false;
            }
        });

        $("#CMHistFechaUltimaRegla").ejDatePicker({
            beforeOpen: function (args) {
                if ($("#PaciSecuencia_fk").val() <= 0) {
                    args.cancel = true;
                    alertify.alert('',"Favor, seleccione un paciente. ")

                    return false;
                }
            }
        });

        //valid that a patient has been selected
        $('#DiagSecuencia').ejDropDownList({
            beforePopupShown: function (args)
            {
                if ($("#PaciSecuencia_fk").val() <= 0) {
                    alertify.alert('',"Favor, seleccione un paciente. ")
                    args.cancel = true;
                    return false;
                }
            }
        });

        $('#DiagComentario').click(function(args){
            if ($("#PaciSecuencia_fk").val() <= 0) {
                alertify.alert('',"Favor, seleccione un paciente. ")
                args.cancel = true;
                return false;
            }
        });

        //valid that a patient has been selected
        $('#TratSecuencia_fk').ejDropDownList({
            beforePopupShown: function (args)
            {
                if ($("#PaciSecuencia_fk").val() <= 0) {
                    alertify.alert('',"Favor, seleccione un paciente. ")
                    args.cancel = true;
                    return false;
                }
            }
        });

        $('#TratComentario').click(function(args){
            if ($("#PaciSecuencia_fk").val() <= 0) {
                alertify.alert('',"Favor, seleccione un paciente. ")
                args.cancel = true;
                return false;
            }
        });

        //valid that a patient has been selected
        $('#Consult_MediSecuencia_fk').ejDropDownList({
            beforePopupShown: function (args)
            {
                if ($("#PaciSecuencia_fk").val() <= 0) {
                    alertify.alert('',"Favor, seleccione un paciente. ")
                    args.cancel = true;
                    return false;
                }
            }
        });
        $('#Consult_ImagSecuencia_fk').ejDropDownList({
            beforePopupShown: function (args)
            {
                if ($("#PaciSecuencia_fk").val() <= 0) {
                    alertify.alert('',"Favor, seleccione un paciente. ")
                    args.cancel = true;
                    return false;
                }
            }
        });
        $('#Consult_AClinSecuencia_fk').ejDropDownList({
            beforePopupShown: function (args)
            {
                if ($("#PaciSecuencia_fk").val() <= 0) {
                    alertify.alert('',"Favor, seleccione un paciente. ")
                    args.cancel = true;
                    return false;
                }
            }
        });
        $('#Consult_ReceComentario').click(function(args){
            if ($("#PaciSecuencia_fk").val() <= 0) {
                alertify.alert('',"Favor, seleccione un paciente. ")
                args.cancel = true;
                return false;
            }
        });


        $('#Familiar').click(function(args){
            if ($("#PaciSecuencia_fk").val() <= 0) {
                args.cancel = true;
                alertify.alert('',"Favor, seleccione un paciente. ")

                return false;
            }
        });
        $('#EnfeSecuenciaFamiliar').ejDropDownList({
            beforePopupShown: function (args)
            {
                if ($("#PaciSecuencia_fk").val() <= 0) {
                    alertify.alert('',"Favor, seleccione un paciente. ")
                    args.cancel = true;
                    return false;
                }

                if($('#Familiar').val().length < 1){

                    args.cancel = true;
                    alertify.alert('',"Debe seleccionar primero el familiar.");
                    return false;
                }


            }
        });

        $('#EnfeComentarioFamiliar').click(function(args){
            if ($("#PaciSecuencia_fk").val() <= 0) {
                alertify.alert('',"Favor, seleccione un paciente. ")
                args.cancel = true;
                return false;
            }
        });

        $('#EnfeSecuenciaPersonal').ejDropDownList({
            beforePopupShown: function (args)
            {
                if ($("#PaciSecuencia_fk").val() <= 0) {
                    alertify.alert('',"Favor, seleccione un paciente. ")
                    args.cancel = true;
                    return false;
                }
            }
        });

        $('#EnfeComentarioPersonal').click(function(args){
            if ($("#PaciSecuencia_fk").val() <= 0) {
                alertify.alert('',"Favor, seleccione un paciente. ")
                args.cancel = true;
                return false;
            }
        });


        $('#GSangSecuencia_fk').click(function(args){
            if ($("#PaciSecuencia_fk").val() <= 0) {
                args.cancel = true;
                alertify.alert('',"Favor, seleccione un paciente. ")

                return false;
            }
        });

        $('#CMediMenarquia').click(function(args){
            if ($("#PaciSecuencia_fk").val() <= 0) {
                args.cancel = true;
                alertify.alert('',"Favor, seleccione un paciente. ")

                return false;
            }
        });

        $('#CMediPatronMenstrual').click(function(args){
            if ($("#PaciSecuencia_fk").val() <= 0) {
                args.cancel = true;
                alertify.alert('',"Favor, seleccione un paciente. ")

                return false;
            }
        });
        $('#CMediMensutracionDuracion').click(function(args){
            if ($("#PaciSecuencia_fk").val() <= 0) {
                args.cancel = true;
                alertify.alert('',"Favor, seleccione un paciente. ")

                return false;
            }
        });


        $("#CMediFechaUltimoParto").ejDatePicker({
            beforeOpen: function (args) {
                if ($("#PaciSecuencia_fk").val() <= 0) {
                    args.cancel = true;
                    alertify.alert('',"Favor, seleccione un paciente. ")

                    return false;
                }
            }
        });
        $("#CMediFechaUltimoAborto").ejDatePicker({
            beforeOpen: function (args) {
                if ($("#PaciSecuencia_fk").val() <= 0) {
                    args.cancel = true;
                    alertify.alert('',"Favor, seleccione un paciente. ")

                    return false;
                }
            }
        });
        $("#CMediFechaUltimaMenstruacion").ejDatePicker({
            beforeOpen: function (args) {
                if ($("#PaciSecuencia_fk").val() <= 0) {
                    args.cancel = true;
                    alertify.alert('',"Favor, seleccione un paciente. ")

                    return false;
                }
            }
        });

        $("#CMediFechaUltimoPapanicolau").ejDatePicker({
            beforeOpen: function (args) {
                if ($("#PaciSecuencia_fk").val() <= 0) {
                    args.cancel = true;
                    alertify.alert('',"Favor, seleccione un paciente. ")

                    return false;
                }
            }
        });

        //show modal to maintenance flash
        $('#ActuMotivoConsulta').click(function () {
            if ($("#PaciSecuencia_fk").val() <= 0) {
                alertify.alert('',"Favor, seleccione un paciente. ")
                return false;
            }

       

            //select items selected
            $('#idDropdownlist').val('MConsSecuencia_fk');
            $('#TituloModalMaintenance').html('Motivo de Consulta');
            $('#idMaintenance').val('MotivoConsulta');
            $("#modalMaintenance").modal();
            
         

        });

        $('#ActuEvaluacionFisica').click(function () {
            if ($("#PaciSecuencia_fk").val() <= 0) {
                alertify.alert('',"Favor, seleccione un paciente. ")
                return false;
            }
            //select items selected
            $('#idDropdownlist').val('EFisiSecuencia_fk');
            $('#TituloModalMaintenance').html('Evaluación Física');
            $('#idMaintenance').val('EvaluacionFisica');
            $("#modalMaintenance").modal();
        });

        $('#ActuDiagnostico').click(function () {
            if ($("#PaciSecuencia_fk").val() <= 0) {
                alertify.alert('',"Favor, seleccione un paciente. ")
                return false;
            }
            //select items selected
            $('#idDropdownlist').val('DiagSecuencia');
            $('#TituloModalMaintenance').html('Diagnóstico');
            $('#idMaintenance').val('Diagnostico');
            $("#modalMaintenance").modal();
        });

        $('#ActuTratamiento').click(function () {
            if ($("#PaciSecuencia_fk").val() <= 0) {
                alertify.alert('',"Favor, seleccione un paciente. ")
                return false;
            }
            //select items selected
            $('#idDropdownlist').val('TratSecuencia_fk');
            $('#TituloModalMaintenance').html('Tratamiento');
            $('#idMaintenance').val('Tratamiento');
            $("#modalMaintenance").modal();
        });

        $('#ActuEnfermedad').click(function () {
            if ($("#PaciSecuencia_fk").val() <= 0) {
                alertify.alert('',"Favor, seleccione un paciente. ")
                return false;
            }
            //select items selected
            $('#idDropdownlist').val('EnfeSecuenciaPersonal');
            $('#TituloModalMaintenance').html('Enfermeda');
            $('#idMaintenance').val('Enfermedad');
            $("#modalMaintenance").modal();
        });

        $('#ActuMedicamento').click(function () {
            if ($("#PaciSecuencia_fk").val() <= 0) {
                alertify.alert('',"Favor, seleccione un paciente. ")
                return false;
            }
            //select items selected
            $('#idDropdownlist').val('Consult_MediSecuencia_fk');

            $('#TituloModalMaintenance').html('Medicamento');
            $('#idMaintenance').val('Medicamento');
            $("#modalMaintenance").modal();
        });

        $('#ActuImagenes').click(function () {
            if ($("#PaciSecuencia_fk").val() <= 0) {
                alertify.alert('',"Favor, seleccione un paciente. ")
                return false;
            }
            //select items selected
            $('#idDropdownlist').val('Consult_ImagSecuencia_fk');
            $('#TituloModalMaintenance').html('Imagen');
            $('#idMaintenance').val('Imagenes');
            $("#modalMaintenance").modal();
        });

        $('#ActuAnalisisClinico').click(function () {
            if ($("#PaciSecuencia_fk").val() <= 0) {
                alertify.alert('',"Favor, seleccione un paciente. ")
                return false;
            }
            $('#TituloModalMaintenance').html('Análisis Clínico');
            $('#idMaintenance').val('AnalisisClinico');
            //select items selected
            $('#idDropdownlist').val('Consult_AClinSecuencia_fk');
            $("#modalMaintenance").modal();
        });

        $('#btnActualizarMaintenance').click(function () {



            var mant={
                'Maintenance': $('#idMaintenance').val(),
                'Nombre': $("#NombreMaintenance").val(),
                'Descripcion': $("#DescripcionMaintenance").val()
            };

            var itemsSelectedDropdownlist=[];
            var a= $('#idDropdownlist').val();
            itemsSelectedDropdownlist= getItemsSelected(a);

            updateMaintenance(mant);

            //para cuando se  vaya a seleccionar los items que estaban seleccionados,
            //no se vuelvan a describir en el textbox
            //si tiene valor inserto la cantidad de registros que se van a seleccionar
            //por que esas seran las veces que se ejecutara  el evento onchange de dropdownlist
            //nota el array vacio tiene length 1 pero vacio.
            if(itemsSelectedDropdownlist.length > 0 && itemsSelectedDropdownlist[0] !=""){
                IsAddingFlashMaintenance=itemsSelectedDropdownlist.length;
            }

            //if dropdownli is empty then select the items
            //because  the new items was inserted (setNewLineTextonTexboxAre)
            var hasItems=[];
            hasItems= getItemsSelected(a);
            //var coun=hasItems.length ;
            //var co =   hasItems[0];
            if(hasItems.length == 1 && hasItems[0]==""){

                setItemsSelected(a,itemsSelectedDropdownlist);

                $("#modalMaintenance").modal('toggle');
                $('#idMaintenance').val('');
                $("#NombreMaintenance").val('')
                $("#DescripcionMaintenance").val('')
            }


        });


        //get items selected and selected after
        function getItemsSelected(controlCombo){

            var itemsSele=  $('#'+controlCombo).data("ejDropDownList").getSelectedValue().split(",");
            return itemsSele;

        }
        function setItemsSelected(controlCombo,arrayItems){

            //is not is empty
            if (jQuery.isEmptyObject(arrayItems) === false )
            {
                var DropDownListObj =  $('#'+controlCombo).ejDropDownList({showCheckbox : true }).data("ejDropDownList");

                DropDownListObj.selectItemByValue(arrayItems.toString());
            }

        }


        $("#CMedEmbarazada").change(function() {

            ////if is not there  a pactient codi
            //if ($("#PaciSecuencia_fk").val() <= 0) {

            //    return false;
            //}else {

            inputEnableEmbarazo($("#CMedEmbarazada").prop('checked'));
            //}

        });

        //$("#CMedEmbarazadaFechaProbableParto").ejDatePicker({  enabled: false });

        //if is editing fill data patient
        var pac =  @Html.Raw(Json.Encode(Model.PaciSecuencia_fk));

        if(pac > 0){

            //cuando cargo la vista desde una edicion
            //y se carga un combobox el metodo de asignar el valor del combobox(motivoconsulta,evaluacionfisica....)
            //se ejecuta nuevamente y me vuelve a insertar en el comentario el valor que puso razor de manera automatica
            //en el combobox, por ende se repite. y para que no pase, identifico que si la vista se muestra,
            //desde una edicion la primera asignacion de valor al combobox, no se deba ejecutar el metodo (setNewLineTextonTexboxAre)
            IsEditing=true;


            $("#PaciNombre").html('@Model.PaciNombre');
            $("#PaciApellido1").html(('@Model.PaciApellido1'+' '+'@Model.PaciApellido2'));
            $("#PaciEdad").html('@Model.PaciEdad');
            $("#PacifechaNacimientoString").html('@Model.PacifechaNacimientoString');
            $("#PaciDocumento").html('@Model.PaciDocumento');
            UltimaConsulta(@Model.PaciSecuencia_fk);

            //LLenando motivo .
            var CheckMotivo = @Html.Raw(Json.Encode(ViewBag.CheckMotivo));

            //is not is empty
            if (jQuery.isEmptyObject(CheckMotivo) === false )
            {
                var DropDownListObj =  $('#MConsSecuencia_fk').ejDropDownList({showCheckbox : true }).data("ejDropDownList");
                DropDownListObj.selectItemByValue(CheckMotivo.toString());
            }

            //LLenando Evaluacion Fisica .
            var EFisiSecuencia_fk = @Html.Raw(Json.Encode(ViewBag.CheckEvaluacionFisi));
            //is not is empty
            if (jQuery.isEmptyObject(EFisiSecuencia_fk) === false )
            {
                var DropDownListObj =  $('#EFisiSecuencia_fk').ejDropDownList({showCheckbox : true }).data("ejDropDownList");
                DropDownListObj.selectItemByValue(EFisiSecuencia_fk.toString());
            }

            //LLenando Diagnostico .
            var CheckDiagno = @Html.Raw(Json.Encode(ViewBag.CheckDiagno));
            //is not is empty
            if (jQuery.isEmptyObject(CheckDiagno) === false )
            {
                var DropDownListObj =  $('#DiagSecuencia').ejDropDownList({showCheckbox : true }).data("ejDropDownList");
                DropDownListObj.selectItemByValue(CheckDiagno.toString());
            }


            //LLenando Tratamiento .
            var CheckTrata = @Html.Raw(Json.Encode(ViewBag.CheckTrata));
            //is not is empty
            if (jQuery.isEmptyObject(CheckTrata) === false )
            {
                var DropDownListObj =  $('#TratSecuencia_fk').ejDropDownList({showCheckbox : true }).data("ejDropDownList");
                DropDownListObj.selectItemByValue(CheckTrata.toString());
            }


            //LLenando Enferemdades personales .
            var CheckEnferPerso = @Html.Raw(Json.Encode(ViewBag.CheckEnferPerso));
            //is not is empty
            if (jQuery.isEmptyObject(CheckEnferPerso) === false )
            {
                var DropDownListObj =  $('#EnfeSecuenciaPersonal').ejDropDownList({showCheckbox : true }).data("ejDropDownList");
                DropDownListObj.selectItemByValue(CheckEnferPerso.toString());
            }

            var RecetasConsulta = @Html.Raw(Json.Encode(ViewBag.RecetasConsulta));
            //LLenando recetas al editar
            if (jQuery.isEmptyObject(RecetasConsulta) === false ){
                //fill recetas del paciente en edicion
                receta =RecetasConsulta;
            }

        }
        else{
            //si no es  en edicion
            //select index 1  unidad peso y talla
            $("#CMHistUnidadesMedidaPeso").prop('selectedIndex',1);
            $("#CMHistUnidadesMedidaTalla").prop('selectedIndex', 1);
        }
















        //nuevo registro
        $("#btnNuevo").click(function () {
            //Form to clear
            var formulario = $("#" + formularioGlobal);
            resetAllControls(formulario);
            $("#CMHistUnidadesMedidaPeso").prop('selectedIndex',1);
            $("#CMHistUnidadesMedidaTalla").prop('selectedIndex', 1);
            //Limpiar lista de receta
            receta.length= 0;
            //clear combobox
            $('#MConsSecuencia_fk').ejDropDownList("clearText");
            $('#EFisiSecuencia_fk').ejDropDownList("clearText");
            $('#DiagSecuencia').ejDropDownList("clearText");
            $('#TratSecuencia_fk').ejDropDownList("clearText");
            $('#EnfeSecuenciaFamiliar').ejDropDownList("clearText");
            $('#EnfeSecuenciaPersonal').ejDropDownList("clearText");
            $('#Consult_MediSecuencia_fk').ejDropDownList("clearText");
            $('#Consult_ImagSecuencia_fk').ejDropDownList("clearText");
            $('#Consult_AClinSecuencia_fk').ejDropDownList("clearText");

            //liMPIAR DATEPICKER
            $("#CMedEmbarazadaFecha").ejDatePicker({  value : "" });
            $("#CMedEmbarazadaFechaProbableParto").ejDatePicker({  value : "" });
            $("#CMHistFechaUltimaRegla").ejDatePicker({  value : "" });
            $("#CMediFechaUltimoParto").ejDatePicker({  value : "" });
            $("#CMediFechaUltimoAborto").ejDatePicker({  value : "" });
            $("#CMediFechaUltimaMenstruacion").ejDatePicker({  value : "" });
            $("#CMediFechaUltimoPapanicolau").ejDatePicker({  value : "" });


            //grid receta clear
            var gridObj = $("#Recetas").ejGrid("instance");
            gridObj.dataSource([]);

            ////clear dataannotation
            //clearValidation(formulario);
            ////clear text
            //resetAllControls(formulario);

            //   $("#"+ formularioGlobal)[0].reset();






            //clear div de accion
            $('#EstadoAccion h2 span').empty();


            //clean patient
            $("#PaciNombre").html('');
            $("#PaciApellido1").html('');
            $("#PaciEdad").html('');
            $("#PacifechaNacimientoString").html('');
            $("#PaciDocumento").html('');
            $("#ultimaFechaDeconsulta").html('');
            $("#PaciSecuencia_fk").val('');
            $("#PaciPicture").attr("src", "/Content/AdminFiles/images/_user-alt.png?" + new Date().getTime());



        });//end btnnuevo

        //when press enter with focus in text doesn't triguet btnsave or metodo guardar
        //$("#RoleDescripcion").keypress(function (event) {
        //    //alert("ENTRO A GUARDAR Key");
        //    if (event.which == 13) {
        //        event.preventDefault();
        //    }
        //});




        //start click savedoctor
        $("#btnSave").on("click", function (e) {
            //e.preventDefault();

            if ($("#PaciSecuencia_fk").val() <= 0) {
                alertify.alert('',"Favor, seleccione un paciente. ")
                return false;
            }

            var f = $('#' + formularioGlobal).valid();

            if (f == false) {
                alertify.alert('',"Hay campos necesarios que llenar");
                return false;
            }


            if($("#CMedEmbarazadaFecha").val() != '' || $("#CMedEmbarazadaFechaProbableParto").val() != '' ){

                //if checkbox is  false
                if($('#CMedEmbarazada').is(":checked") == 0){
                    alertify.alert('',"Favor, cotejar la casilla embarazada. ");
                    return false;
                }
            }


            //si hay combox vacios en la consulta deben de llenarse

            //  motivo consulta
            if( $("#MConsSecuencia_fk").data("ejDropDownList").getSelectedValue() == ""){
                alertify.alert('','Favor seleccionar el motivo de consulta');
                return;
            }
            //  Evaluacion fisica
            if($("#EFisiSecuencia_fk").data("ejDropDownList").getSelectedValue() == ""){
                alertify.alert('','Favor seleccionar la evaluación física');
                return;
            }
            // Diagnostico
            if( $("#DiagSecuencia").data("ejDropDownList").getSelectedValue() == ""){
                alertify.alert('','Favor seleccionar el diagnóstico');
                return;
            }
            // Tratamiento
            if( $("#TratSecuencia_fk").data("ejDropDownList").getSelectedValue() == ""){
                alertify.alert('','Favor seleccionar el tratamiento');
                return;
            }



            ///*ONe way to send  data to controller*/
            //var formData = new FormData();

            ////add all controlers form to FormData
            //var other_data = $('#' + formularioGlobal).serializeArray();
            //$.each(other_data, function (key, input) {
            //    formData.append(input.name, input.value);
            //});
            ////add list agend
            //var modeldataSource = $("#Recetas").ejGrid("model.dataSource");

            //formData.append("usar_resetaCompList",modeldataSource);


            //// var it = new FormData( document.getElementById('form-id') ).entries();
            //var it = formData.entries();
            //var current = {};
            //while ( ! current.done ) {
            //    current = it.next();
            //    console.info( current )
            //}
            ////

            //var jsonfile = document.getElementById("ImagenSeleccionada").files[0];
            //formData.append("file", jsonfile);

            /*End ONe way to send  data to controller*/

            /*Second way to send  data to controller*/
            //form
            //this is a ojbect json
            var jSONfORMS = $('#' + formularioGlobal).serializeToJSON();

            //convert date dd/mm/yy on MM/dd/yyyy  consulta medica historial
            jSONfORMS.CMHistFechaUltimaRegla =convertDate(jSONfORMS.CMHistFechaUltimaRegla);
            jSONfORMS.CMHistFecha = convertDate(jSONfORMS.CMHistFecha);
            jSONfORMS.UsuaFechaCreacion =convertDate(jSONfORMS.UsuaFechaCreacion);
            jSONfORMS.UsuaFechaModificacion = convertDate(jSONfORMS.UsuaFechaModificacion);

            //convert date dd/mm/yy on MM/dd/yyyy  consulta medica embarazo
            jSONfORMS.CMEmbEmbarazadaFecha = convertDate(jSONfORMS.CMEmbEmbarazadaFecha);
            jSONfORMS.CMEmbEmbarazadaFechaProbableParto = convertDate(jSONfORMS.CMEmbEmbarazadaFechaProbableParto);

            //convert date dd/mm/yy on MM/dd/yyyy  consulta medica
            jSONfORMS.CMediFecha = convertDate(jSONfORMS.CMediFecha);
            jSONfORMS.CMedEmbarazadaFecha = convertDate(jSONfORMS.CMedEmbarazadaFecha);
            jSONfORMS.CMedEmbarazadaFechaProbableParto = convertDate(jSONfORMS.CMedEmbarazadaFechaProbableParto);
            jSONfORMS.CMediFechaUltimoParto = convertDate(jSONfORMS.CMediFechaUltimoParto);
            jSONfORMS.CMediFechaUltimoAborto = convertDate(jSONfORMS.CMediFechaUltimoAborto);
            jSONfORMS.CMediFechaUltimaMenstruacion = convertDate(jSONfORMS.CMediFechaUltimaMenstruacion);
            jSONfORMS.CMediFechaUltimoPapanicolau = convertDate(jSONfORMS.CMediFechaUltimoPapanicolau);




            ////CMedEmbarazadaFecha
            ////:
            ////"31/05/2017"
            ////CMedEmbarazadaFechaProbableParto
            ////:
            ////"07/03/2018"


            //add motive Consulting

            if( $("#MConsSecuencia_fk").data("ejDropDownList").getSelectedValue() !== ""){
                jSONfORMS.MConsSecuencia_fk = $("#MConsSecuencia_fk").data("ejDropDownList").getSelectedValue().split(",");
            }else{
                jSONfORMS.MConsSecuencia_fk=[];
            }

            //add  Evaluacion fisica
            if($("#EFisiSecuencia_fk").data("ejDropDownList").getSelectedValue() !== ""){
                jSONfORMS.EFisiSecuencia_fk = $("#EFisiSecuencia_fk").data("ejDropDownList").getSelectedValue().split(",");
            }else{
                jSONfORMS.EFisiSecuencia_fk=[];
            }
            //add Diagnostico
            if( $("#DiagSecuencia").data("ejDropDownList").getSelectedValue() !== ""){
                jSONfORMS.DiagSecuencia = $("#DiagSecuencia").data("ejDropDownList").getSelectedValue().split(",");
            }else{
                jSONfORMS.DiagSecuencia=[];
            }
            //add Tratamiento
            if( $("#TratSecuencia_fk").data("ejDropDownList").getSelectedValue() !== ""){
                jSONfORMS.TratSecuencia_fk = $("#TratSecuencia_fk").data("ejDropDownList").getSelectedValue().split(",");
            }else{
                jSONfORMS.TratSecuencia_fk=[];
            }

            //add EnfermedadPersonal
            if(  $("#EnfeSecuenciaPersonal").data("ejDropDownList").getSelectedValue() !== ""){
                jSONfORMS.EnfeSecuenciaPersonal = $("#EnfeSecuenciaPersonal").data("ejDropDownList").getSelectedValue().split(",");
            }else{
                jSONfORMS.EnfeSecuenciaPersonal=[];
            }

            //grid
            //this is a list objects json
            var gridRecet = $("#Recetas").ejGrid("model.dataSource");
            //erase the date usuacreation becouse generate problem with data annotation
            //the date convert /Date(1497182642913)/
            //when it's charged a recept with edit  the date come /Date(1497182642913)/
            //so when i save the dataannotation generate error for this formate /Date(1497182642913)/
            //so i have to erase.
            var v;
            var p;

            $.each(gridRecet,function(index,value){

                value.ReceFecha = "";
                value.UsuaFechaModificacion = "";
                value.UsuaFechaCreacion = "";
                // v = index;
                // p = value;
                //console.log(index+":"+value);
                ////convert to numeri
                ////if(jQuery.isEmptyObject(value) === false){
                //if(value != ''){

                //}

            });

            /*End Second way to send  data to controller*/
            //this is a file
            //var jfile = document.getElementById("ImagenSeleccionada").files[0];

            //var formData = new FormData();
            //var jsonfile = document.getElementById("ImagenSeleccionada").files[0];
            //formData.append('file',jsonfile);
            //formData.append('usar_Consultar',jSONfORMS);

            /* Third way to send  data to controller*/
            //var dataToSend  ={
            //    'usar_Consultar': jSONfORMS,
            //    'usar_resetaCompList': gridRecet,
            //    'file': jfile

            //};

            var dataToSend  ={
                'usar_Consultar': jSONfORMS,
                'usar_resetaCompList': gridRecet


            };


            /* End Third way to send  data to controller*/

            //button proseesand
            var btn = $(this);
            var todosbtn = $('button');
            //bloquear boton
            doct_DisabledButtonAndEventClick(btn, 'Procesando...', todosbtn);

            ////start validar si es editando
            if ($("#" + campoSecuencia).val() > 0) {

                 alertify.confirm('', '¿Seguro que desea Editar?', function () {
                  
                        //show screen block
                        $.LoadingOverlay("show");

                        //start ajax
                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("Save", ViewBag.ControlCsharp)',
                            contentType:  'application/json; charset=utf-8',
                            datatype: 'json',
                            data: JSON.stringify(dataToSend),
                            traditional:true,
                            cache: false,
                            complete:(function () {

                                $.LoadingOverlay("hide");
                            }),
                            success:(function (data) {

                                if (data.respuesta) {
                                    $("#msgExitoso").show()
                                    setTimeout('$("#msgExitoso").hide()', 3000);
                                    
                                    alertify.success('Si')

                                    //excute btnnuevo
                                    $('#btnNuevo').trigger('click');
                                    //RECARGAR GRID
                                    var gridObj = $("#Searching").ejGrid("instance");
                                    gridObj.dataSource(data.someCollection);//dataSource method


                                }
                                else {

                                    alertify.alert('', data.error, function () { alertify.success('Ok'); });
                                }

                                ////cuando devuelva del controlador la respuesta entonces se abilita el boton
                                doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);


                            }),//end susccess
                            error:(function () {

                                try {
                                    alertify.alert('', 'Error en controller login y no se ejecuto el result json ');
                                } catch (e) {
                                    alertify.alert('', 'Problemas en el result json del controller, favor consultar al administrador ');
                                }

                                //cuando devuelva del controlador la respuesta entonces se abilita el boton
                                doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);
                                //quito splash
                                //$.LoadingOverlay("hide");
                            })    //end error
                        })


                     
                 }
                     , function () {
                         ////cuando devuelva del controlador la respuesta entonces se abilita el boton
                         doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);
                         alertify.error('No')
                         return true;
                     });/*End message confirm*/
            }
                //Insertando
            else {

                //show screen block
                $.LoadingOverlay("show");

                //start ajax
                $.ajax({

                    @*type: "POST",
                        url: '@Url.Action("Save", ViewBag.ControlCsharp)',
                        data: formData,
                        dataType: 'json',//file test
                        contentType: false,//file test
                        processData: false,//file test
                        cache: false*@

                    @*type: "POST",
                        url: '@Url.Action("Save", ViewBag.ControlCsharp)',
                        contentType: "application/json;",
                        datatype: 'json',
                        data: JSON.stringify({
                            'usar_Consultar': jSONfORMS
                            ,
                            'usar_resetaCompList': gridRecet
                        }),
                        cache: false*@

                    @*type: "POST",
                        url: '@Url.Action("Save", ViewBag.ControlCsharp)',
                        contentType: "application/json;",
                        datatype: 'json',
                        data: $.toDictionary(dataToSend),
                        cache: false*@

                    //Funciona Json
                    type: "POST",
                    url: '@Url.Action("Save", ViewBag.ControlCsharp)',
                    contentType:  'application/json; charset=utf-8',
                    datatype: 'json',
                    data: JSON.stringify(dataToSend),
                    traditional:true,
                    cache: false,
                    complete:(function () {

                        $.LoadingOverlay("hide");
                    }),
                    success:(function (data) {

                        if (data.respuesta) {

                            $("#msgExitoso").show()
                            setTimeout('$("#msgExitoso").hide()', 3000);

                            //excute btnnuevo
                            $('#btnNuevo').trigger('click');
                            //Enlistar las ultimas 5 registros
                            var gridObj = $("#Searching").ejGrid("instance");
                            gridObj.dataSource(data.someCollection);//dataSource method
                        }
                        else {

                            alertify.alert('', data.error, function () { alertify.success('Ok'); });
                            //undefined doen't has  value , empty or null
                            if (data.redirect !== undefined && data.redirect !== null && data.redirect !== '') {
                                //var di = data.redirect;
                                //window.location.href = di;
                            }
                        }

                        ////cuando devuelva del controlador la respuesta entonces se abilita el boton
                        doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

                    }),//end susccess
                    error:(function () {

                        try {
                            alertify.alert('', 'Error en controller login y no se ejecuto el result json ' + throwError);
                        } catch (e) {
                            alertify.alert('', 'Problemas en el result json del controller, favor consultar al administrador ');
                        }

                        //cuando devuelva del controlador la respuesta entonces se abilita el boton
                        //  doct_EnableButtonAndEventClick($("#btnSave"), "Guardar", todosbtn);
                        //quito splash
                        //$.LoadingOverlay("hide");
                    })    //end error

                    @*//test file and list
                        type: "POST",
                        url: '@Url.Action("Save", ViewBag.ControlCsharp)',
                        contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                        //contentType: 'application/json; charset=utf-8',
                    //    contentType:false,
                    datatype: 'json',
                  //  data: JSON.stringify(dataToSend),
                    //data: {
                    //    'usar_Consultar': jSONfORMS,
                    //    'usar_resetaCompList': gridRecet,
                        //    'file': jfile    },

                    data: {
                        usar_Consultar: jSONfORMS,
                        usar_resetaCompList: gridRecet,
                        file: jfile    },
                  //  processData: false,
                    traditional:true,
                    cache: false*@



                    //Funciona con imagen
                    @*type: "POST",
                    url: '@Url.Action("Save", ViewBag.ControlCsharp)',
                    data: formData,
                    dataType: 'json',//Esta propiedad contiene el tipo de dato que esperamos recibir desde el servicio invocado
                    contentType: false,//Esta propiedad contiene el formato en el que estamos pasando nuestro parámetros al servidor.
                    processData: false,//file test
                    cache: false*@


                })
                //.complete(function () {

                //    $.LoadingOverlay("hide");
                //})
                //   .success(function (data) {

                //       if (data.respuesta) {

                //           $("#msgExitoso").show()
                //           setTimeout('$("#msgExitoso").hide()', 3000);

                //           //excute btnnuevo
                //           $('#btnNuevo').trigger('click');
                //           //Enlistar las ultimas 5 registros
                //           var gridObj = $("#Searching").ejGrid("instance");
                //           gridObj.dataSource(data.someCollection);//dataSource method
                //       }
                //       else {

                //           alertify.alert('', data.error, function () { alertify.success('Ok'); });
                //           //undefined doen't has  value , empty or null
                //           if (data.redirect !== undefined && data.redirect !== null && data.redirect !== '') {
                //               //var di = data.redirect;
                //               //window.location.href = di;
                //           }
                //       }

                //       ////cuando devuelva del controlador la respuesta entonces se abilita el boton
                //       doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

                //   })//end susccess
                //   .error(function () {

                //       try {
                //           alertify.alert('', 'Error en controller login y no se ejecuto el result json ' + throwError);
                //       } catch (e) {
                //           alertify.alert('', 'Problemas en el result json del controller, favor consultar al administrador ');
                //       }

                //       //cuando devuelva del controlador la respuesta entonces se abilita el boton
                //       //  doct_EnableButtonAndEventClick($("#btnSave"), "Guardar", todosbtn);
                //       //quito splash
                //       //$.LoadingOverlay("hide");
                //   });    //end error

            }//end validar si es editando
            doct_EnableButtonAndEventClick($("#btnSave"), "Guardar", todosbtn);
            return false;
        });//end save click



        $("#btnBorrar").click(function () {

            var f = $('#' + formularioGlobal).valid();
            if (f == false) {

                return false;
            }

            var s = $("#" + campoSecuencia).val();
            if (s == false) {
                alertify.alert('',"Favor seleccionar un role en el listado");
                return false;
            }


            //Preguntar si borrar
             alertify.confirm('', '¿Seguro que desea Borrar?', function () {
               
                    //show screen block
                    $.LoadingOverlay("show");

                    //start ajax
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("Borrar", ViewBag.ControlCsharp)',
                        data: $('#' + formularioGlobal).serialize(),
                        datatype: "application/json; charset=utf-8",
                        cache: false,
                        complete:(function () {

                            $.LoadingOverlay("hide");
                        }),
                        success:(function (data) {

                            if (data.respuesta == true) {

                                //alertify.alert('',"Borrado exitosamente!");
                                //     window.location.reload();
                                //excute btnnuevo
                                $('#btnNuevo').trigger('click');
                                //mOSTRA MESAJE DE BIEN BORRADO
                                $("#msgBorrado").show()
                                setTimeout('$("#msgBorrado").hide()', 3000);
                                
                                alertify.success('Si')

                                //RECARGAR GRID
                                var gridObj = $("#Searching").ejGrid("instance");
                                gridObj.dataSource(data.someCollection);//dataSource method

                            } else {
                                alertify.alert('', data.error, function () { alertify.success('Ok'); });
                            }

                        }),//end susccess
                        error:(function () {

                            try {
                                alertify.alert('', 'Error en controller login y no se ejecuto el result json ' );
                            } catch (e) {
                                alertify.alert('', 'Problemas en el result json del controller, favor consultar al administrador ');
                            }
                        })   //end error
                    })
                  
                
             }
                 , function () {
                    
                     alertify.error('No')
                     return true;
                 });/*End message confirm*/
        });//End  borrar




        //after pass edit set false
        //cuando cargo la vista desde una edicion
        //y se carga un combobox el metodo de asignar el valor del combobox(motivoconsulta,evaluacionfisica....)
        //se ejecuta nuevamente y me vuelve a insertar en el comentario el valor que puso razor de manera automatica
        //en el combobox, por ende se repite. y para que no pase, identifico que si la vista se muestra,
        //desde una edicion la primera asignacion de valor al combobox, no se deba ejecutar el metodo (setNewLineTextonTexboxAre)
        IsEditing=false;


    });//End document ready







    $('#GenerarFechaProbable').on('click',function(){


        if ($("#PaciSecuencia_fk").val() <= 0) {
            alertify.alert('',"Favor, seleccione un paciente. ")
            return false;
        }

        if($("#CMedEmbarazadaFecha").val() != ''){

            buscarFechaProbableParto($("#CMedEmbarazadaFecha").val() );


        }else {

            alertify.alert('',"LLenar Fecha Embarazo");
        }

    });

    function buscarFechaProbableParto(fechaEmbarazo) {

        //show screen block
        $.LoadingOverlay("show");
        //send object to controller
        //start ajax
        $.ajax({
            async:false,
            type: "POST",
            url: '@Url.Action("buscarFechaProbableParto", ViewBag.ControlCsharp)',
            data:JSON.stringify( {'fechEmbarazo': fechaEmbarazo}),
            contentType: "application/json;",
            datatype: 'json',
            cache: false,
            complete: (function () {

                $.LoadingOverlay("hide");
            }),
            success:(function (data) {

                if (data.respuesta) {
                    //llenar datos de embarazada y calcular los
                    //
                    //$("#CMedEmbarazadaFechaProbableParto").ejDatePicker({  value: new Date(data.menssage) });

                    //el formato que viene desde el servidor es de mes dia anio
                    //Tengo que convertirlo  a dia mes anio
                    // //convierto string (mes dia anio) to date (mes /dia/anio)
                    //var dt= $.datepicker.parseDate('mm/dd/yy', data.menssage);

                    //convierto el string de fecha con formato mes/dia/anio en
                    //string de formato dia mes anio
                    //var myDate = '15-07-2011';
                    //var chunks = myDate.split('-');
                    //var formattedDate = [chunks[1],chunks[0],chunks[2]].join("-");

                    var myDate = data.menssage;
                    var chunks = myDate.split('/');
                    var formattedDate = [chunks[1],chunks[0],chunks[2]].join("/");//dd/mm/yy
                    $("#CMedEmbarazadaFechaProbableParto").ejDatePicker({

                        // dateFormat: "dd/MM/yyyy",
                        value:formattedDate//, // sets the current date

                        //  // sets the date format

                    });
                    //   $('#CMedEmbarazadaFechaProbableParto').val(data.menssage);


                }
                else {

                    //  alert(data.error);
                }

                ////cuando devuelva del controlador la respuesta entonces se abilita el boton
                //   doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

            }),//end susccess
            error:(function () {

                try {
                    alertify.alert('','Error en controller login y no se ejecuto el result json ' );
                } catch (e) {
                    alertify.alert('','Problemas en el result json del controller, favor consultar al administrador ');
                }

                //cuando devuelva del controlador la respuesta entonces se abilita el boton
                //  doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

            })    //end error
        })
        //.success(function (data) {

        //    if (data.respuesta) {
        //        //llenar datos de embarazada y calcular los
        //        //
        //        //$("#CMedEmbarazadaFechaProbableParto").ejDatePicker({  value: new Date(data.menssage) });
        //        $("#CMedEmbarazadaFechaProbableParto").ejDatePicker({

        //            value: data.menssage, // sets the current date

        //            dateFormat: "dd/MM/yyyy" // sets the date format

        //        });
        //        //   $('#CMedEmbarazadaFechaProbableParto').val(data.menssage);


        //    }
        //    else {

        //        //  alert(data.error);
        //    }

        //    ////cuando devuelva del controlador la respuesta entonces se abilita el boton
        //    //   doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

        //})//end susccess
        //.error(function () {

        //    try {
        //        alertify.alert('','Error en controller login y no se ejecuto el result json ' );
        //    } catch (e) {
        //        alertify.alert('','Problemas en el result json del controller, favor consultar al administrador ');
        //    }

        //    //cuando devuelva del controlador la respuesta entonces se abilita el boton
        //    //  doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

        //});    //end error

    }




    //Datos Embarazo
    function BuscarDatosEmbarazo(fechaEmbarazo) {



        //show screen block
        $.LoadingOverlay("show");
        //send object to controller
        //start ajax
        $.ajax({
            async:false,
            type: "POST",
            url: '@Url.Action("calulosdeEmbarazo", ViewBag.ControlCsharp)',
            data:JSON.stringify( {'fechEmbarazo': fechaEmbarazo}),
            //datatype: "application/json; charset=utf-8",
            contentType: "application/json;",
            datatype: 'json',
            cache: false,
            complete: (function () {

                $.LoadingOverlay("hide");
            }),
            success:(function (data) {

                if (data.respuesta) {

                    //llenar datos de embarazada y calcular los

                    $('#CMedEmbarazadaSemanas').val(data.obj.TranscurridosSemanas);
                    $('#CMedEmbarazadaDias').val(data.obj.TranscurridosDias);
                    $('#CMedEmbarazadaMeses').val(  data.obj.TranscurridosMeses);


                    //si se pasa las 40 semanas
                    if ( $('#CMedEmbarazadaDias').val() > 280){
                        alertify.alert('',{
                            message: "La fecha de el ultimo embarazo ha pasado de 40 semanas.",
                            callback: function () {

                                $('#CMedEmbarazada').prop("checked", false);
                                $("#CMedEmbarazadaFecha").ejDatePicker({  value: "" });
                                $('#CMedEmbarazadaSemanas').val("");
                                $('#CMedEmbarazadaDias').val("");
                                $('#CMedEmbarazadaMeses').val("");

                            }
                        })

                    }


                    //$('#CMedEmbarazadaFechaProbableParto').val(consulmediHistorial.CMedEmbarazadaFechaProbablePartoString);
                }
                else {

                    //  alert(data.error);
                }

                ////cuando devuelva del controlador la respuesta entonces se abilita el boton
                //   doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

            }),//end susccess
            error:(function () {

                try {
                    alertify.alert('','Error en controller login y no se ejecuto el result json ' + throwError);
                } catch (e) {
                    alertify.alert('','Problemas en el result json del controller, favor consultar al administrador ');
                }

                //cuando devuelva del controlador la respuesta entonces se abilita el boton
                //  doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

            })    //end error
        })
        //.success(function (data) {

        //    if (data.respuesta) {

        //        //llenar datos de embarazada y calcular los

        //        $('#CMedEmbarazadaSemanas').val(data.obj.TranscurridosSemanas);
        //        $('#CMedEmbarazadaDias').val(data.obj.TranscurridosDias);
        //        $('#CMedEmbarazadaMeses').val(  data.obj.TranscurridosMeses);


        //        //si se pasa las 40 semanas
        //        if ( $('#CMedEmbarazadaDias').val() > 280){
        //            alertify.alert('',{
        //                message: "La fecha de el ultimo embarazo ha pasado de 40 semanas.",
        //                callback: function () {

        //                    $('#CMedEmbarazada').prop("checked", false);
        //                    $("#CMedEmbarazadaFecha").ejDatePicker({  value: "" });
        //                    $('#CMedEmbarazadaSemanas').val("");
        //                    $('#CMedEmbarazadaDias').val("");
        //                    $('#CMedEmbarazadaMeses').val("");

        //                }
        //            })

        //        }


        //        //$('#CMedEmbarazadaFechaProbableParto').val(consulmediHistorial.CMedEmbarazadaFechaProbablePartoString);
        //    }
        //    else {

        //        //  alert(data.error);
        //    }

        //    ////cuando devuelva del controlador la respuesta entonces se abilita el boton
        //    //   doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

        //})//end susccess
        //.error(function () {

        //    try {
        //        alertify.alert('','Error en controller login y no se ejecuto el result json ' + throwError);
        //    } catch (e) {
        //        alertify.alert('','Problemas en el result json del controller, favor consultar al administrador ');
        //    }

        //    //cuando devuelva del controlador la respuesta entonces se abilita el boton
        //    //  doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

        //});    //end error

    }






    //search  personal history
    function PersonalHistory(id){

        //show screen block
        $.LoadingOverlay("show");
        //send object to controller
        //start ajax
        $.ajax({
            type: "POST",
            async: false,
            url: '@Url.Action("buscarAntecedentesPaciente", ViewBag.ControlCsharp)',
            data:JSON.stringify( {'idPaciente': id}),
            //datatype: "application/json; charset=utf-8",
            contentType: "application/json;",
            datatype: 'json',
            cache: false,
            complete: (function () {

                $.LoadingOverlay("hide");
            }),
            success:(function (data) {


                ////clean data prenancy always
                //$("#CMedEmbarazada").prop('checked',false );
                //$('#CMedEmbarazadaSemanas').val("");
                //$('#CMedEmbarazadaDias').val("");
                //$('#CMedEmbarazadaMeses').val("");
                ////cuando set value  the onchange set value of day week and mothn
                //$("#CMedEmbarazadaFecha").ejDatePicker({  value : ""});
                //$("#CMedEmbarazadaFechaProbableParto").ejDatePicker({  value : "" });

                if (data.respuesta) {

                    var consulmediHistorial = data.dictionaryStringObjec["consulMedicaHistorial"];
                    var consulmedi = data.dictionaryStringObjec["consulMedica"];
                    var consulmediEnfeFamili= data.dictionaryStringObjec["EnfermedadFamiliar"];
                    var consulmediListEnfe= data.dictionaryStringObjec["ListaEnferPersonales"];

                    if(jQuery.isEmptyObject(consulmediEnfeFamili) === false){
                        //llenar antecedentes consulta
                        $('#EnfeComentarioFamiliar').val(consulmediEnfeFamili.EnfeComentario);
                    }

                    if(jQuery.isEmptyObject(consulmedi) === false){
                        $('#EnfeComentarioPersonal').val(consulmedi.EnfeComentario);

                        $('#CMediMenarquia').val(consulmedi.CMediMenarquia);
                        $('#CMediPatronMenstrual').val(consulmedi.CMediPatronMenstrual);
                        $("#CMediVidaSexualActiva").prop('checked',consulmedi.CMediVidaSexualActiva );
                        $('#CMediPrimerCoito').val(consulmedi.CMediPrimerCoito);
                        $('#CMediNumeroParejasSexual').val(consulmedi.CMediNumeroParejasSexual);
                        $('#CMediGestacionVeces').val(consulmedi.CMediGestacionVeces);
                        $('#CMediPartosVeces').val(consulmedi.CMediGestacionVeces);
                        $('#CMediAbortosVeces').val(consulmedi.CMediGestacionVeces);
                        $('#CMediCesariasVeces').val(consulmedi.CMediGestacionVeces);
                        $('#CMediEctopico').val(consulmedi.CMediGestacionVeces);
                        $("#CMediDismenorrea").prop('checked',consulmedi.CMediDismenorrea );
                        $('#CMediFechaUltimoParto').val(consulmedi.CMediFechaUltimoPartoString);
                        $('#CMediFechaUltimoAborto').val(consulmedi.CMediFechaUltimoAbortoString);
                        $('#CMediMenopausia').val(consulmedi.CMediMenopausia);
                        $('#CMediFechaUltimaMenstruacion').val(consulmedi.CMediFechaUltimaMenstruacionString);
                        $('#CMediFechaUltimoPapanicolau').val(consulmedi.CMediFechaUltimoPapanicolauString);

                        if(consulmedi.CMedEmbarazadaFechaString !=null && consulmedi.CMedEmbarazadaFechaString != ''){
                            inputEnableEmbarazo(consulmedi.CMedEmbarazada);
                            //llenar datos de embarazada y calcular los

                            $("#CMedEmbarazada").prop('checked',consulmedi.CMedEmbarazada );

                            //insert datos days week and month of editing
                            //$('#CMedEmbarazadaSemanas').val(consulmedi.CMedEmbarazadaSemanas);
                            //$('#CMedEmbarazadaDias').val(consulmedi.CMedEmbarazadaDias);
                            //$('#CMedEmbarazadaMeses').val(consulmedi.CMedEmbarazadaMeses);

                            //cuando set value  the onchange set value of day week and mothn but if is editing it will go out
                            $("#CMedEmbarazadaFecha").ejDatePicker({  value : (consulmedi.CMedEmbarazadaFechaString) });

                            $("#CMedEmbarazadaFechaProbableParto").ejDatePicker({  value : (consulmedi.CMedEmbarazadaFechaProbablePartoString) });

                            //realizo los calculos de dias semana y meses del embarazo
                            //BuscarDatosEmbarazo(consulmedi.CMedEmbarazadaFechaString);

                        }

                    }
                    //LLenando Enferemdades personales .
                    //is not is empty
                    if (jQuery.isEmptyObject(consulmediListEnfe) === false )
                    {
                        var DropDownListObj =  $('#EnfeSecuenciaPersonal').ejDropDownList({showCheckbox : true }).data("ejDropDownList");
                        DropDownListObj.selectItemByValue(consulmediListEnfe.toString());
                    }

                }
                else  {

                    alert(data.error);
                }

                ////cuando devuelva del controlador la respuesta entonces se abilita el boton
                //   doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

            }),//end susccess
            error:(function () {

                try {
                    alertify.alert('','Error en controller login y no se ejecuto el result json ' );
                } catch (e) {
                    alertify.alert('','Problemas en el result json del controller, favor consultar al administrador ');
                }

                //cuando devuelva del controlador la respuesta entonces se abilita el boton
                //  doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

            })    //end error


        })
        // .success(function (data) {


        //     ////clean data prenancy always
        //     //$("#CMedEmbarazada").prop('checked',false );
        //     //$('#CMedEmbarazadaSemanas').val("");
        //     //$('#CMedEmbarazadaDias').val("");
        //     //$('#CMedEmbarazadaMeses').val("");
        //     ////cuando set value  the onchange set value of day week and mothn
        //     //$("#CMedEmbarazadaFecha").ejDatePicker({  value : ""});
        //     //$("#CMedEmbarazadaFechaProbableParto").ejDatePicker({  value : "" });

        //     if (data.respuesta) {

        //         var consulmediHistorial = data.dictionaryStringObjec["consulMedicaHistorial"];
        //         var consulmedi = data.dictionaryStringObjec["consulMedica"];
        //         var consulmediEnfeFamili= data.dictionaryStringObjec["EnfermedadFamiliar"];
        //         var consulmediListEnfe= data.dictionaryStringObjec["ListaEnferPersonales"];

        //         if(jQuery.isEmptyObject(consulmediEnfeFamili) === false){
        //             //llenar antecedentes consulta
        //             $('#EnfeComentarioFamiliar').val(consulmediEnfeFamili.EnfeComentario);
        //         }

        //         if(jQuery.isEmptyObject(consulmedi) === false){
        //             $('#EnfeComentarioPersonal').val(consulmedi.EnfeComentario);
        //             $('#GSangSecuencia_fk').val(consulmedi.GSangSecuencia_fk);
        //             $('#CMediMenarquia').val(consulmedi.CMediMenarquia);
        //             $('#CMediPatronMenstrual').val(consulmedi.CMediPatronMenstrual);
        //             $("#CMediVidaSexualActiva").prop('checked',consulmedi.CMediVidaSexualActiva );
        //             $('#CMediPrimerCoito').val(consulmedi.CMediPrimerCoito);
        //             $('#CMediNumeroParejasSexual').val(consulmedi.CMediNumeroParejasSexual);
        //             $('#CMediGestacionVeces').val(consulmedi.CMediGestacionVeces);
        //             $('#CMediPartosVeces').val(consulmedi.CMediGestacionVeces);
        //             $('#CMediAbortosVeces').val(consulmedi.CMediGestacionVeces);
        //             $('#CMediCesariasVeces').val(consulmedi.CMediGestacionVeces);
        //             $('#CMediEctopico').val(consulmedi.CMediGestacionVeces);
        //             $("#CMediDismenorrea").prop('checked',consulmedi.CMediDismenorrea );
        //             $('#CMediFechaUltimoParto').val(consulmedi.CMediFechaUltimoPartoString);
        //             $('#CMediFechaUltimoAborto').val(consulmedi.CMediFechaUltimoAbortoString);
        //             $('#CMediMenopausia').val(consulmedi.CMediMenopausia);
        //             $('#CMediFechaUltimaMenstruacion').val(consulmedi.CMediFechaUltimaMenstruacionString);
        //             $('#CMediFechaUltimoPapanicolau').val(consulmedi.CMediFechaUltimoPapanicolauString);

        //             if(consulmedi.CMedEmbarazadaFechaString !=null && consulmedi.CMedEmbarazadaFechaString != ''){
        //                 inputEnableEmbarazo(consulmedi.CMedEmbarazada);
        //                 //llenar datos de embarazada y calcular los

        //                 $("#CMedEmbarazada").prop('checked',consulmedi.CMedEmbarazada );

        //                 //insert datos days week and month of editing
        //                 //$('#CMedEmbarazadaSemanas').val(consulmedi.CMedEmbarazadaSemanas);
        //                 //$('#CMedEmbarazadaDias').val(consulmedi.CMedEmbarazadaDias);
        //                 //$('#CMedEmbarazadaMeses').val(consulmedi.CMedEmbarazadaMeses);

        //                 //cuando set value  the onchange set value of day week and mothn but if is editing it will go out
        //                 $("#CMedEmbarazadaFecha").ejDatePicker({  value : (consulmedi.CMedEmbarazadaFechaString) });

        //                 $("#CMedEmbarazadaFechaProbableParto").ejDatePicker({  value : (consulmedi.CMedEmbarazadaFechaProbablePartoString) });

        //                 //realizo los calculos de dias semana y meses del embarazo
        //                 //BuscarDatosEmbarazo(consulmedi.CMedEmbarazadaFechaString);

        //             }

        //         }
        //         //LLenando Enferemdades personales .
        //         //is not is empty
        //         if (jQuery.isEmptyObject(consulmediListEnfe) === false )
        //         {
        //             var DropDownListObj =  $('#EnfeSecuenciaPersonal').ejDropDownList({showCheckbox : true }).data("ejDropDownList");
        //             DropDownListObj.selectItemByValue(consulmediListEnfe.toString());
        //         }

        //     }
        //     else  {

        //         alert(data.error);
        //     }

        //     ////cuando devuelva del controlador la respuesta entonces se abilita el boton
        //     //   doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

        // })//end susccess
        //.error(function () {

        //    try {
        //        alertify.alert('','Error en controller login y no se ejecuto el result json ' );
        //    } catch (e) {
        //        alertify.alert('','Problemas en el result json del controller, favor consultar al administrador ');
        //    }

        //    //cuando devuelva del controlador la respuesta entonces se abilita el boton
        //    //  doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

        //});    //end error

    }


   



    //fill grid
    function UltimaConsulta(id) {

        //show screen block
        $.LoadingOverlay("show");
        //send object to controller
        //start ajax
        $.ajax({
            type: "POST",
            async: false,
            url: '@Url.Action("buscarUltimaFechaConsulta",  ViewBag.ControlCsharp)',
            data:JSON.stringify( {'idPaciente': id}),
            //datatype: "application/json; charset=utf-8",
            contentType: "application/json;",
            datatype: 'json',
            cache: false,
            complete: (function () {

                $.LoadingOverlay("hide");
            }),
            success:(function (data) {

                if (data.respuesta) {

                    $('#ultimaFechaDeconsulta').html(data.menssage);

                }
                else {

                    //  alert(data.error);
                }

                ////cuando devuelva del controlador la respuesta entonces se abilita el boton
                //   doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

            }),//end susccess
            error:(function () {

                try {
                    alertify.alert('','Error en controller login y no se ejecuto el result json ' );
                } catch (e) {
                    alertify.alert('','Problemas en el result json del controller, favor consultar al administrador ');
                }

                //cuando devuelva del controlador la respuesta entonces se abilita el boton
                //  doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

            })    //end error
        })

    }







    //click edit grid 5 ultimos registros
    function onClick(args) {
        var thisobj= this;
        //New consulting
        if ($("#" + campoSecuencia).val() < 1 && $("#PaciSecuencia_fk").val() > 0) {

            alertify.confirm('', '¿Seguro que desea Editar sin antes guardar, si prosigue perdera los datos de esta nueva consulta?', function () {
              

                    EditConsulting(thisobj);
                    alertify.success('Si')
                }
                 , function () {
                     ////cuando devuelva del controlador la respuesta entonces se abilita el boton
             
                     alertify.error('No')
                     return true;
                 });/*End message confirm*/


        }else{

            EditConsulting(thisobj);
        }//end else

    }//end edit grid onClick

    //edit from grid
    function EditConsulting(args){

        //excute btnnuevo
        $('#btnNuevo').trigger('click');
        //button proseesand
        var btn = $(this);
        //var todosbtn = $('#btnDelete');
        var todosbtn = $('button');
        //bloquear boton
        doct_DisabledButtonAndEventClick(btn, 'Procesando...', todosbtn);

        var grid = $("#Searching").ejGrid("instance");
        //var index = this.element.closest("tr").index();
        var index = args.element.closest("tr").index();
        var record = grid.getCurrentViewData()[index];

        //alert("Record Details: " + JSON.stringify(record));

        //show screen block
        $.LoadingOverlay("show");

        //send object to controller
        //start ajax
        $.ajax({
            type: "POST",
            url: '@Url.Action("Editar", ViewBag.ControlCsharp)',
            dataType: "json",
            data: JSON.stringify(record),
            contentType: "application/json; charset=utf-8",
            cache: false,
            complete:(function () {
                //No utilizo el  esbloqueador bloquear por que como la pagina se recarga
                //y le puse un bloqueador y desbloqueador  en el layout no necesito este
                //   $.LoadingOverlay("hide");
            }),
            success:(function (data) {

                if (data.respuesta) {

                    var di = data.redirect;
                    window.location.href = di;
                }
                else {

                    alert(data.error);
                }


                ////cuando devuelva del controlador la respuesta entonces se abilita el boton
                doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

            }),//end susccess
            error:(function () {




                try {
                    alertify.alert('', 'Error en controller login y no se ejecuto el result json ' + throwError);
                } catch (e) {
                    alertify.alert('', 'Problemas en el result json del controller, favor consultar al administrador ');
                }

                //cuando devuelva del controlador la respuesta entonces se abilita el boton
                doct_EnableButtonAndEventClick(btn, "Guardar", todosbtn);

            })    //end error
        });

    }//end edit from grid




</script>
}